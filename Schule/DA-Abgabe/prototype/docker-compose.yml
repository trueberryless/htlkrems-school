version: "3"

name: networkanalysis
services:
    frontend:
        build:
            context: ./frontend
            args:
                - CONFIGURATION=local
        container_name: networkanalysis-frontend
        ports:
            - "80:80"

    postgres:
        image: postgres:16.2-bullseye
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: "ndfa"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d", "ndfa"]
            interval: 20s
            timeout: 15s
            retries: 5
        volumes:
            - postgresql_data:/var/lib/postgresql/data

    backend:
        build: ./backend
        ports:
            - "127.0.0.1:8080:8080"
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ndfa
            - KAFKA_BOOTSTRAP_SERVERS=kafka:19092
        depends_on:
            postgres:
                condition: "service_healthy"
            kafka:
                condition: "service_started"

    zoo:
        image: confluentinc/cp-zookeeper:7.3.2
        hostname: zoo
        #ports:
        #  - "127.0.0.1:2181:2181
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_SERVERS: zoo:2888:3888

    kafka:
        image: confluentinc/cp-kafka:7.3.2
        hostname: kafka
        ports:
            - "127.0.0.1:9092:9092"
            #- "127.0.0.1:9999:9999"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_JMX_PORT: 9999
            KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
            KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        depends_on:
            - zoo

volumes:
    postgresql_data:
