
UE06_RemotePWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001300  00001394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001300  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000047  0080011c  0080011c  000013b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000140c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001441  00000000  00000000  0000155c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b02  00000000  00000000  0000299d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ba0  00000000  00000000  0000349f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  00004040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ab  00000000  00000000  000042cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b22  00000000  00000000  00004877  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005399  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
       4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      48:	0c 94 92 02 	jmp	0x524	; 0x524 <__vector_18>
      4c:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_19>
      50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	4e 41       	sbci	r20, 0x1E	; 30
      6a:	4e 49       	Address 0x0000006a is out of bounds.
.word	0xffff	; ????

0000006b <pstr_inity>:
      6b:	49 4e 49 54 59                                      INITY

00000070 <pstr_inf>:
      70:	49 4e 46                                            INF

00000073 <pwr_m10>:
      73:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      83:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000008b <pwr_p10>:
      8b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      9b:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000a4 <__ctors_end>:
      a4:	11 24       	eor	r1, r1
      a6:	1f be       	out	0x3f, r1	; 63
      a8:	cf ef       	ldi	r28, 0xFF	; 255
      aa:	d8 e0       	ldi	r29, 0x08	; 8
      ac:	de bf       	out	0x3e, r29	; 62
      ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
      b0:	11 e0       	ldi	r17, 0x01	; 1
      b2:	a0 e0       	ldi	r26, 0x00	; 0
      b4:	b1 e0       	ldi	r27, 0x01	; 1
      b6:	e0 e0       	ldi	r30, 0x00	; 0
      b8:	f3 e1       	ldi	r31, 0x13	; 19
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x10>
      bc:	05 90       	lpm	r0, Z+
      be:	0d 92       	st	X+, r0
      c0:	ac 31       	cpi	r26, 0x1C	; 28
      c2:	b1 07       	cpc	r27, r17
      c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0xc>

000000c6 <__do_clear_bss>:
      c6:	21 e0       	ldi	r18, 0x01	; 1
      c8:	ac e1       	ldi	r26, 0x1C	; 28
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	a3 36       	cpi	r26, 0x63	; 99
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <main>
      da:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <_exit>

000000de <__bad_interrupt>:
      de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
      e2:	88 b1       	in	r24, 0x08	; 8
      e4:	81 60       	ori	r24, 0x01	; 1
      e6:	88 b9       	out	0x08, r24	; 8
      e8:	00 00       	nop
      ea:	88 b1       	in	r24, 0x08	; 8
      ec:	8e 7f       	andi	r24, 0xFE	; 254
      ee:	88 b9       	out	0x08, r24	; 8
      f0:	08 95       	ret

000000f2 <lcd_write>:
      f2:	cf 93       	push	r28
      f4:	c8 2f       	mov	r28, r24
      f6:	66 23       	and	r22, r22
      f8:	21 f0       	breq	.+8      	; 0x102 <lcd_write+0x10>
      fa:	88 b1       	in	r24, 0x08	; 8
      fc:	84 60       	ori	r24, 0x04	; 4
      fe:	88 b9       	out	0x08, r24	; 8
     100:	03 c0       	rjmp	.+6      	; 0x108 <lcd_write+0x16>
     102:	88 b1       	in	r24, 0x08	; 8
     104:	8b 7f       	andi	r24, 0xFB	; 251
     106:	88 b9       	out	0x08, r24	; 8
     108:	88 b1       	in	r24, 0x08	; 8
     10a:	8d 7f       	andi	r24, 0xFD	; 253
     10c:	88 b9       	out	0x08, r24	; 8
     10e:	8a b1       	in	r24, 0x0a	; 10
     110:	80 61       	ori	r24, 0x10	; 16
     112:	8a b9       	out	0x0a, r24	; 10
     114:	8a b1       	in	r24, 0x0a	; 10
     116:	80 62       	ori	r24, 0x20	; 32
     118:	8a b9       	out	0x0a, r24	; 10
     11a:	8a b1       	in	r24, 0x0a	; 10
     11c:	80 64       	ori	r24, 0x40	; 64
     11e:	8a b9       	out	0x0a, r24	; 10
     120:	8a b1       	in	r24, 0x0a	; 10
     122:	80 68       	ori	r24, 0x80	; 128
     124:	8a b9       	out	0x0a, r24	; 10
     126:	8b b1       	in	r24, 0x0b	; 11
     128:	8f 77       	andi	r24, 0x7F	; 127
     12a:	8b b9       	out	0x0b, r24	; 11
     12c:	8b b1       	in	r24, 0x0b	; 11
     12e:	8f 7b       	andi	r24, 0xBF	; 191
     130:	8b b9       	out	0x0b, r24	; 11
     132:	8b b1       	in	r24, 0x0b	; 11
     134:	8f 7d       	andi	r24, 0xDF	; 223
     136:	8b b9       	out	0x0b, r24	; 11
     138:	8b b1       	in	r24, 0x0b	; 11
     13a:	8f 7e       	andi	r24, 0xEF	; 239
     13c:	8b b9       	out	0x0b, r24	; 11
     13e:	cc 23       	and	r28, r28
     140:	1c f4       	brge	.+6      	; 0x148 <lcd_write+0x56>
     142:	8b b1       	in	r24, 0x0b	; 11
     144:	80 68       	ori	r24, 0x80	; 128
     146:	8b b9       	out	0x0b, r24	; 11
     148:	c6 ff       	sbrs	r28, 6
     14a:	03 c0       	rjmp	.+6      	; 0x152 <lcd_write+0x60>
     14c:	8b b1       	in	r24, 0x0b	; 11
     14e:	80 64       	ori	r24, 0x40	; 64
     150:	8b b9       	out	0x0b, r24	; 11
     152:	c5 ff       	sbrs	r28, 5
     154:	03 c0       	rjmp	.+6      	; 0x15c <lcd_write+0x6a>
     156:	8b b1       	in	r24, 0x0b	; 11
     158:	80 62       	ori	r24, 0x20	; 32
     15a:	8b b9       	out	0x0b, r24	; 11
     15c:	c4 ff       	sbrs	r28, 4
     15e:	03 c0       	rjmp	.+6      	; 0x166 <lcd_write+0x74>
     160:	8b b1       	in	r24, 0x0b	; 11
     162:	80 61       	ori	r24, 0x10	; 16
     164:	8b b9       	out	0x0b, r24	; 11
     166:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     16a:	8b b1       	in	r24, 0x0b	; 11
     16c:	8f 77       	andi	r24, 0x7F	; 127
     16e:	8b b9       	out	0x0b, r24	; 11
     170:	8b b1       	in	r24, 0x0b	; 11
     172:	8f 7b       	andi	r24, 0xBF	; 191
     174:	8b b9       	out	0x0b, r24	; 11
     176:	8b b1       	in	r24, 0x0b	; 11
     178:	8f 7d       	andi	r24, 0xDF	; 223
     17a:	8b b9       	out	0x0b, r24	; 11
     17c:	8b b1       	in	r24, 0x0b	; 11
     17e:	8f 7e       	andi	r24, 0xEF	; 239
     180:	8b b9       	out	0x0b, r24	; 11
     182:	c3 ff       	sbrs	r28, 3
     184:	03 c0       	rjmp	.+6      	; 0x18c <lcd_write+0x9a>
     186:	8b b1       	in	r24, 0x0b	; 11
     188:	80 68       	ori	r24, 0x80	; 128
     18a:	8b b9       	out	0x0b, r24	; 11
     18c:	c2 ff       	sbrs	r28, 2
     18e:	03 c0       	rjmp	.+6      	; 0x196 <lcd_write+0xa4>
     190:	8b b1       	in	r24, 0x0b	; 11
     192:	80 64       	ori	r24, 0x40	; 64
     194:	8b b9       	out	0x0b, r24	; 11
     196:	c1 ff       	sbrs	r28, 1
     198:	03 c0       	rjmp	.+6      	; 0x1a0 <lcd_write+0xae>
     19a:	8b b1       	in	r24, 0x0b	; 11
     19c:	80 62       	ori	r24, 0x20	; 32
     19e:	8b b9       	out	0x0b, r24	; 11
     1a0:	c0 ff       	sbrs	r28, 0
     1a2:	03 c0       	rjmp	.+6      	; 0x1aa <lcd_write+0xb8>
     1a4:	8b b1       	in	r24, 0x0b	; 11
     1a6:	80 61       	ori	r24, 0x10	; 16
     1a8:	8b b9       	out	0x0b, r24	; 11
     1aa:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     1ae:	8b b1       	in	r24, 0x0b	; 11
     1b0:	80 61       	ori	r24, 0x10	; 16
     1b2:	8b b9       	out	0x0b, r24	; 11
     1b4:	8b b1       	in	r24, 0x0b	; 11
     1b6:	80 62       	ori	r24, 0x20	; 32
     1b8:	8b b9       	out	0x0b, r24	; 11
     1ba:	8b b1       	in	r24, 0x0b	; 11
     1bc:	80 64       	ori	r24, 0x40	; 64
     1be:	8b b9       	out	0x0b, r24	; 11
     1c0:	8b b1       	in	r24, 0x0b	; 11
     1c2:	80 68       	ori	r24, 0x80	; 128
     1c4:	8b b9       	out	0x0b, r24	; 11
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <lcd_read>:
     1ca:	88 23       	and	r24, r24
     1cc:	21 f0       	breq	.+8      	; 0x1d6 <lcd_read+0xc>
     1ce:	88 b1       	in	r24, 0x08	; 8
     1d0:	84 60       	ori	r24, 0x04	; 4
     1d2:	88 b9       	out	0x08, r24	; 8
     1d4:	03 c0       	rjmp	.+6      	; 0x1dc <lcd_read+0x12>
     1d6:	88 b1       	in	r24, 0x08	; 8
     1d8:	8b 7f       	andi	r24, 0xFB	; 251
     1da:	88 b9       	out	0x08, r24	; 8
     1dc:	88 b1       	in	r24, 0x08	; 8
     1de:	82 60       	ori	r24, 0x02	; 2
     1e0:	88 b9       	out	0x08, r24	; 8
     1e2:	8a b1       	in	r24, 0x0a	; 10
     1e4:	8f 7e       	andi	r24, 0xEF	; 239
     1e6:	8a b9       	out	0x0a, r24	; 10
     1e8:	8a b1       	in	r24, 0x0a	; 10
     1ea:	8f 7d       	andi	r24, 0xDF	; 223
     1ec:	8a b9       	out	0x0a, r24	; 10
     1ee:	8a b1       	in	r24, 0x0a	; 10
     1f0:	8f 7b       	andi	r24, 0xBF	; 191
     1f2:	8a b9       	out	0x0a, r24	; 10
     1f4:	8a b1       	in	r24, 0x0a	; 10
     1f6:	8f 77       	andi	r24, 0x7F	; 127
     1f8:	8a b9       	out	0x0a, r24	; 10
     1fa:	88 b1       	in	r24, 0x08	; 8
     1fc:	81 60       	ori	r24, 0x01	; 1
     1fe:	88 b9       	out	0x08, r24	; 8
     200:	00 00       	nop
     202:	4c 99       	sbic	0x09, 4	; 9
     204:	02 c0       	rjmp	.+4      	; 0x20a <lcd_read+0x40>
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	01 c0       	rjmp	.+2      	; 0x20c <lcd_read+0x42>
     20a:	80 e1       	ldi	r24, 0x10	; 16
     20c:	4d 99       	sbic	0x09, 5	; 9
     20e:	80 62       	ori	r24, 0x20	; 32
     210:	4e 99       	sbic	0x09, 6	; 9
     212:	80 64       	ori	r24, 0x40	; 64
     214:	4f 99       	sbic	0x09, 7	; 9
     216:	80 68       	ori	r24, 0x80	; 128
     218:	98 b1       	in	r25, 0x08	; 8
     21a:	9e 7f       	andi	r25, 0xFE	; 254
     21c:	98 b9       	out	0x08, r25	; 8
     21e:	00 00       	nop
     220:	98 b1       	in	r25, 0x08	; 8
     222:	91 60       	ori	r25, 0x01	; 1
     224:	98 b9       	out	0x08, r25	; 8
     226:	00 00       	nop
     228:	4c 99       	sbic	0x09, 4	; 9
     22a:	81 60       	ori	r24, 0x01	; 1
     22c:	4d 99       	sbic	0x09, 5	; 9
     22e:	82 60       	ori	r24, 0x02	; 2
     230:	4e 99       	sbic	0x09, 6	; 9
     232:	84 60       	ori	r24, 0x04	; 4
     234:	4f 99       	sbic	0x09, 7	; 9
     236:	88 60       	ori	r24, 0x08	; 8
     238:	98 b1       	in	r25, 0x08	; 8
     23a:	9e 7f       	andi	r25, 0xFE	; 254
     23c:	98 b9       	out	0x08, r25	; 8
     23e:	08 95       	ret

00000240 <lcd_waitbusy>:
     240:	80 e0       	ldi	r24, 0x00	; 0
     242:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_read>
     246:	88 23       	and	r24, r24
     248:	dc f3       	brlt	.-10     	; 0x240 <lcd_waitbusy>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_waitbusy+0xc>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <lcd_waitbusy+0xe>
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_read>
     254:	08 95       	ret

00000256 <lcd_command>:
     256:	cf 93       	push	r28
     258:	c8 2f       	mov	r28, r24
     25a:	0e 94 20 01 	call	0x240	; 0x240 <lcd_waitbusy>
     25e:	60 e0       	ldi	r22, 0x00	; 0
     260:	8c 2f       	mov	r24, r28
     262:	0e 94 79 00 	call	0xf2	; 0xf2 <lcd_write>
     266:	cf 91       	pop	r28
     268:	08 95       	ret

0000026a <lcd_clrscr>:
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
     270:	08 95       	ret

00000272 <lcd_putc>:
     272:	cf 93       	push	r28
     274:	c8 2f       	mov	r28, r24
     276:	0e 94 20 01 	call	0x240	; 0x240 <lcd_waitbusy>
     27a:	ca 30       	cpi	r28, 0x0A	; 10
     27c:	49 f4       	brne	.+18     	; 0x290 <lcd_putc+0x1e>
     27e:	80 34       	cpi	r24, 0x40	; 64
     280:	10 f4       	brcc	.+4      	; 0x286 <lcd_putc+0x14>
     282:	80 e4       	ldi	r24, 0x40	; 64
     284:	01 c0       	rjmp	.+2      	; 0x288 <lcd_putc+0x16>
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	80 58       	subi	r24, 0x80	; 128
     28a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
     28e:	04 c0       	rjmp	.+8      	; 0x298 <lcd_putc+0x26>
     290:	61 e0       	ldi	r22, 0x01	; 1
     292:	8c 2f       	mov	r24, r28
     294:	0e 94 79 00 	call	0xf2	; 0xf2 <lcd_write>
     298:	cf 91       	pop	r28
     29a:	08 95       	ret

0000029c <lcd_puts>:
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	fc 01       	movw	r30, r24
     2a2:	03 c0       	rjmp	.+6      	; 0x2aa <lcd_puts+0xe>
     2a4:	0e 94 39 01 	call	0x272	; 0x272 <lcd_putc>
     2a8:	fe 01       	movw	r30, r28
     2aa:	ef 01       	movw	r28, r30
     2ac:	21 96       	adiw	r28, 0x01	; 1
     2ae:	80 81       	ld	r24, Z
     2b0:	81 11       	cpse	r24, r1
     2b2:	f8 cf       	rjmp	.-16     	; 0x2a4 <lcd_puts+0x8>
     2b4:	df 91       	pop	r29
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     2ba:	cf 93       	push	r28
     2bc:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     2be:	87 b1       	in	r24, 0x07	; 7
     2c0:	84 60       	ori	r24, 0x04	; 4
     2c2:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     2c4:	87 b1       	in	r24, 0x07	; 7
     2c6:	82 60       	ori	r24, 0x02	; 2
     2c8:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     2ca:	87 b1       	in	r24, 0x07	; 7
     2cc:	81 60       	ori	r24, 0x01	; 1
     2ce:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     2d0:	8a b1       	in	r24, 0x0a	; 10
     2d2:	80 61       	ori	r24, 0x10	; 16
     2d4:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     2d6:	8a b1       	in	r24, 0x0a	; 10
     2d8:	80 62       	ori	r24, 0x20	; 32
     2da:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     2dc:	8a b1       	in	r24, 0x0a	; 10
     2de:	80 64       	ori	r24, 0x40	; 64
     2e0:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     2e2:	8a b1       	in	r24, 0x0a	; 10
     2e4:	80 68       	ori	r24, 0x80	; 128
     2e6:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e8:	8f e9       	ldi	r24, 0x9F	; 159
     2ea:	9f e0       	ldi	r25, 0x0F	; 15
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <lcd_init+0x32>
     2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <lcd_init+0x38>
     2f2:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     2f4:	8b b1       	in	r24, 0x0b	; 11
     2f6:	80 62       	ori	r24, 0x20	; 32
     2f8:	8b b9       	out	0x0b, r24	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     2fa:	8b b1       	in	r24, 0x0b	; 11
     2fc:	80 61       	ori	r24, 0x10	; 16
     2fe:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
     300:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     304:	81 ee       	ldi	r24, 0xE1	; 225
     306:	94 e0       	ldi	r25, 0x04	; 4
     308:	01 97       	sbiw	r24, 0x01	; 1
     30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_init+0x4e>
     30c:	00 c0       	rjmp	.+0      	; 0x30e <lcd_init+0x54>
     30e:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     310:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     314:	95 e1       	ldi	r25, 0x15	; 21
     316:	9a 95       	dec	r25
     318:	f1 f7       	brne	.-4      	; 0x316 <lcd_init+0x5c>
     31a:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     31c:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     320:	85 e1       	ldi	r24, 0x15	; 21
     322:	8a 95       	dec	r24
     324:	f1 f7       	brne	.-4      	; 0x322 <lcd_init+0x68>
     326:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     328:	8b b1       	in	r24, 0x0b	; 11
     32a:	8f 7e       	andi	r24, 0xEF	; 239
     32c:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
     32e:	0e 94 71 00 	call	0xe2	; 0xe2 <toggle_e>
     332:	95 e1       	ldi	r25, 0x15	; 21
     334:	9a 95       	dec	r25
     336:	f1 f7       	brne	.-4      	; 0x334 <lcd_init+0x7a>
     338:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     33a:	88 e2       	ldi	r24, 0x28	; 40
     33c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     346:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     34a:	86 e0       	ldi	r24, 0x06	; 6
     34c:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     350:	8c 2f       	mov	r24, r28
     352:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_command>

}/* lcd_init */
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <pwm_init>:
}

void pwm_init(void)
{
	// Fast PWM mit ICR1 als TOP Wert
	TCCR1A |= (1<<WGM11);
     35a:	e0 e8       	ldi	r30, 0x80	; 128
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	80 81       	ld	r24, Z
     360:	82 60       	ori	r24, 0x02	; 2
     362:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12) | (1<<WGM13);
     364:	a1 e8       	ldi	r26, 0x81	; 129
     366:	b0 e0       	ldi	r27, 0x00	; 0
     368:	8c 91       	ld	r24, X
     36a:	88 61       	ori	r24, 0x18	; 24
     36c:	8c 93       	st	X, r24
	
	ICR1 = 124;
     36e:	8c e7       	ldi	r24, 0x7C	; 124
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     376:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	
	// PB1 Ausgang
	DDRB |= (1<<DDB1);
     37a:	84 b1       	in	r24, 0x04	; 4
     37c:	82 60       	ori	r24, 0x02	; 2
     37e:	84 b9       	out	0x04, r24	; 4
	
	// Prescaler 64
	TCCR1B |= (1<<CS10) | (1<<CS11);
     380:	8c 91       	ld	r24, X
     382:	83 60       	ori	r24, 0x03	; 3
     384:	8c 93       	st	X, r24
	
	// non-inverting Mode einstellen
	TCCR1A |= (1<<COM1A1);
     386:	80 81       	ld	r24, Z
     388:	80 68       	ori	r24, 0x80	; 128
     38a:	80 83       	st	Z, r24
     38c:	08 95       	ret

0000038e <read_string>:
}

// -1 == Error oder ETX
int read_string(unsigned char* buffer) {
     38e:	0f 93       	push	r16
     390:	1f 93       	push	r17
     392:	cf 93       	push	r28
     394:	df 93       	push	r29
     396:	8c 01       	movw	r16, r24
	for	(int i = 0; i < 10;) {
     398:	c0 e0       	ldi	r28, 0x00	; 0
     39a:	d0 e0       	ldi	r29, 0x00	; 0
     39c:	12 c0       	rjmp	.+36     	; 0x3c2 <read_string+0x34>
		unsigned int c = uart_getc();
     39e:	0e 94 05 03 	call	0x60a	; 0x60a <uart_getc>

		if(c & UART_NO_DATA) {
     3a2:	90 fd       	sbrc	r25, 0
     3a4:	0e c0       	rjmp	.+28     	; 0x3c2 <read_string+0x34>
			continue;
		}
		
		if (c & UART_FRAME_ERROR || c & UART_OVERRUN_ERROR || c & UART_BUFFER_OVERFLOW)
     3a6:	94 fd       	sbrc	r25, 4
     3a8:	12 c0       	rjmp	.+36     	; 0x3ce <read_string+0x40>
     3aa:	93 fd       	sbrc	r25, 3
     3ac:	13 c0       	rjmp	.+38     	; 0x3d4 <read_string+0x46>
     3ae:	91 fd       	sbrc	r25, 1
     3b0:	14 c0       	rjmp	.+40     	; 0x3da <read_string+0x4c>
		return -1;
		
		if (c == 0x0003)
     3b2:	83 30       	cpi	r24, 0x03	; 3
     3b4:	91 05       	cpc	r25, r1
     3b6:	a1 f0       	breq	.+40     	; 0x3e0 <read_string+0x52>
		return -1;
		
		buffer[i] = (unsigned char)c;
     3b8:	f8 01       	movw	r30, r16
     3ba:	ec 0f       	add	r30, r28
     3bc:	fd 1f       	adc	r31, r29
     3be:	80 83       	st	Z, r24
		i++;
     3c0:	21 96       	adiw	r28, 0x01	; 1
	TCCR1A |= (1<<COM1A1);
}

// -1 == Error oder ETX
int read_string(unsigned char* buffer) {
	for	(int i = 0; i < 10;) {
     3c2:	ca 30       	cpi	r28, 0x0A	; 10
     3c4:	d1 05       	cpc	r29, r1
     3c6:	5c f3       	brlt	.-42     	; 0x39e <read_string+0x10>
		
		buffer[i] = (unsigned char)c;
		i++;
	}
	
	return 0;
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	0b c0       	rjmp	.+22     	; 0x3e4 <read_string+0x56>
		if(c & UART_NO_DATA) {
			continue;
		}
		
		if (c & UART_FRAME_ERROR || c & UART_OVERRUN_ERROR || c & UART_BUFFER_OVERFLOW)
		return -1;
     3ce:	8f ef       	ldi	r24, 0xFF	; 255
     3d0:	9f ef       	ldi	r25, 0xFF	; 255
     3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <read_string+0x56>
     3d4:	8f ef       	ldi	r24, 0xFF	; 255
     3d6:	9f ef       	ldi	r25, 0xFF	; 255
     3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <read_string+0x56>
     3da:	8f ef       	ldi	r24, 0xFF	; 255
     3dc:	9f ef       	ldi	r25, 0xFF	; 255
     3de:	02 c0       	rjmp	.+4      	; 0x3e4 <read_string+0x56>
		
		if (c == 0x0003)
		return -1;
     3e0:	8f ef       	ldi	r24, 0xFF	; 255
     3e2:	9f ef       	ldi	r25, 0xFF	; 255
		buffer[i] = (unsigned char)c;
		i++;
	}
	
	return 0;
}
     3e4:	df 91       	pop	r29
     3e6:	cf 91       	pop	r28
     3e8:	1f 91       	pop	r17
     3ea:	0f 91       	pop	r16
     3ec:	08 95       	ret

000003ee <wait_for_stx>:

void wait_for_stx(void) {
	while(1) {
		unsigned int tmp = uart_getc();
     3ee:	0e 94 05 03 	call	0x60a	; 0x60a <uart_getc>
		if(tmp == 0x0002)
     3f2:	02 97       	sbiw	r24, 0x02	; 2
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <wait_for_stx>
		break;
	}
     3f6:	08 95       	ret

000003f8 <main>:

int read_string(unsigned char* input);
void wait_for_stx(void);

int main(void)
{
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	cd b7       	in	r28, 0x3d	; 61
     3fe:	de b7       	in	r29, 0x3e	; 62
     400:	65 97       	sbiw	r28, 0x15	; 21
     402:	0f b6       	in	r0, 0x3f	; 63
     404:	f8 94       	cli
     406:	de bf       	out	0x3e, r29	; 62
     408:	0f be       	out	0x3f, r0	; 63
     40a:	cd bf       	out	0x3d, r28	; 61
	lcd_init(LCD_DISP_ON);
     40c:	8c e0       	ldi	r24, 0x0C	; 12
     40e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_init>
	uart_init(UART_BAUD_SELECT(9600, F_CPU));
     412:	87 e6       	ldi	r24, 0x67	; 103
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <uart_init>
	pwm_init();
     41a:	0e 94 ad 01 	call	0x35a	; 0x35a <pwm_init>
	
	sei();
     41e:	78 94       	sei
	
	while (1)
	{
		unsigned char buffer[11] = {0};
     420:	8e 01       	movw	r16, r28
     422:	0f 5f       	subi	r16, 0xFF	; 255
     424:	1f 4f       	sbci	r17, 0xFF	; 255
     426:	8b e0       	ldi	r24, 0x0B	; 11
     428:	f8 01       	movw	r30, r16
     42a:	11 92       	st	Z+, r1
     42c:	8a 95       	dec	r24
     42e:	e9 f7       	brne	.-6      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
		
		lcd_clrscr();
     430:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
		lcd_puts("ready ...");
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	91 e0       	ldi	r25, 0x01	; 1
     438:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>

		wait_for_stx();
     43c:	0e 94 f7 01 	call	0x3ee	; 0x3ee <wait_for_stx>
		int status = read_string(buffer);
     440:	c8 01       	movw	r24, r16
     442:	0e 94 c7 01 	call	0x38e	; 0x38e <read_string>

		if (status == 0) {
     446:	89 2b       	or	r24, r25
     448:	09 f0       	breq	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     44a:	62 c0       	rjmp	.+196    	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
			lcd_clrscr();
     44c:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_clrscr>
			lcd_puts("read message\n");
     450:	8a e0       	ldi	r24, 0x0A	; 10
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>

			uart_putc(0x06);
     458:	86 e0       	ldi	r24, 0x06	; 6
     45a:	0e 94 23 03 	call	0x646	; 0x646 <uart_putc>
			
			double dc = atof(&buffer[5]);
     45e:	ce 01       	movw	r24, r28
     460:	06 96       	adiw	r24, 0x06	; 6
     462:	0e 94 c7 04 	call	0x98e	; 0x98e <atof>
     466:	6b 01       	movw	r12, r22
     468:	7c 01       	movw	r14, r24

			char b[10];
			sprintf(b, "%i", (int)dc);
     46a:	0e 94 aa 03 	call	0x754	; 0x754 <__fixsfsi>
     46e:	7f 93       	push	r23
     470:	6f 93       	push	r22
     472:	88 e1       	ldi	r24, 0x18	; 24
     474:	91 e0       	ldi	r25, 0x01	; 1
     476:	9f 93       	push	r25
     478:	8f 93       	push	r24
     47a:	05 5f       	subi	r16, 0xF5	; 245
     47c:	1f 4f       	sbci	r17, 0xFF	; 255
     47e:	1f 93       	push	r17
     480:	0f 93       	push	r16
     482:	0e 94 cb 04 	call	0x996	; 0x996 <sprintf>
			lcd_puts(b);
     486:	c8 01       	movw	r24, r16
     488:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_puts>

			OCR1A = CALC_OCR1A(MIN(100, MAX(0, dc)));
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	0f 90       	pop	r0
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	a9 01       	movw	r20, r18
     49e:	c7 01       	movw	r24, r14
     4a0:	b6 01       	movw	r22, r12
     4a2:	0e 94 a5 03 	call	0x74a	; 0x74a <__cmpsf2>
     4a6:	88 23       	and	r24, r24
     4a8:	6c f0       	brlt	.+26     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4aa:	11 e0       	ldi	r17, 0x01	; 1
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	48 ec       	ldi	r20, 0xC8	; 200
     4b2:	52 e4       	ldi	r21, 0x42	; 66
     4b4:	c7 01       	movw	r24, r14
     4b6:	b6 01       	movw	r22, r12
     4b8:	0e 94 55 04 	call	0x8aa	; 0x8aa <__gesf2>
     4bc:	18 16       	cp	r1, r24
     4be:	1c f0       	brlt	.+6      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     4c0:	10 e0       	ldi	r17, 0x00	; 0
     4c2:	01 c0       	rjmp	.+2      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     4c4:	10 e0       	ldi	r17, 0x00	; 0
     4c6:	11 11       	cpse	r17, r1
     4c8:	1a c0       	rjmp	.+52     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	a9 01       	movw	r20, r18
     4d0:	c7 01       	movw	r24, r14
     4d2:	b6 01       	movw	r22, r12
     4d4:	0e 94 a5 03 	call	0x74a	; 0x74a <__cmpsf2>
     4d8:	88 23       	and	r24, r24
     4da:	a4 f0       	brlt	.+40     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	40 ea       	ldi	r20, 0xA0	; 160
     4e2:	5f e3       	ldi	r21, 0x3F	; 63
     4e4:	c7 01       	movw	r24, r14
     4e6:	b6 01       	movw	r22, r12
     4e8:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__mulsf3>
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	40 e8       	ldi	r20, 0x80	; 128
     4f2:	5f e3       	ldi	r21, 0x3F	; 63
     4f4:	0e 94 39 03 	call	0x672	; 0x672 <__addsf3>
     4f8:	0e 94 aa 03 	call	0x754	; 0x754 <__fixsfsi>
     4fc:	05 c0       	rjmp	.+10     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     4fe:	6e e7       	ldi	r22, 0x7E	; 126
     500:	70 e0       	ldi	r23, 0x00	; 0
     502:	02 c0       	rjmp	.+4      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     504:	61 e0       	ldi	r22, 0x01	; 1
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     50c:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     510:	ff ef       	ldi	r31, 0xFF	; 255
     512:	27 ea       	ldi	r18, 0xA7	; 167
     514:	81 e6       	ldi	r24, 0x61	; 97
     516:	f1 50       	subi	r31, 0x01	; 1
     518:	20 40       	sbci	r18, 0x00	; 0
     51a:	80 40       	sbci	r24, 0x00	; 0
     51c:	e1 f7       	brne	.-8      	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
     51e:	00 c0       	rjmp	.+0      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     520:	00 00       	nop
		}
		_delay_ms(2000);
	}
     522:	7e cf       	rjmp	.-260    	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>

00000524 <__vector_18>:
ISR (UART0_RECEIVE_INTERRUPT)	
/*************************************************************************
Function: UART Receive Complete interrupt
Purpose:  called when the UART has received a character
**************************************************************************/
{
     524:	1f 92       	push	r1
     526:	0f 92       	push	r0
     528:	0f b6       	in	r0, 0x3f	; 63
     52a:	0f 92       	push	r0
     52c:	11 24       	eor	r1, r1
     52e:	2f 93       	push	r18
     530:	8f 93       	push	r24
     532:	9f 93       	push	r25
     534:	ef 93       	push	r30
     536:	ff 93       	push	r31
    unsigned char usr;
    unsigned char lastRxError;
 
 
    /* read UART status register and UART data register */
    usr  = UART0_STATUS;
     538:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    data = UART0_DATA;
     53c:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    
    /* get FEn (Frame Error) DORn (Data OverRun) UPEn (USART Parity Error) bits */
#if defined(FE) && defined(DOR) && defined(UPE)
    lastRxError = usr & (_BV(FE)|_BV(DOR)|_BV(UPE) );
#elif defined(FE0) && defined(DOR0) && defined(UPE0)
    lastRxError = usr & (_BV(FE0)|_BV(DOR0)|_BV(UPE0) );
     540:	8c 71       	andi	r24, 0x1C	; 28
#elif defined(FE) && defined(DOR)
    lastRxError = usr & (_BV(FE)|_BV(DOR) );
#endif

    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
     542:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <UART_RxHead>
     546:	ef 5f       	subi	r30, 0xFF	; 255
     548:	ef 71       	andi	r30, 0x1F	; 31
    
    if ( tmphead == UART_RxTail ) {
     54a:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <UART_RxTail>
     54e:	e9 17       	cp	r30, r25
     550:	39 f0       	breq	.+14     	; 0x560 <__vector_18+0x3c>
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
    }else{
        /* store new index */
        UART_RxHead = tmphead;
     552:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <UART_RxHead>
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	ef 5d       	subi	r30, 0xDF	; 223
     55a:	fe 4f       	sbci	r31, 0xFE	; 254
     55c:	20 83       	st	Z, r18
     55e:	01 c0       	rjmp	.+2      	; 0x562 <__vector_18+0x3e>
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
    
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
     560:	82 e0       	ldi	r24, 0x02	; 2
        /* store new index */
        UART_RxHead = tmphead;
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
    }
    UART_LastRxError |= lastRxError;   
     562:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <__data_end>
     566:	89 2b       	or	r24, r25
     568:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
}
     56c:	ff 91       	pop	r31
     56e:	ef 91       	pop	r30
     570:	9f 91       	pop	r25
     572:	8f 91       	pop	r24
     574:	2f 91       	pop	r18
     576:	0f 90       	pop	r0
     578:	0f be       	out	0x3f, r0	; 63
     57a:	0f 90       	pop	r0
     57c:	1f 90       	pop	r1
     57e:	18 95       	reti

00000580 <__vector_19>:
ISR (UART0_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART Data Register Empty interrupt
Purpose:  called when the UART is ready to transmit the next byte
**************************************************************************/
{
     580:	1f 92       	push	r1
     582:	0f 92       	push	r0
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	0f 92       	push	r0
     588:	11 24       	eor	r1, r1
     58a:	8f 93       	push	r24
     58c:	9f 93       	push	r25
     58e:	ef 93       	push	r30
     590:	ff 93       	push	r31
    unsigned char tmptail;

    
    if ( UART_TxHead != UART_TxTail) {
     592:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <UART_TxHead>
     596:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <UART_TxTail>
     59a:	98 17       	cp	r25, r24
     59c:	69 f0       	breq	.+26     	; 0x5b8 <__vector_19+0x38>
        /* calculate and store new buffer index */
        tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
     59e:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <UART_TxTail>
     5a2:	ef 5f       	subi	r30, 0xFF	; 255
     5a4:	ef 71       	andi	r30, 0x1F	; 31
        UART_TxTail = tmptail;
     5a6:	e0 93 1f 01 	sts	0x011F, r30	; 0x80011f <UART_TxTail>
        /* get one byte from buffer and write it to UART */
        UART0_DATA = UART_TxBuf[tmptail];  /* start transmission */
     5aa:	f0 e0       	ldi	r31, 0x00	; 0
     5ac:	ef 5b       	subi	r30, 0xBF	; 191
     5ae:	fe 4f       	sbci	r31, 0xFE	; 254
     5b0:	80 81       	ld	r24, Z
     5b2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     5b6:	05 c0       	rjmp	.+10     	; 0x5c2 <__vector_19+0x42>
    }else{
        /* tx buffer empty, disable UDRE interrupt */
        UART0_CONTROL &= ~_BV(UART0_UDRIE);
     5b8:	e1 ec       	ldi	r30, 0xC1	; 193
     5ba:	f0 e0       	ldi	r31, 0x00	; 0
     5bc:	80 81       	ld	r24, Z
     5be:	8f 7d       	andi	r24, 0xDF	; 223
     5c0:	80 83       	st	Z, r24
    }
}
     5c2:	ff 91       	pop	r31
     5c4:	ef 91       	pop	r30
     5c6:	9f 91       	pop	r25
     5c8:	8f 91       	pop	r24
     5ca:	0f 90       	pop	r0
     5cc:	0f be       	out	0x3f, r0	; 63
     5ce:	0f 90       	pop	r0
     5d0:	1f 90       	pop	r1
     5d2:	18 95       	reti

000005d4 <uart_init>:
Input:    baudrate using macro UART_BAUD_SELECT()
Returns:  none
**************************************************************************/
void uart_init(unsigned int baudrate)
{
    UART_TxHead = 0;
     5d4:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <UART_TxHead>
    UART_TxTail = 0;
     5d8:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <UART_TxTail>
    UART_RxHead = 0;
     5dc:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <UART_RxHead>
    UART_RxTail = 0;
     5e0:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <UART_RxTail>
#endif
#endif
#endif

    /* Set baud rate */
    if ( baudrate & 0x8000 )
     5e4:	28 2f       	mov	r18, r24
     5e6:	39 2f       	mov	r19, r25
     5e8:	33 23       	and	r19, r19
     5ea:	1c f4       	brge	.+6      	; 0x5f2 <uart_init+0x1e>
    {
        #if UART0_BIT_U2X
        UART0_STATUS = (1<<UART0_BIT_U2X);  //Enable 2x speed 
     5ec:	22 e0       	ldi	r18, 0x02	; 2
     5ee:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
        #endif
    } 
    #if defined(UART0_UBRRH)
    UART0_UBRRH = (unsigned char)((baudrate>>8)&0x80) ;
     5f2:	90 78       	andi	r25, 0x80	; 128
     5f4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    #endif    
    UART0_UBRRL = (unsigned char) (baudrate&0x00FF);
     5f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
      
    /* Enable USART receiver and transmitter and receive complete interrupt */
    UART0_CONTROL = _BV(UART0_BIT_RXCIE)|(1<<UART0_BIT_RXEN)|(1<<UART0_BIT_TXEN);
     5fc:	88 e9       	ldi	r24, 0x98	; 152
     5fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    /* Set frame format: asynchronous, 8data, no parity, 1stop bit */
    #ifdef UART0_CONTROLC
    #ifdef UART0_BIT_URSEL
    UART0_CONTROLC = (1<<UART0_BIT_URSEL)|(1<<UART0_BIT_UCSZ1)|(1<<UART0_BIT_UCSZ0);
    #else
    UART0_CONTROLC = (1<<UART0_BIT_UCSZ1)|(1<<UART0_BIT_UCSZ0);
     602:	86 e0       	ldi	r24, 0x06	; 6
     604:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     608:	08 95       	ret

0000060a <uart_getc>:
    unsigned char tmptail;
    unsigned char data;
    unsigned char lastRxError;


    if ( UART_RxHead == UART_RxTail ) {
     60a:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <UART_RxHead>
     60e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <UART_RxTail>
     612:	98 17       	cp	r25, r24
     614:	a9 f0       	breq	.+42     	; 0x640 <uart_getc+0x36>
        return UART_NO_DATA;   /* no data available */
    }
    
    /* calculate buffer index */
    tmptail = (UART_RxTail + 1) & UART_RX_BUFFER_MASK;
     616:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <UART_RxTail>
     61a:	9f 5f       	subi	r25, 0xFF	; 255
     61c:	9f 71       	andi	r25, 0x1F	; 31
    
    /* get data from receive buffer */
    data = UART_RxBuf[tmptail];
     61e:	e9 2f       	mov	r30, r25
     620:	f0 e0       	ldi	r31, 0x00	; 0
     622:	ef 5d       	subi	r30, 0xDF	; 223
     624:	fe 4f       	sbci	r31, 0xFE	; 254
     626:	20 81       	ld	r18, Z
    lastRxError = UART_LastRxError;
     628:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__data_end>
    
    /* store buffer index */
    UART_RxTail = tmptail; 
     62c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <UART_RxTail>
    
    UART_LastRxError = 0;
     630:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end>
    return (lastRxError << 8) + data;
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	98 2f       	mov	r25, r24
     638:	88 27       	eor	r24, r24
     63a:	82 0f       	add	r24, r18
     63c:	91 1d       	adc	r25, r1
     63e:	08 95       	ret
    unsigned char data;
    unsigned char lastRxError;


    if ( UART_RxHead == UART_RxTail ) {
        return UART_NO_DATA;   /* no data available */
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	91 e0       	ldi	r25, 0x01	; 1
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
     644:	08 95       	ret

00000646 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
     646:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <UART_TxHead>
     64a:	2f 5f       	subi	r18, 0xFF	; 255
     64c:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
     64e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <UART_TxTail>
     652:	29 17       	cp	r18, r25
     654:	e1 f3       	breq	.-8      	; 0x64e <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
     656:	e2 2f       	mov	r30, r18
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	ef 5b       	subi	r30, 0xBF	; 191
     65c:	fe 4f       	sbci	r31, 0xFE	; 254
     65e:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
     660:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
     664:	e1 ec       	ldi	r30, 0xC1	; 193
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	80 62       	ori	r24, 0x20	; 32
     66c:	80 83       	st	Z, r24
     66e:	08 95       	ret

00000670 <__subsf3>:
     670:	50 58       	subi	r21, 0x80	; 128

00000672 <__addsf3>:
     672:	bb 27       	eor	r27, r27
     674:	aa 27       	eor	r26, r26
     676:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__addsf3x>
     67a:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_round>
     67e:	0e 94 0d 04 	call	0x81a	; 0x81a <__fp_pscA>
     682:	38 f0       	brcs	.+14     	; 0x692 <__addsf3+0x20>
     684:	0e 94 14 04 	call	0x828	; 0x828 <__fp_pscB>
     688:	20 f0       	brcs	.+8      	; 0x692 <__addsf3+0x20>
     68a:	39 f4       	brne	.+14     	; 0x69a <__addsf3+0x28>
     68c:	9f 3f       	cpi	r25, 0xFF	; 255
     68e:	19 f4       	brne	.+6      	; 0x696 <__addsf3+0x24>
     690:	26 f4       	brtc	.+8      	; 0x69a <__addsf3+0x28>
     692:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_nan>
     696:	0e f4       	brtc	.+2      	; 0x69a <__addsf3+0x28>
     698:	e0 95       	com	r30
     69a:	e7 fb       	bst	r30, 7
     69c:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_inf>

000006a0 <__addsf3x>:
     6a0:	e9 2f       	mov	r30, r25
     6a2:	0e 94 2c 04 	call	0x858	; 0x858 <__fp_split3>
     6a6:	58 f3       	brcs	.-42     	; 0x67e <__addsf3+0xc>
     6a8:	ba 17       	cp	r27, r26
     6aa:	62 07       	cpc	r22, r18
     6ac:	73 07       	cpc	r23, r19
     6ae:	84 07       	cpc	r24, r20
     6b0:	95 07       	cpc	r25, r21
     6b2:	20 f0       	brcs	.+8      	; 0x6bc <__addsf3x+0x1c>
     6b4:	79 f4       	brne	.+30     	; 0x6d4 <__addsf3x+0x34>
     6b6:	a6 f5       	brtc	.+104    	; 0x720 <__addsf3x+0x80>
     6b8:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_zero>
     6bc:	0e f4       	brtc	.+2      	; 0x6c0 <__addsf3x+0x20>
     6be:	e0 95       	com	r30
     6c0:	0b 2e       	mov	r0, r27
     6c2:	ba 2f       	mov	r27, r26
     6c4:	a0 2d       	mov	r26, r0
     6c6:	0b 01       	movw	r0, r22
     6c8:	b9 01       	movw	r22, r18
     6ca:	90 01       	movw	r18, r0
     6cc:	0c 01       	movw	r0, r24
     6ce:	ca 01       	movw	r24, r20
     6d0:	a0 01       	movw	r20, r0
     6d2:	11 24       	eor	r1, r1
     6d4:	ff 27       	eor	r31, r31
     6d6:	59 1b       	sub	r21, r25
     6d8:	99 f0       	breq	.+38     	; 0x700 <__addsf3x+0x60>
     6da:	59 3f       	cpi	r21, 0xF9	; 249
     6dc:	50 f4       	brcc	.+20     	; 0x6f2 <__addsf3x+0x52>
     6de:	50 3e       	cpi	r21, 0xE0	; 224
     6e0:	68 f1       	brcs	.+90     	; 0x73c <__addsf3x+0x9c>
     6e2:	1a 16       	cp	r1, r26
     6e4:	f0 40       	sbci	r31, 0x00	; 0
     6e6:	a2 2f       	mov	r26, r18
     6e8:	23 2f       	mov	r18, r19
     6ea:	34 2f       	mov	r19, r20
     6ec:	44 27       	eor	r20, r20
     6ee:	58 5f       	subi	r21, 0xF8	; 248
     6f0:	f3 cf       	rjmp	.-26     	; 0x6d8 <__addsf3x+0x38>
     6f2:	46 95       	lsr	r20
     6f4:	37 95       	ror	r19
     6f6:	27 95       	ror	r18
     6f8:	a7 95       	ror	r26
     6fa:	f0 40       	sbci	r31, 0x00	; 0
     6fc:	53 95       	inc	r21
     6fe:	c9 f7       	brne	.-14     	; 0x6f2 <__addsf3x+0x52>
     700:	7e f4       	brtc	.+30     	; 0x720 <__addsf3x+0x80>
     702:	1f 16       	cp	r1, r31
     704:	ba 0b       	sbc	r27, r26
     706:	62 0b       	sbc	r22, r18
     708:	73 0b       	sbc	r23, r19
     70a:	84 0b       	sbc	r24, r20
     70c:	ba f0       	brmi	.+46     	; 0x73c <__addsf3x+0x9c>
     70e:	91 50       	subi	r25, 0x01	; 1
     710:	a1 f0       	breq	.+40     	; 0x73a <__addsf3x+0x9a>
     712:	ff 0f       	add	r31, r31
     714:	bb 1f       	adc	r27, r27
     716:	66 1f       	adc	r22, r22
     718:	77 1f       	adc	r23, r23
     71a:	88 1f       	adc	r24, r24
     71c:	c2 f7       	brpl	.-16     	; 0x70e <__addsf3x+0x6e>
     71e:	0e c0       	rjmp	.+28     	; 0x73c <__addsf3x+0x9c>
     720:	ba 0f       	add	r27, r26
     722:	62 1f       	adc	r22, r18
     724:	73 1f       	adc	r23, r19
     726:	84 1f       	adc	r24, r20
     728:	48 f4       	brcc	.+18     	; 0x73c <__addsf3x+0x9c>
     72a:	87 95       	ror	r24
     72c:	77 95       	ror	r23
     72e:	67 95       	ror	r22
     730:	b7 95       	ror	r27
     732:	f7 95       	ror	r31
     734:	9e 3f       	cpi	r25, 0xFE	; 254
     736:	08 f0       	brcs	.+2      	; 0x73a <__addsf3x+0x9a>
     738:	b0 cf       	rjmp	.-160    	; 0x69a <__addsf3+0x28>
     73a:	93 95       	inc	r25
     73c:	88 0f       	add	r24, r24
     73e:	08 f0       	brcs	.+2      	; 0x742 <__addsf3x+0xa2>
     740:	99 27       	eor	r25, r25
     742:	ee 0f       	add	r30, r30
     744:	97 95       	ror	r25
     746:	87 95       	ror	r24
     748:	08 95       	ret

0000074a <__cmpsf2>:
     74a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_cmp>
     74e:	08 f4       	brcc	.+2      	; 0x752 <__cmpsf2+0x8>
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	08 95       	ret

00000754 <__fixsfsi>:
     754:	0e 94 b1 03 	call	0x762	; 0x762 <__fixunssfsi>
     758:	68 94       	set
     75a:	b1 11       	cpse	r27, r1
     75c:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__fp_szero>
     760:	08 95       	ret

00000762 <__fixunssfsi>:
     762:	0e 94 34 04 	call	0x868	; 0x868 <__fp_splitA>
     766:	88 f0       	brcs	.+34     	; 0x78a <__fixunssfsi+0x28>
     768:	9f 57       	subi	r25, 0x7F	; 127
     76a:	98 f0       	brcs	.+38     	; 0x792 <__fixunssfsi+0x30>
     76c:	b9 2f       	mov	r27, r25
     76e:	99 27       	eor	r25, r25
     770:	b7 51       	subi	r27, 0x17	; 23
     772:	b0 f0       	brcs	.+44     	; 0x7a0 <__fixunssfsi+0x3e>
     774:	e1 f0       	breq	.+56     	; 0x7ae <__fixunssfsi+0x4c>
     776:	66 0f       	add	r22, r22
     778:	77 1f       	adc	r23, r23
     77a:	88 1f       	adc	r24, r24
     77c:	99 1f       	adc	r25, r25
     77e:	1a f0       	brmi	.+6      	; 0x786 <__fixunssfsi+0x24>
     780:	ba 95       	dec	r27
     782:	c9 f7       	brne	.-14     	; 0x776 <__fixunssfsi+0x14>
     784:	14 c0       	rjmp	.+40     	; 0x7ae <__fixunssfsi+0x4c>
     786:	b1 30       	cpi	r27, 0x01	; 1
     788:	91 f0       	breq	.+36     	; 0x7ae <__fixunssfsi+0x4c>
     78a:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_zero>
     78e:	b1 e0       	ldi	r27, 0x01	; 1
     790:	08 95       	ret
     792:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_zero>
     796:	67 2f       	mov	r22, r23
     798:	78 2f       	mov	r23, r24
     79a:	88 27       	eor	r24, r24
     79c:	b8 5f       	subi	r27, 0xF8	; 248
     79e:	39 f0       	breq	.+14     	; 0x7ae <__fixunssfsi+0x4c>
     7a0:	b9 3f       	cpi	r27, 0xF9	; 249
     7a2:	cc f3       	brlt	.-14     	; 0x796 <__fixunssfsi+0x34>
     7a4:	86 95       	lsr	r24
     7a6:	77 95       	ror	r23
     7a8:	67 95       	ror	r22
     7aa:	b3 95       	inc	r27
     7ac:	d9 f7       	brne	.-10     	; 0x7a4 <__fixunssfsi+0x42>
     7ae:	3e f4       	brtc	.+14     	; 0x7be <__fixunssfsi+0x5c>
     7b0:	90 95       	com	r25
     7b2:	80 95       	com	r24
     7b4:	70 95       	com	r23
     7b6:	61 95       	neg	r22
     7b8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ba:	8f 4f       	sbci	r24, 0xFF	; 255
     7bc:	9f 4f       	sbci	r25, 0xFF	; 255
     7be:	08 95       	ret

000007c0 <__fp_cmp>:
     7c0:	99 0f       	add	r25, r25
     7c2:	00 08       	sbc	r0, r0
     7c4:	55 0f       	add	r21, r21
     7c6:	aa 0b       	sbc	r26, r26
     7c8:	e0 e8       	ldi	r30, 0x80	; 128
     7ca:	fe ef       	ldi	r31, 0xFE	; 254
     7cc:	16 16       	cp	r1, r22
     7ce:	17 06       	cpc	r1, r23
     7d0:	e8 07       	cpc	r30, r24
     7d2:	f9 07       	cpc	r31, r25
     7d4:	c0 f0       	brcs	.+48     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7d6:	12 16       	cp	r1, r18
     7d8:	13 06       	cpc	r1, r19
     7da:	e4 07       	cpc	r30, r20
     7dc:	f5 07       	cpc	r31, r21
     7de:	98 f0       	brcs	.+38     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7e0:	62 1b       	sub	r22, r18
     7e2:	73 0b       	sbc	r23, r19
     7e4:	84 0b       	sbc	r24, r20
     7e6:	95 0b       	sbc	r25, r21
     7e8:	39 f4       	brne	.+14     	; 0x7f8 <__fp_cmp+0x38>
     7ea:	0a 26       	eor	r0, r26
     7ec:	61 f0       	breq	.+24     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7ee:	23 2b       	or	r18, r19
     7f0:	24 2b       	or	r18, r20
     7f2:	25 2b       	or	r18, r21
     7f4:	21 f4       	brne	.+8      	; 0x7fe <__fp_cmp+0x3e>
     7f6:	08 95       	ret
     7f8:	0a 26       	eor	r0, r26
     7fa:	09 f4       	brne	.+2      	; 0x7fe <__fp_cmp+0x3e>
     7fc:	a1 40       	sbci	r26, 0x01	; 1
     7fe:	a6 95       	lsr	r26
     800:	8f ef       	ldi	r24, 0xFF	; 255
     802:	81 1d       	adc	r24, r1
     804:	81 1d       	adc	r24, r1
     806:	08 95       	ret

00000808 <__fp_inf>:
     808:	97 f9       	bld	r25, 7
     80a:	9f 67       	ori	r25, 0x7F	; 127
     80c:	80 e8       	ldi	r24, 0x80	; 128
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	08 95       	ret

00000814 <__fp_nan>:
     814:	9f ef       	ldi	r25, 0xFF	; 255
     816:	80 ec       	ldi	r24, 0xC0	; 192
     818:	08 95       	ret

0000081a <__fp_pscA>:
     81a:	00 24       	eor	r0, r0
     81c:	0a 94       	dec	r0
     81e:	16 16       	cp	r1, r22
     820:	17 06       	cpc	r1, r23
     822:	18 06       	cpc	r1, r24
     824:	09 06       	cpc	r0, r25
     826:	08 95       	ret

00000828 <__fp_pscB>:
     828:	00 24       	eor	r0, r0
     82a:	0a 94       	dec	r0
     82c:	12 16       	cp	r1, r18
     82e:	13 06       	cpc	r1, r19
     830:	14 06       	cpc	r1, r20
     832:	05 06       	cpc	r0, r21
     834:	08 95       	ret

00000836 <__fp_round>:
     836:	09 2e       	mov	r0, r25
     838:	03 94       	inc	r0
     83a:	00 0c       	add	r0, r0
     83c:	11 f4       	brne	.+4      	; 0x842 <__fp_round+0xc>
     83e:	88 23       	and	r24, r24
     840:	52 f0       	brmi	.+20     	; 0x856 <__fp_round+0x20>
     842:	bb 0f       	add	r27, r27
     844:	40 f4       	brcc	.+16     	; 0x856 <__fp_round+0x20>
     846:	bf 2b       	or	r27, r31
     848:	11 f4       	brne	.+4      	; 0x84e <__fp_round+0x18>
     84a:	60 ff       	sbrs	r22, 0
     84c:	04 c0       	rjmp	.+8      	; 0x856 <__fp_round+0x20>
     84e:	6f 5f       	subi	r22, 0xFF	; 255
     850:	7f 4f       	sbci	r23, 0xFF	; 255
     852:	8f 4f       	sbci	r24, 0xFF	; 255
     854:	9f 4f       	sbci	r25, 0xFF	; 255
     856:	08 95       	ret

00000858 <__fp_split3>:
     858:	57 fd       	sbrc	r21, 7
     85a:	90 58       	subi	r25, 0x80	; 128
     85c:	44 0f       	add	r20, r20
     85e:	55 1f       	adc	r21, r21
     860:	59 f0       	breq	.+22     	; 0x878 <__fp_splitA+0x10>
     862:	5f 3f       	cpi	r21, 0xFF	; 255
     864:	71 f0       	breq	.+28     	; 0x882 <__fp_splitA+0x1a>
     866:	47 95       	ror	r20

00000868 <__fp_splitA>:
     868:	88 0f       	add	r24, r24
     86a:	97 fb       	bst	r25, 7
     86c:	99 1f       	adc	r25, r25
     86e:	61 f0       	breq	.+24     	; 0x888 <__fp_splitA+0x20>
     870:	9f 3f       	cpi	r25, 0xFF	; 255
     872:	79 f0       	breq	.+30     	; 0x892 <__fp_splitA+0x2a>
     874:	87 95       	ror	r24
     876:	08 95       	ret
     878:	12 16       	cp	r1, r18
     87a:	13 06       	cpc	r1, r19
     87c:	14 06       	cpc	r1, r20
     87e:	55 1f       	adc	r21, r21
     880:	f2 cf       	rjmp	.-28     	; 0x866 <__fp_split3+0xe>
     882:	46 95       	lsr	r20
     884:	f1 df       	rcall	.-30     	; 0x868 <__fp_splitA>
     886:	08 c0       	rjmp	.+16     	; 0x898 <__fp_splitA+0x30>
     888:	16 16       	cp	r1, r22
     88a:	17 06       	cpc	r1, r23
     88c:	18 06       	cpc	r1, r24
     88e:	99 1f       	adc	r25, r25
     890:	f1 cf       	rjmp	.-30     	; 0x874 <__fp_splitA+0xc>
     892:	86 95       	lsr	r24
     894:	71 05       	cpc	r23, r1
     896:	61 05       	cpc	r22, r1
     898:	08 94       	sec
     89a:	08 95       	ret

0000089c <__fp_zero>:
     89c:	e8 94       	clt

0000089e <__fp_szero>:
     89e:	bb 27       	eor	r27, r27
     8a0:	66 27       	eor	r22, r22
     8a2:	77 27       	eor	r23, r23
     8a4:	cb 01       	movw	r24, r22
     8a6:	97 f9       	bld	r25, 7
     8a8:	08 95       	ret

000008aa <__gesf2>:
     8aa:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_cmp>
     8ae:	08 f4       	brcc	.+2      	; 0x8b2 <__gesf2+0x8>
     8b0:	8f ef       	ldi	r24, 0xFF	; 255
     8b2:	08 95       	ret

000008b4 <__mulsf3>:
     8b4:	0e 94 6d 04 	call	0x8da	; 0x8da <__mulsf3x>
     8b8:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_round>
     8bc:	0e 94 0d 04 	call	0x81a	; 0x81a <__fp_pscA>
     8c0:	38 f0       	brcs	.+14     	; 0x8d0 <__mulsf3+0x1c>
     8c2:	0e 94 14 04 	call	0x828	; 0x828 <__fp_pscB>
     8c6:	20 f0       	brcs	.+8      	; 0x8d0 <__mulsf3+0x1c>
     8c8:	95 23       	and	r25, r21
     8ca:	11 f0       	breq	.+4      	; 0x8d0 <__mulsf3+0x1c>
     8cc:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_inf>
     8d0:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_nan>
     8d4:	11 24       	eor	r1, r1
     8d6:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__fp_szero>

000008da <__mulsf3x>:
     8da:	0e 94 2c 04 	call	0x858	; 0x858 <__fp_split3>
     8de:	70 f3       	brcs	.-36     	; 0x8bc <__mulsf3+0x8>

000008e0 <__mulsf3_pse>:
     8e0:	95 9f       	mul	r25, r21
     8e2:	c1 f3       	breq	.-16     	; 0x8d4 <__mulsf3+0x20>
     8e4:	95 0f       	add	r25, r21
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	55 1f       	adc	r21, r21
     8ea:	62 9f       	mul	r22, r18
     8ec:	f0 01       	movw	r30, r0
     8ee:	72 9f       	mul	r23, r18
     8f0:	bb 27       	eor	r27, r27
     8f2:	f0 0d       	add	r31, r0
     8f4:	b1 1d       	adc	r27, r1
     8f6:	63 9f       	mul	r22, r19
     8f8:	aa 27       	eor	r26, r26
     8fa:	f0 0d       	add	r31, r0
     8fc:	b1 1d       	adc	r27, r1
     8fe:	aa 1f       	adc	r26, r26
     900:	64 9f       	mul	r22, r20
     902:	66 27       	eor	r22, r22
     904:	b0 0d       	add	r27, r0
     906:	a1 1d       	adc	r26, r1
     908:	66 1f       	adc	r22, r22
     90a:	82 9f       	mul	r24, r18
     90c:	22 27       	eor	r18, r18
     90e:	b0 0d       	add	r27, r0
     910:	a1 1d       	adc	r26, r1
     912:	62 1f       	adc	r22, r18
     914:	73 9f       	mul	r23, r19
     916:	b0 0d       	add	r27, r0
     918:	a1 1d       	adc	r26, r1
     91a:	62 1f       	adc	r22, r18
     91c:	83 9f       	mul	r24, r19
     91e:	a0 0d       	add	r26, r0
     920:	61 1d       	adc	r22, r1
     922:	22 1f       	adc	r18, r18
     924:	74 9f       	mul	r23, r20
     926:	33 27       	eor	r19, r19
     928:	a0 0d       	add	r26, r0
     92a:	61 1d       	adc	r22, r1
     92c:	23 1f       	adc	r18, r19
     92e:	84 9f       	mul	r24, r20
     930:	60 0d       	add	r22, r0
     932:	21 1d       	adc	r18, r1
     934:	82 2f       	mov	r24, r18
     936:	76 2f       	mov	r23, r22
     938:	6a 2f       	mov	r22, r26
     93a:	11 24       	eor	r1, r1
     93c:	9f 57       	subi	r25, 0x7F	; 127
     93e:	50 40       	sbci	r21, 0x00	; 0
     940:	9a f0       	brmi	.+38     	; 0x968 <__stack+0x69>
     942:	f1 f0       	breq	.+60     	; 0x980 <__stack+0x81>
     944:	88 23       	and	r24, r24
     946:	4a f0       	brmi	.+18     	; 0x95a <__stack+0x5b>
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	bb 1f       	adc	r27, r27
     94e:	66 1f       	adc	r22, r22
     950:	77 1f       	adc	r23, r23
     952:	88 1f       	adc	r24, r24
     954:	91 50       	subi	r25, 0x01	; 1
     956:	50 40       	sbci	r21, 0x00	; 0
     958:	a9 f7       	brne	.-22     	; 0x944 <__stack+0x45>
     95a:	9e 3f       	cpi	r25, 0xFE	; 254
     95c:	51 05       	cpc	r21, r1
     95e:	80 f0       	brcs	.+32     	; 0x980 <__stack+0x81>
     960:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_inf>
     964:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__fp_szero>
     968:	5f 3f       	cpi	r21, 0xFF	; 255
     96a:	e4 f3       	brlt	.-8      	; 0x964 <__stack+0x65>
     96c:	98 3e       	cpi	r25, 0xE8	; 232
     96e:	d4 f3       	brlt	.-12     	; 0x964 <__stack+0x65>
     970:	86 95       	lsr	r24
     972:	77 95       	ror	r23
     974:	67 95       	ror	r22
     976:	b7 95       	ror	r27
     978:	f7 95       	ror	r31
     97a:	e7 95       	ror	r30
     97c:	9f 5f       	subi	r25, 0xFF	; 255
     97e:	c1 f7       	brne	.-16     	; 0x970 <__stack+0x71>
     980:	fe 2b       	or	r31, r30
     982:	88 0f       	add	r24, r24
     984:	91 1d       	adc	r25, r1
     986:	96 95       	lsr	r25
     988:	87 95       	ror	r24
     98a:	97 f9       	bld	r25, 7
     98c:	08 95       	ret

0000098e <atof>:
     98e:	66 27       	eor	r22, r22
     990:	77 27       	eor	r23, r23
     992:	0c 94 ce 06 	jmp	0xd9c	; 0xd9c <strtod>

00000996 <sprintf>:
     996:	ae e0       	ldi	r26, 0x0E	; 14
     998:	b0 e0       	ldi	r27, 0x00	; 0
     99a:	e1 ed       	ldi	r30, 0xD1	; 209
     99c:	f4 e0       	ldi	r31, 0x04	; 4
     99e:	0c 94 46 09 	jmp	0x128c	; 0x128c <__prologue_saves__+0x1c>
     9a2:	0d 89       	ldd	r16, Y+21	; 0x15
     9a4:	1e 89       	ldd	r17, Y+22	; 0x16
     9a6:	86 e0       	ldi	r24, 0x06	; 6
     9a8:	8c 83       	std	Y+4, r24	; 0x04
     9aa:	1a 83       	std	Y+2, r17	; 0x02
     9ac:	09 83       	std	Y+1, r16	; 0x01
     9ae:	8f ef       	ldi	r24, 0xFF	; 255
     9b0:	9f e7       	ldi	r25, 0x7F	; 127
     9b2:	9e 83       	std	Y+6, r25	; 0x06
     9b4:	8d 83       	std	Y+5, r24	; 0x05
     9b6:	ae 01       	movw	r20, r28
     9b8:	47 5e       	subi	r20, 0xE7	; 231
     9ba:	5f 4f       	sbci	r21, 0xFF	; 255
     9bc:	6f 89       	ldd	r22, Y+23	; 0x17
     9be:	78 8d       	ldd	r23, Y+24	; 0x18
     9c0:	ce 01       	movw	r24, r28
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	0e 94 ed 04 	call	0x9da	; 0x9da <vfprintf>
     9c8:	ef 81       	ldd	r30, Y+7	; 0x07
     9ca:	f8 85       	ldd	r31, Y+8	; 0x08
     9cc:	e0 0f       	add	r30, r16
     9ce:	f1 1f       	adc	r31, r17
     9d0:	10 82       	st	Z, r1
     9d2:	2e 96       	adiw	r28, 0x0e	; 14
     9d4:	e4 e0       	ldi	r30, 0x04	; 4
     9d6:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <__epilogue_restores__+0x1c>

000009da <vfprintf>:
     9da:	ab e0       	ldi	r26, 0x0B	; 11
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	e3 ef       	ldi	r30, 0xF3	; 243
     9e0:	f4 e0       	ldi	r31, 0x04	; 4
     9e2:	0c 94 38 09 	jmp	0x1270	; 0x1270 <__prologue_saves__>
     9e6:	6c 01       	movw	r12, r24
     9e8:	7b 01       	movw	r14, r22
     9ea:	8a 01       	movw	r16, r20
     9ec:	fc 01       	movw	r30, r24
     9ee:	17 82       	std	Z+7, r1	; 0x07
     9f0:	16 82       	std	Z+6, r1	; 0x06
     9f2:	83 81       	ldd	r24, Z+3	; 0x03
     9f4:	81 ff       	sbrs	r24, 1
     9f6:	cc c1       	rjmp	.+920    	; 0xd90 <vfprintf+0x3b6>
     9f8:	ce 01       	movw	r24, r28
     9fa:	01 96       	adiw	r24, 0x01	; 1
     9fc:	3c 01       	movw	r6, r24
     9fe:	f6 01       	movw	r30, r12
     a00:	93 81       	ldd	r25, Z+3	; 0x03
     a02:	f7 01       	movw	r30, r14
     a04:	93 fd       	sbrc	r25, 3
     a06:	85 91       	lpm	r24, Z+
     a08:	93 ff       	sbrs	r25, 3
     a0a:	81 91       	ld	r24, Z+
     a0c:	7f 01       	movw	r14, r30
     a0e:	88 23       	and	r24, r24
     a10:	09 f4       	brne	.+2      	; 0xa14 <vfprintf+0x3a>
     a12:	ba c1       	rjmp	.+884    	; 0xd88 <vfprintf+0x3ae>
     a14:	85 32       	cpi	r24, 0x25	; 37
     a16:	39 f4       	brne	.+14     	; 0xa26 <vfprintf+0x4c>
     a18:	93 fd       	sbrc	r25, 3
     a1a:	85 91       	lpm	r24, Z+
     a1c:	93 ff       	sbrs	r25, 3
     a1e:	81 91       	ld	r24, Z+
     a20:	7f 01       	movw	r14, r30
     a22:	85 32       	cpi	r24, 0x25	; 37
     a24:	29 f4       	brne	.+10     	; 0xa30 <vfprintf+0x56>
     a26:	b6 01       	movw	r22, r12
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     a2e:	e7 cf       	rjmp	.-50     	; 0x9fe <vfprintf+0x24>
     a30:	91 2c       	mov	r9, r1
     a32:	21 2c       	mov	r2, r1
     a34:	31 2c       	mov	r3, r1
     a36:	ff e1       	ldi	r31, 0x1F	; 31
     a38:	f3 15       	cp	r31, r3
     a3a:	d8 f0       	brcs	.+54     	; 0xa72 <vfprintf+0x98>
     a3c:	8b 32       	cpi	r24, 0x2B	; 43
     a3e:	79 f0       	breq	.+30     	; 0xa5e <vfprintf+0x84>
     a40:	38 f4       	brcc	.+14     	; 0xa50 <vfprintf+0x76>
     a42:	80 32       	cpi	r24, 0x20	; 32
     a44:	79 f0       	breq	.+30     	; 0xa64 <vfprintf+0x8a>
     a46:	83 32       	cpi	r24, 0x23	; 35
     a48:	a1 f4       	brne	.+40     	; 0xa72 <vfprintf+0x98>
     a4a:	23 2d       	mov	r18, r3
     a4c:	20 61       	ori	r18, 0x10	; 16
     a4e:	1d c0       	rjmp	.+58     	; 0xa8a <vfprintf+0xb0>
     a50:	8d 32       	cpi	r24, 0x2D	; 45
     a52:	61 f0       	breq	.+24     	; 0xa6c <vfprintf+0x92>
     a54:	80 33       	cpi	r24, 0x30	; 48
     a56:	69 f4       	brne	.+26     	; 0xa72 <vfprintf+0x98>
     a58:	23 2d       	mov	r18, r3
     a5a:	21 60       	ori	r18, 0x01	; 1
     a5c:	16 c0       	rjmp	.+44     	; 0xa8a <vfprintf+0xb0>
     a5e:	83 2d       	mov	r24, r3
     a60:	82 60       	ori	r24, 0x02	; 2
     a62:	38 2e       	mov	r3, r24
     a64:	e3 2d       	mov	r30, r3
     a66:	e4 60       	ori	r30, 0x04	; 4
     a68:	3e 2e       	mov	r3, r30
     a6a:	2a c0       	rjmp	.+84     	; 0xac0 <vfprintf+0xe6>
     a6c:	f3 2d       	mov	r31, r3
     a6e:	f8 60       	ori	r31, 0x08	; 8
     a70:	1d c0       	rjmp	.+58     	; 0xaac <vfprintf+0xd2>
     a72:	37 fc       	sbrc	r3, 7
     a74:	2d c0       	rjmp	.+90     	; 0xad0 <vfprintf+0xf6>
     a76:	20 ed       	ldi	r18, 0xD0	; 208
     a78:	28 0f       	add	r18, r24
     a7a:	2a 30       	cpi	r18, 0x0A	; 10
     a7c:	40 f0       	brcs	.+16     	; 0xa8e <vfprintf+0xb4>
     a7e:	8e 32       	cpi	r24, 0x2E	; 46
     a80:	b9 f4       	brne	.+46     	; 0xab0 <vfprintf+0xd6>
     a82:	36 fc       	sbrc	r3, 6
     a84:	81 c1       	rjmp	.+770    	; 0xd88 <vfprintf+0x3ae>
     a86:	23 2d       	mov	r18, r3
     a88:	20 64       	ori	r18, 0x40	; 64
     a8a:	32 2e       	mov	r3, r18
     a8c:	19 c0       	rjmp	.+50     	; 0xac0 <vfprintf+0xe6>
     a8e:	36 fe       	sbrs	r3, 6
     a90:	06 c0       	rjmp	.+12     	; 0xa9e <vfprintf+0xc4>
     a92:	8a e0       	ldi	r24, 0x0A	; 10
     a94:	98 9e       	mul	r9, r24
     a96:	20 0d       	add	r18, r0
     a98:	11 24       	eor	r1, r1
     a9a:	92 2e       	mov	r9, r18
     a9c:	11 c0       	rjmp	.+34     	; 0xac0 <vfprintf+0xe6>
     a9e:	ea e0       	ldi	r30, 0x0A	; 10
     aa0:	2e 9e       	mul	r2, r30
     aa2:	20 0d       	add	r18, r0
     aa4:	11 24       	eor	r1, r1
     aa6:	22 2e       	mov	r2, r18
     aa8:	f3 2d       	mov	r31, r3
     aaa:	f0 62       	ori	r31, 0x20	; 32
     aac:	3f 2e       	mov	r3, r31
     aae:	08 c0       	rjmp	.+16     	; 0xac0 <vfprintf+0xe6>
     ab0:	8c 36       	cpi	r24, 0x6C	; 108
     ab2:	21 f4       	brne	.+8      	; 0xabc <vfprintf+0xe2>
     ab4:	83 2d       	mov	r24, r3
     ab6:	80 68       	ori	r24, 0x80	; 128
     ab8:	38 2e       	mov	r3, r24
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <vfprintf+0xe6>
     abc:	88 36       	cpi	r24, 0x68	; 104
     abe:	41 f4       	brne	.+16     	; 0xad0 <vfprintf+0xf6>
     ac0:	f7 01       	movw	r30, r14
     ac2:	93 fd       	sbrc	r25, 3
     ac4:	85 91       	lpm	r24, Z+
     ac6:	93 ff       	sbrs	r25, 3
     ac8:	81 91       	ld	r24, Z+
     aca:	7f 01       	movw	r14, r30
     acc:	81 11       	cpse	r24, r1
     ace:	b3 cf       	rjmp	.-154    	; 0xa36 <vfprintf+0x5c>
     ad0:	98 2f       	mov	r25, r24
     ad2:	9f 7d       	andi	r25, 0xDF	; 223
     ad4:	95 54       	subi	r25, 0x45	; 69
     ad6:	93 30       	cpi	r25, 0x03	; 3
     ad8:	28 f4       	brcc	.+10     	; 0xae4 <vfprintf+0x10a>
     ada:	0c 5f       	subi	r16, 0xFC	; 252
     adc:	1f 4f       	sbci	r17, 0xFF	; 255
     ade:	9f e3       	ldi	r25, 0x3F	; 63
     ae0:	99 83       	std	Y+1, r25	; 0x01
     ae2:	0d c0       	rjmp	.+26     	; 0xafe <vfprintf+0x124>
     ae4:	83 36       	cpi	r24, 0x63	; 99
     ae6:	31 f0       	breq	.+12     	; 0xaf4 <vfprintf+0x11a>
     ae8:	83 37       	cpi	r24, 0x73	; 115
     aea:	71 f0       	breq	.+28     	; 0xb08 <vfprintf+0x12e>
     aec:	83 35       	cpi	r24, 0x53	; 83
     aee:	09 f0       	breq	.+2      	; 0xaf2 <vfprintf+0x118>
     af0:	59 c0       	rjmp	.+178    	; 0xba4 <vfprintf+0x1ca>
     af2:	21 c0       	rjmp	.+66     	; 0xb36 <vfprintf+0x15c>
     af4:	f8 01       	movw	r30, r16
     af6:	80 81       	ld	r24, Z
     af8:	89 83       	std	Y+1, r24	; 0x01
     afa:	0e 5f       	subi	r16, 0xFE	; 254
     afc:	1f 4f       	sbci	r17, 0xFF	; 255
     afe:	88 24       	eor	r8, r8
     b00:	83 94       	inc	r8
     b02:	91 2c       	mov	r9, r1
     b04:	53 01       	movw	r10, r6
     b06:	13 c0       	rjmp	.+38     	; 0xb2e <vfprintf+0x154>
     b08:	28 01       	movw	r4, r16
     b0a:	f2 e0       	ldi	r31, 0x02	; 2
     b0c:	4f 0e       	add	r4, r31
     b0e:	51 1c       	adc	r5, r1
     b10:	f8 01       	movw	r30, r16
     b12:	a0 80       	ld	r10, Z
     b14:	b1 80       	ldd	r11, Z+1	; 0x01
     b16:	36 fe       	sbrs	r3, 6
     b18:	03 c0       	rjmp	.+6      	; 0xb20 <vfprintf+0x146>
     b1a:	69 2d       	mov	r22, r9
     b1c:	70 e0       	ldi	r23, 0x00	; 0
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <vfprintf+0x14a>
     b20:	6f ef       	ldi	r22, 0xFF	; 255
     b22:	7f ef       	ldi	r23, 0xFF	; 255
     b24:	c5 01       	movw	r24, r10
     b26:	0e 94 48 08 	call	0x1090	; 0x1090 <strnlen>
     b2a:	4c 01       	movw	r8, r24
     b2c:	82 01       	movw	r16, r4
     b2e:	f3 2d       	mov	r31, r3
     b30:	ff 77       	andi	r31, 0x7F	; 127
     b32:	3f 2e       	mov	r3, r31
     b34:	16 c0       	rjmp	.+44     	; 0xb62 <vfprintf+0x188>
     b36:	28 01       	movw	r4, r16
     b38:	22 e0       	ldi	r18, 0x02	; 2
     b3a:	42 0e       	add	r4, r18
     b3c:	51 1c       	adc	r5, r1
     b3e:	f8 01       	movw	r30, r16
     b40:	a0 80       	ld	r10, Z
     b42:	b1 80       	ldd	r11, Z+1	; 0x01
     b44:	36 fe       	sbrs	r3, 6
     b46:	03 c0       	rjmp	.+6      	; 0xb4e <vfprintf+0x174>
     b48:	69 2d       	mov	r22, r9
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <vfprintf+0x178>
     b4e:	6f ef       	ldi	r22, 0xFF	; 255
     b50:	7f ef       	ldi	r23, 0xFF	; 255
     b52:	c5 01       	movw	r24, r10
     b54:	0e 94 3d 08 	call	0x107a	; 0x107a <strnlen_P>
     b58:	4c 01       	movw	r8, r24
     b5a:	f3 2d       	mov	r31, r3
     b5c:	f0 68       	ori	r31, 0x80	; 128
     b5e:	3f 2e       	mov	r3, r31
     b60:	82 01       	movw	r16, r4
     b62:	33 fc       	sbrc	r3, 3
     b64:	1b c0       	rjmp	.+54     	; 0xb9c <vfprintf+0x1c2>
     b66:	82 2d       	mov	r24, r2
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	88 16       	cp	r8, r24
     b6c:	99 06       	cpc	r9, r25
     b6e:	b0 f4       	brcc	.+44     	; 0xb9c <vfprintf+0x1c2>
     b70:	b6 01       	movw	r22, r12
     b72:	80 e2       	ldi	r24, 0x20	; 32
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     b7a:	2a 94       	dec	r2
     b7c:	f4 cf       	rjmp	.-24     	; 0xb66 <vfprintf+0x18c>
     b7e:	f5 01       	movw	r30, r10
     b80:	37 fc       	sbrc	r3, 7
     b82:	85 91       	lpm	r24, Z+
     b84:	37 fe       	sbrs	r3, 7
     b86:	81 91       	ld	r24, Z+
     b88:	5f 01       	movw	r10, r30
     b8a:	b6 01       	movw	r22, r12
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     b92:	21 10       	cpse	r2, r1
     b94:	2a 94       	dec	r2
     b96:	21 e0       	ldi	r18, 0x01	; 1
     b98:	82 1a       	sub	r8, r18
     b9a:	91 08       	sbc	r9, r1
     b9c:	81 14       	cp	r8, r1
     b9e:	91 04       	cpc	r9, r1
     ba0:	71 f7       	brne	.-36     	; 0xb7e <vfprintf+0x1a4>
     ba2:	e8 c0       	rjmp	.+464    	; 0xd74 <vfprintf+0x39a>
     ba4:	84 36       	cpi	r24, 0x64	; 100
     ba6:	11 f0       	breq	.+4      	; 0xbac <vfprintf+0x1d2>
     ba8:	89 36       	cpi	r24, 0x69	; 105
     baa:	41 f5       	brne	.+80     	; 0xbfc <vfprintf+0x222>
     bac:	f8 01       	movw	r30, r16
     bae:	37 fe       	sbrs	r3, 7
     bb0:	07 c0       	rjmp	.+14     	; 0xbc0 <vfprintf+0x1e6>
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	0c 5f       	subi	r16, 0xFC	; 252
     bbc:	1f 4f       	sbci	r17, 0xFF	; 255
     bbe:	08 c0       	rjmp	.+16     	; 0xbd0 <vfprintf+0x1f6>
     bc0:	60 81       	ld	r22, Z
     bc2:	71 81       	ldd	r23, Z+1	; 0x01
     bc4:	07 2e       	mov	r0, r23
     bc6:	00 0c       	add	r0, r0
     bc8:	88 0b       	sbc	r24, r24
     bca:	99 0b       	sbc	r25, r25
     bcc:	0e 5f       	subi	r16, 0xFE	; 254
     bce:	1f 4f       	sbci	r17, 0xFF	; 255
     bd0:	f3 2d       	mov	r31, r3
     bd2:	ff 76       	andi	r31, 0x6F	; 111
     bd4:	3f 2e       	mov	r3, r31
     bd6:	97 ff       	sbrs	r25, 7
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <vfprintf+0x212>
     bda:	90 95       	com	r25
     bdc:	80 95       	com	r24
     bde:	70 95       	com	r23
     be0:	61 95       	neg	r22
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	8f 4f       	sbci	r24, 0xFF	; 255
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	f0 68       	ori	r31, 0x80	; 128
     bea:	3f 2e       	mov	r3, r31
     bec:	2a e0       	ldi	r18, 0x0A	; 10
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	a3 01       	movw	r20, r6
     bf2:	0e 94 8f 08 	call	0x111e	; 0x111e <__ultoa_invert>
     bf6:	88 2e       	mov	r8, r24
     bf8:	86 18       	sub	r8, r6
     bfa:	45 c0       	rjmp	.+138    	; 0xc86 <vfprintf+0x2ac>
     bfc:	85 37       	cpi	r24, 0x75	; 117
     bfe:	31 f4       	brne	.+12     	; 0xc0c <vfprintf+0x232>
     c00:	23 2d       	mov	r18, r3
     c02:	2f 7e       	andi	r18, 0xEF	; 239
     c04:	b2 2e       	mov	r11, r18
     c06:	2a e0       	ldi	r18, 0x0A	; 10
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	25 c0       	rjmp	.+74     	; 0xc56 <vfprintf+0x27c>
     c0c:	93 2d       	mov	r25, r3
     c0e:	99 7f       	andi	r25, 0xF9	; 249
     c10:	b9 2e       	mov	r11, r25
     c12:	8f 36       	cpi	r24, 0x6F	; 111
     c14:	c1 f0       	breq	.+48     	; 0xc46 <vfprintf+0x26c>
     c16:	18 f4       	brcc	.+6      	; 0xc1e <vfprintf+0x244>
     c18:	88 35       	cpi	r24, 0x58	; 88
     c1a:	79 f0       	breq	.+30     	; 0xc3a <vfprintf+0x260>
     c1c:	b5 c0       	rjmp	.+362    	; 0xd88 <vfprintf+0x3ae>
     c1e:	80 37       	cpi	r24, 0x70	; 112
     c20:	19 f0       	breq	.+6      	; 0xc28 <vfprintf+0x24e>
     c22:	88 37       	cpi	r24, 0x78	; 120
     c24:	21 f0       	breq	.+8      	; 0xc2e <vfprintf+0x254>
     c26:	b0 c0       	rjmp	.+352    	; 0xd88 <vfprintf+0x3ae>
     c28:	e9 2f       	mov	r30, r25
     c2a:	e0 61       	ori	r30, 0x10	; 16
     c2c:	be 2e       	mov	r11, r30
     c2e:	b4 fe       	sbrs	r11, 4
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <vfprintf+0x272>
     c32:	fb 2d       	mov	r31, r11
     c34:	f4 60       	ori	r31, 0x04	; 4
     c36:	bf 2e       	mov	r11, r31
     c38:	09 c0       	rjmp	.+18     	; 0xc4c <vfprintf+0x272>
     c3a:	34 fe       	sbrs	r3, 4
     c3c:	0a c0       	rjmp	.+20     	; 0xc52 <vfprintf+0x278>
     c3e:	29 2f       	mov	r18, r25
     c40:	26 60       	ori	r18, 0x06	; 6
     c42:	b2 2e       	mov	r11, r18
     c44:	06 c0       	rjmp	.+12     	; 0xc52 <vfprintf+0x278>
     c46:	28 e0       	ldi	r18, 0x08	; 8
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	05 c0       	rjmp	.+10     	; 0xc56 <vfprintf+0x27c>
     c4c:	20 e1       	ldi	r18, 0x10	; 16
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <vfprintf+0x27c>
     c52:	20 e1       	ldi	r18, 0x10	; 16
     c54:	32 e0       	ldi	r19, 0x02	; 2
     c56:	f8 01       	movw	r30, r16
     c58:	b7 fe       	sbrs	r11, 7
     c5a:	07 c0       	rjmp	.+14     	; 0xc6a <vfprintf+0x290>
     c5c:	60 81       	ld	r22, Z
     c5e:	71 81       	ldd	r23, Z+1	; 0x01
     c60:	82 81       	ldd	r24, Z+2	; 0x02
     c62:	93 81       	ldd	r25, Z+3	; 0x03
     c64:	0c 5f       	subi	r16, 0xFC	; 252
     c66:	1f 4f       	sbci	r17, 0xFF	; 255
     c68:	06 c0       	rjmp	.+12     	; 0xc76 <vfprintf+0x29c>
     c6a:	60 81       	ld	r22, Z
     c6c:	71 81       	ldd	r23, Z+1	; 0x01
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	0e 5f       	subi	r16, 0xFE	; 254
     c74:	1f 4f       	sbci	r17, 0xFF	; 255
     c76:	a3 01       	movw	r20, r6
     c78:	0e 94 8f 08 	call	0x111e	; 0x111e <__ultoa_invert>
     c7c:	88 2e       	mov	r8, r24
     c7e:	86 18       	sub	r8, r6
     c80:	fb 2d       	mov	r31, r11
     c82:	ff 77       	andi	r31, 0x7F	; 127
     c84:	3f 2e       	mov	r3, r31
     c86:	36 fe       	sbrs	r3, 6
     c88:	0d c0       	rjmp	.+26     	; 0xca4 <vfprintf+0x2ca>
     c8a:	23 2d       	mov	r18, r3
     c8c:	2e 7f       	andi	r18, 0xFE	; 254
     c8e:	a2 2e       	mov	r10, r18
     c90:	89 14       	cp	r8, r9
     c92:	58 f4       	brcc	.+22     	; 0xcaa <vfprintf+0x2d0>
     c94:	34 fe       	sbrs	r3, 4
     c96:	0b c0       	rjmp	.+22     	; 0xcae <vfprintf+0x2d4>
     c98:	32 fc       	sbrc	r3, 2
     c9a:	09 c0       	rjmp	.+18     	; 0xcae <vfprintf+0x2d4>
     c9c:	83 2d       	mov	r24, r3
     c9e:	8e 7e       	andi	r24, 0xEE	; 238
     ca0:	a8 2e       	mov	r10, r24
     ca2:	05 c0       	rjmp	.+10     	; 0xcae <vfprintf+0x2d4>
     ca4:	b8 2c       	mov	r11, r8
     ca6:	a3 2c       	mov	r10, r3
     ca8:	03 c0       	rjmp	.+6      	; 0xcb0 <vfprintf+0x2d6>
     caa:	b8 2c       	mov	r11, r8
     cac:	01 c0       	rjmp	.+2      	; 0xcb0 <vfprintf+0x2d6>
     cae:	b9 2c       	mov	r11, r9
     cb0:	a4 fe       	sbrs	r10, 4
     cb2:	0f c0       	rjmp	.+30     	; 0xcd2 <vfprintf+0x2f8>
     cb4:	fe 01       	movw	r30, r28
     cb6:	e8 0d       	add	r30, r8
     cb8:	f1 1d       	adc	r31, r1
     cba:	80 81       	ld	r24, Z
     cbc:	80 33       	cpi	r24, 0x30	; 48
     cbe:	21 f4       	brne	.+8      	; 0xcc8 <vfprintf+0x2ee>
     cc0:	9a 2d       	mov	r25, r10
     cc2:	99 7e       	andi	r25, 0xE9	; 233
     cc4:	a9 2e       	mov	r10, r25
     cc6:	09 c0       	rjmp	.+18     	; 0xcda <vfprintf+0x300>
     cc8:	a2 fe       	sbrs	r10, 2
     cca:	06 c0       	rjmp	.+12     	; 0xcd8 <vfprintf+0x2fe>
     ccc:	b3 94       	inc	r11
     cce:	b3 94       	inc	r11
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <vfprintf+0x300>
     cd2:	8a 2d       	mov	r24, r10
     cd4:	86 78       	andi	r24, 0x86	; 134
     cd6:	09 f0       	breq	.+2      	; 0xcda <vfprintf+0x300>
     cd8:	b3 94       	inc	r11
     cda:	a3 fc       	sbrc	r10, 3
     cdc:	11 c0       	rjmp	.+34     	; 0xd00 <vfprintf+0x326>
     cde:	a0 fe       	sbrs	r10, 0
     ce0:	06 c0       	rjmp	.+12     	; 0xcee <vfprintf+0x314>
     ce2:	b2 14       	cp	r11, r2
     ce4:	88 f4       	brcc	.+34     	; 0xd08 <vfprintf+0x32e>
     ce6:	28 0c       	add	r2, r8
     ce8:	92 2c       	mov	r9, r2
     cea:	9b 18       	sub	r9, r11
     cec:	0e c0       	rjmp	.+28     	; 0xd0a <vfprintf+0x330>
     cee:	b2 14       	cp	r11, r2
     cf0:	60 f4       	brcc	.+24     	; 0xd0a <vfprintf+0x330>
     cf2:	b6 01       	movw	r22, r12
     cf4:	80 e2       	ldi	r24, 0x20	; 32
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     cfc:	b3 94       	inc	r11
     cfe:	f7 cf       	rjmp	.-18     	; 0xcee <vfprintf+0x314>
     d00:	b2 14       	cp	r11, r2
     d02:	18 f4       	brcc	.+6      	; 0xd0a <vfprintf+0x330>
     d04:	2b 18       	sub	r2, r11
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <vfprintf+0x332>
     d08:	98 2c       	mov	r9, r8
     d0a:	21 2c       	mov	r2, r1
     d0c:	a4 fe       	sbrs	r10, 4
     d0e:	10 c0       	rjmp	.+32     	; 0xd30 <vfprintf+0x356>
     d10:	b6 01       	movw	r22, r12
     d12:	80 e3       	ldi	r24, 0x30	; 48
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     d1a:	a2 fe       	sbrs	r10, 2
     d1c:	17 c0       	rjmp	.+46     	; 0xd4c <vfprintf+0x372>
     d1e:	a1 fc       	sbrc	r10, 1
     d20:	03 c0       	rjmp	.+6      	; 0xd28 <vfprintf+0x34e>
     d22:	88 e7       	ldi	r24, 0x78	; 120
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <vfprintf+0x352>
     d28:	88 e5       	ldi	r24, 0x58	; 88
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	b6 01       	movw	r22, r12
     d2e:	0c c0       	rjmp	.+24     	; 0xd48 <vfprintf+0x36e>
     d30:	8a 2d       	mov	r24, r10
     d32:	86 78       	andi	r24, 0x86	; 134
     d34:	59 f0       	breq	.+22     	; 0xd4c <vfprintf+0x372>
     d36:	a1 fe       	sbrs	r10, 1
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <vfprintf+0x364>
     d3a:	8b e2       	ldi	r24, 0x2B	; 43
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <vfprintf+0x366>
     d3e:	80 e2       	ldi	r24, 0x20	; 32
     d40:	a7 fc       	sbrc	r10, 7
     d42:	8d e2       	ldi	r24, 0x2D	; 45
     d44:	b6 01       	movw	r22, r12
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     d4c:	89 14       	cp	r8, r9
     d4e:	38 f4       	brcc	.+14     	; 0xd5e <vfprintf+0x384>
     d50:	b6 01       	movw	r22, r12
     d52:	80 e3       	ldi	r24, 0x30	; 48
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     d5a:	9a 94       	dec	r9
     d5c:	f7 cf       	rjmp	.-18     	; 0xd4c <vfprintf+0x372>
     d5e:	8a 94       	dec	r8
     d60:	f3 01       	movw	r30, r6
     d62:	e8 0d       	add	r30, r8
     d64:	f1 1d       	adc	r31, r1
     d66:	80 81       	ld	r24, Z
     d68:	b6 01       	movw	r22, r12
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     d70:	81 10       	cpse	r8, r1
     d72:	f5 cf       	rjmp	.-22     	; 0xd5e <vfprintf+0x384>
     d74:	22 20       	and	r2, r2
     d76:	09 f4       	brne	.+2      	; 0xd7a <vfprintf+0x3a0>
     d78:	42 ce       	rjmp	.-892    	; 0x9fe <vfprintf+0x24>
     d7a:	b6 01       	movw	r22, r12
     d7c:	80 e2       	ldi	r24, 0x20	; 32
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	0e 94 53 08 	call	0x10a6	; 0x10a6 <fputc>
     d84:	2a 94       	dec	r2
     d86:	f6 cf       	rjmp	.-20     	; 0xd74 <vfprintf+0x39a>
     d88:	f6 01       	movw	r30, r12
     d8a:	86 81       	ldd	r24, Z+6	; 0x06
     d8c:	97 81       	ldd	r25, Z+7	; 0x07
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x3ba>
     d90:	8f ef       	ldi	r24, 0xFF	; 255
     d92:	9f ef       	ldi	r25, 0xFF	; 255
     d94:	2b 96       	adiw	r28, 0x0b	; 11
     d96:	e2 e1       	ldi	r30, 0x12	; 18
     d98:	0c 94 54 09 	jmp	0x12a8	; 0x12a8 <__epilogue_restores__>

00000d9c <strtod>:
     d9c:	a0 e0       	ldi	r26, 0x00	; 0
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e4 ed       	ldi	r30, 0xD4	; 212
     da2:	f6 e0       	ldi	r31, 0x06	; 6
     da4:	0c 94 3e 09 	jmp	0x127c	; 0x127c <__prologue_saves__+0xc>
     da8:	ec 01       	movw	r28, r24
     daa:	6b 01       	movw	r12, r22
     dac:	61 15       	cp	r22, r1
     dae:	71 05       	cpc	r23, r1
     db0:	19 f0       	breq	.+6      	; 0xdb8 <strtod+0x1c>
     db2:	fb 01       	movw	r30, r22
     db4:	91 83       	std	Z+1, r25	; 0x01
     db6:	80 83       	st	Z, r24
     db8:	7e 01       	movw	r14, r28
     dba:	ff ef       	ldi	r31, 0xFF	; 255
     dbc:	ef 1a       	sub	r14, r31
     dbe:	ff 0a       	sbc	r15, r31
     dc0:	08 81       	ld	r16, Y
     dc2:	80 2f       	mov	r24, r16
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 1c 08 	call	0x1038	; 0x1038 <isspace>
     dca:	89 2b       	or	r24, r25
     dcc:	11 f0       	breq	.+4      	; 0xdd2 <strtod+0x36>
     dce:	e7 01       	movw	r28, r14
     dd0:	f3 cf       	rjmp	.-26     	; 0xdb8 <strtod+0x1c>
     dd2:	0d 32       	cpi	r16, 0x2D	; 45
     dd4:	39 f4       	brne	.+14     	; 0xde4 <strtod+0x48>
     dd6:	7e 01       	movw	r14, r28
     dd8:	82 e0       	ldi	r24, 0x02	; 2
     dda:	e8 0e       	add	r14, r24
     ddc:	f1 1c       	adc	r15, r1
     dde:	09 81       	ldd	r16, Y+1	; 0x01
     de0:	11 e0       	ldi	r17, 0x01	; 1
     de2:	08 c0       	rjmp	.+16     	; 0xdf4 <strtod+0x58>
     de4:	0b 32       	cpi	r16, 0x2B	; 43
     de6:	29 f4       	brne	.+10     	; 0xdf2 <strtod+0x56>
     de8:	7e 01       	movw	r14, r28
     dea:	92 e0       	ldi	r25, 0x02	; 2
     dec:	e9 0e       	add	r14, r25
     dee:	f1 1c       	adc	r15, r1
     df0:	09 81       	ldd	r16, Y+1	; 0x01
     df2:	10 e0       	ldi	r17, 0x00	; 0
     df4:	e7 01       	movw	r28, r14
     df6:	21 97       	sbiw	r28, 0x01	; 1
     df8:	43 e0       	ldi	r20, 0x03	; 3
     dfa:	50 e0       	ldi	r21, 0x00	; 0
     dfc:	60 e7       	ldi	r22, 0x70	; 112
     dfe:	70 e0       	ldi	r23, 0x00	; 0
     e00:	ce 01       	movw	r24, r28
     e02:	0e 94 25 08 	call	0x104a	; 0x104a <strncasecmp_P>
     e06:	89 2b       	or	r24, r25
     e08:	c1 f4       	brne	.+48     	; 0xe3a <strtod+0x9e>
     e0a:	23 96       	adiw	r28, 0x03	; 3
     e0c:	45 e0       	ldi	r20, 0x05	; 5
     e0e:	50 e0       	ldi	r21, 0x00	; 0
     e10:	6b e6       	ldi	r22, 0x6B	; 107
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	ce 01       	movw	r24, r28
     e16:	0e 94 25 08 	call	0x104a	; 0x104a <strncasecmp_P>
     e1a:	89 2b       	or	r24, r25
     e1c:	09 f4       	brne	.+2      	; 0xe20 <strtod+0x84>
     e1e:	25 96       	adiw	r28, 0x05	; 5
     e20:	c1 14       	cp	r12, r1
     e22:	d1 04       	cpc	r13, r1
     e24:	19 f0       	breq	.+6      	; 0xe2c <strtod+0x90>
     e26:	f6 01       	movw	r30, r12
     e28:	d1 83       	std	Z+1, r29	; 0x01
     e2a:	c0 83       	st	Z, r28
     e2c:	11 11       	cpse	r17, r1
     e2e:	f6 c0       	rjmp	.+492    	; 0x101c <strtod+0x280>
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	80 e8       	ldi	r24, 0x80	; 128
     e36:	9f e7       	ldi	r25, 0x7F	; 127
     e38:	fa c0       	rjmp	.+500    	; 0x102e <strtod+0x292>
     e3a:	43 e0       	ldi	r20, 0x03	; 3
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	68 e6       	ldi	r22, 0x68	; 104
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	ce 01       	movw	r24, r28
     e44:	0e 94 25 08 	call	0x104a	; 0x104a <strncasecmp_P>
     e48:	89 2b       	or	r24, r25
     e4a:	59 f4       	brne	.+22     	; 0xe62 <strtod+0xc6>
     e4c:	c1 14       	cp	r12, r1
     e4e:	d1 04       	cpc	r13, r1
     e50:	09 f4       	brne	.+2      	; 0xe54 <strtod+0xb8>
     e52:	e9 c0       	rjmp	.+466    	; 0x1026 <strtod+0x28a>
     e54:	f2 e0       	ldi	r31, 0x02	; 2
     e56:	ef 0e       	add	r14, r31
     e58:	f1 1c       	adc	r15, r1
     e5a:	f6 01       	movw	r30, r12
     e5c:	f1 82       	std	Z+1, r15	; 0x01
     e5e:	e0 82       	st	Z, r14
     e60:	e2 c0       	rjmp	.+452    	; 0x1026 <strtod+0x28a>
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	a9 01       	movw	r20, r18
     e68:	c0 e0       	ldi	r28, 0x00	; 0
     e6a:	d0 e0       	ldi	r29, 0x00	; 0
     e6c:	f7 01       	movw	r30, r14
     e6e:	80 ed       	ldi	r24, 0xD0	; 208
     e70:	a8 2e       	mov	r10, r24
     e72:	a0 0e       	add	r10, r16
     e74:	89 e0       	ldi	r24, 0x09	; 9
     e76:	8a 15       	cp	r24, r10
     e78:	30 f1       	brcs	.+76     	; 0xec6 <strtod+0x12a>
     e7a:	91 2f       	mov	r25, r17
     e7c:	92 60       	ori	r25, 0x02	; 2
     e7e:	b9 2e       	mov	r11, r25
     e80:	81 2f       	mov	r24, r17
     e82:	88 70       	andi	r24, 0x08	; 8
     e84:	12 ff       	sbrs	r17, 2
     e86:	04 c0       	rjmp	.+8      	; 0xe90 <strtod+0xf4>
     e88:	81 11       	cpse	r24, r1
     e8a:	24 c0       	rjmp	.+72     	; 0xed4 <strtod+0x138>
     e8c:	21 96       	adiw	r28, 0x01	; 1
     e8e:	22 c0       	rjmp	.+68     	; 0xed4 <strtod+0x138>
     e90:	81 11       	cpse	r24, r1
     e92:	21 97       	sbiw	r28, 0x01	; 1
     e94:	a5 e0       	ldi	r26, 0x05	; 5
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	0e 94 2d 09 	call	0x125a	; 0x125a <__muluhisi3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	88 0f       	add	r24, r24
     ea2:	99 1f       	adc	r25, r25
     ea4:	aa 1f       	adc	r26, r26
     ea6:	bb 1f       	adc	r27, r27
     ea8:	9c 01       	movw	r18, r24
     eaa:	ad 01       	movw	r20, r26
     eac:	2a 0d       	add	r18, r10
     eae:	31 1d       	adc	r19, r1
     eb0:	41 1d       	adc	r20, r1
     eb2:	51 1d       	adc	r21, r1
     eb4:	28 39       	cpi	r18, 0x98	; 152
     eb6:	89 e9       	ldi	r24, 0x99	; 153
     eb8:	38 07       	cpc	r19, r24
     eba:	48 07       	cpc	r20, r24
     ebc:	89 e1       	ldi	r24, 0x19	; 25
     ebe:	58 07       	cpc	r21, r24
     ec0:	48 f0       	brcs	.+18     	; 0xed4 <strtod+0x138>
     ec2:	16 60       	ori	r17, 0x06	; 6
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <strtod+0x136>
     ec6:	9e ef       	ldi	r25, 0xFE	; 254
     ec8:	a9 12       	cpse	r10, r25
     eca:	0a c0       	rjmp	.+20     	; 0xee0 <strtod+0x144>
     ecc:	13 fd       	sbrc	r17, 3
     ece:	40 c0       	rjmp	.+128    	; 0xf50 <strtod+0x1b4>
     ed0:	18 60       	ori	r17, 0x08	; 8
     ed2:	b1 2e       	mov	r11, r17
     ed4:	8f ef       	ldi	r24, 0xFF	; 255
     ed6:	e8 1a       	sub	r14, r24
     ed8:	f8 0a       	sbc	r15, r24
     eda:	00 81       	ld	r16, Z
     edc:	1b 2d       	mov	r17, r11
     ede:	c6 cf       	rjmp	.-116    	; 0xe6c <strtod+0xd0>
     ee0:	80 2f       	mov	r24, r16
     ee2:	8f 7d       	andi	r24, 0xDF	; 223
     ee4:	85 34       	cpi	r24, 0x45	; 69
     ee6:	a1 f5       	brne	.+104    	; 0xf50 <strtod+0x1b4>
     ee8:	80 81       	ld	r24, Z
     eea:	8d 32       	cpi	r24, 0x2D	; 45
     eec:	11 f4       	brne	.+4      	; 0xef2 <strtod+0x156>
     eee:	10 61       	ori	r17, 0x10	; 16
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <strtod+0x162>
     ef2:	8b 32       	cpi	r24, 0x2B	; 43
     ef4:	21 f0       	breq	.+8      	; 0xefe <strtod+0x162>
     ef6:	31 96       	adiw	r30, 0x01	; 1
     ef8:	61 e0       	ldi	r22, 0x01	; 1
     efa:	70 e0       	ldi	r23, 0x00	; 0
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <strtod+0x16a>
     efe:	81 81       	ldd	r24, Z+1	; 0x01
     f00:	32 96       	adiw	r30, 0x02	; 2
     f02:	62 e0       	ldi	r22, 0x02	; 2
     f04:	70 e0       	ldi	r23, 0x00	; 0
     f06:	80 53       	subi	r24, 0x30	; 48
     f08:	8a 30       	cpi	r24, 0x0A	; 10
     f0a:	18 f0       	brcs	.+6      	; 0xf12 <strtod+0x176>
     f0c:	e6 1b       	sub	r30, r22
     f0e:	f7 0b       	sbc	r31, r23
     f10:	1f c0       	rjmp	.+62     	; 0xf50 <strtod+0x1b4>
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	60 38       	cpi	r22, 0x80	; 128
     f18:	9c e0       	ldi	r25, 0x0C	; 12
     f1a:	79 07       	cpc	r23, r25
     f1c:	5c f4       	brge	.+22     	; 0xf34 <strtod+0x198>
     f1e:	db 01       	movw	r26, r22
     f20:	aa 0f       	add	r26, r26
     f22:	bb 1f       	adc	r27, r27
     f24:	aa 0f       	add	r26, r26
     f26:	bb 1f       	adc	r27, r27
     f28:	6a 0f       	add	r22, r26
     f2a:	7b 1f       	adc	r23, r27
     f2c:	66 0f       	add	r22, r22
     f2e:	77 1f       	adc	r23, r23
     f30:	68 0f       	add	r22, r24
     f32:	71 1d       	adc	r23, r1
     f34:	31 96       	adiw	r30, 0x01	; 1
     f36:	df 01       	movw	r26, r30
     f38:	11 97       	sbiw	r26, 0x01	; 1
     f3a:	8c 91       	ld	r24, X
     f3c:	80 53       	subi	r24, 0x30	; 48
     f3e:	8a 30       	cpi	r24, 0x0A	; 10
     f40:	50 f3       	brcs	.-44     	; 0xf16 <strtod+0x17a>
     f42:	14 ff       	sbrs	r17, 4
     f44:	03 c0       	rjmp	.+6      	; 0xf4c <strtod+0x1b0>
     f46:	71 95       	neg	r23
     f48:	61 95       	neg	r22
     f4a:	71 09       	sbc	r23, r1
     f4c:	c6 0f       	add	r28, r22
     f4e:	d7 1f       	adc	r29, r23
     f50:	11 ff       	sbrs	r17, 1
     f52:	08 c0       	rjmp	.+16     	; 0xf64 <strtod+0x1c8>
     f54:	c1 14       	cp	r12, r1
     f56:	d1 04       	cpc	r13, r1
     f58:	29 f0       	breq	.+10     	; 0xf64 <strtod+0x1c8>
     f5a:	cf 01       	movw	r24, r30
     f5c:	01 97       	sbiw	r24, 0x01	; 1
     f5e:	f6 01       	movw	r30, r12
     f60:	91 83       	std	Z+1, r25	; 0x01
     f62:	80 83       	st	Z, r24
     f64:	ca 01       	movw	r24, r20
     f66:	b9 01       	movw	r22, r18
     f68:	0e 94 ed 08 	call	0x11da	; 0x11da <__floatunsisf>
     f6c:	21 2f       	mov	r18, r17
     f6e:	23 70       	andi	r18, 0x03	; 3
     f70:	23 30       	cpi	r18, 0x03	; 3
     f72:	19 f0       	breq	.+6      	; 0xf7a <strtod+0x1de>
     f74:	4b 01       	movw	r8, r22
     f76:	5c 01       	movw	r10, r24
     f78:	06 c0       	rjmp	.+12     	; 0xf86 <strtod+0x1ea>
     f7a:	4b 01       	movw	r8, r22
     f7c:	5c 01       	movw	r10, r24
     f7e:	b7 fa       	bst	r11, 7
     f80:	b0 94       	com	r11
     f82:	b7 f8       	bld	r11, 7
     f84:	b0 94       	com	r11
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	a9 01       	movw	r20, r18
     f8c:	c5 01       	movw	r24, r10
     f8e:	b4 01       	movw	r22, r8
     f90:	0e 94 a5 03 	call	0x74a	; 0x74a <__cmpsf2>
     f94:	88 23       	and	r24, r24
     f96:	09 f4       	brne	.+2      	; 0xf9a <strtod+0x1fe>
     f98:	3e c0       	rjmp	.+124    	; 0x1016 <strtod+0x27a>
     f9a:	d7 ff       	sbrs	r29, 7
     f9c:	06 c0       	rjmp	.+12     	; 0xfaa <strtod+0x20e>
     f9e:	d1 95       	neg	r29
     fa0:	c1 95       	neg	r28
     fa2:	d1 09       	sbc	r29, r1
     fa4:	07 e8       	ldi	r16, 0x87	; 135
     fa6:	10 e0       	ldi	r17, 0x00	; 0
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <strtod+0x212>
     faa:	0f e9       	ldi	r16, 0x9F	; 159
     fac:	10 e0       	ldi	r17, 0x00	; 0
     fae:	68 01       	movw	r12, r16
     fb0:	f8 e1       	ldi	r31, 0x18	; 24
     fb2:	cf 1a       	sub	r12, r31
     fb4:	d1 08       	sbc	r13, r1
     fb6:	90 e2       	ldi	r25, 0x20	; 32
     fb8:	e9 2e       	mov	r14, r25
     fba:	f1 2c       	mov	r15, r1
     fbc:	ce 15       	cp	r28, r14
     fbe:	df 05       	cpc	r29, r15
     fc0:	74 f0       	brlt	.+28     	; 0xfde <strtod+0x242>
     fc2:	f8 01       	movw	r30, r16
     fc4:	25 91       	lpm	r18, Z+
     fc6:	35 91       	lpm	r19, Z+
     fc8:	45 91       	lpm	r20, Z+
     fca:	54 91       	lpm	r21, Z
     fcc:	c5 01       	movw	r24, r10
     fce:	b4 01       	movw	r22, r8
     fd0:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__mulsf3>
     fd4:	4b 01       	movw	r8, r22
     fd6:	5c 01       	movw	r10, r24
     fd8:	ce 19       	sub	r28, r14
     fda:	df 09       	sbc	r29, r15
     fdc:	ef cf       	rjmp	.-34     	; 0xfbc <strtod+0x220>
     fde:	04 50       	subi	r16, 0x04	; 4
     fe0:	11 09       	sbc	r17, r1
     fe2:	f5 94       	asr	r15
     fe4:	e7 94       	ror	r14
     fe6:	0c 15       	cp	r16, r12
     fe8:	1d 05       	cpc	r17, r13
     fea:	41 f7       	brne	.-48     	; 0xfbc <strtod+0x220>
     fec:	8a 2d       	mov	r24, r10
     fee:	88 0f       	add	r24, r24
     ff0:	8b 2d       	mov	r24, r11
     ff2:	88 1f       	adc	r24, r24
     ff4:	8f 3f       	cpi	r24, 0xFF	; 255
     ff6:	49 f0       	breq	.+18     	; 0x100a <strtod+0x26e>
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	a9 01       	movw	r20, r18
     ffe:	c5 01       	movw	r24, r10
    1000:	b4 01       	movw	r22, r8
    1002:	0e 94 a5 03 	call	0x74a	; 0x74a <__cmpsf2>
    1006:	81 11       	cpse	r24, r1
    1008:	06 c0       	rjmp	.+12     	; 0x1016 <strtod+0x27a>
    100a:	82 e2       	ldi	r24, 0x22	; 34
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <errno+0x1>
    1012:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <errno>
    1016:	c5 01       	movw	r24, r10
    1018:	b4 01       	movw	r22, r8
    101a:	09 c0       	rjmp	.+18     	; 0x102e <strtod+0x292>
    101c:	60 e0       	ldi	r22, 0x00	; 0
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	80 e8       	ldi	r24, 0x80	; 128
    1022:	9f ef       	ldi	r25, 0xFF	; 255
    1024:	04 c0       	rjmp	.+8      	; 0x102e <strtod+0x292>
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	80 ec       	ldi	r24, 0xC0	; 192
    102c:	9f e7       	ldi	r25, 0x7F	; 127
    102e:	cd b7       	in	r28, 0x3d	; 61
    1030:	de b7       	in	r29, 0x3e	; 62
    1032:	ec e0       	ldi	r30, 0x0C	; 12
    1034:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__epilogue_restores__+0xc>

00001038 <isspace>:
    1038:	91 11       	cpse	r25, r1
    103a:	0c 94 2a 09 	jmp	0x1254	; 0x1254 <__ctype_isfalse>
    103e:	80 32       	cpi	r24, 0x20	; 32
    1040:	19 f0       	breq	.+6      	; 0x1048 <isspace+0x10>
    1042:	89 50       	subi	r24, 0x09	; 9
    1044:	85 50       	subi	r24, 0x05	; 5
    1046:	c8 f7       	brcc	.-14     	; 0x103a <isspace+0x2>
    1048:	08 95       	ret

0000104a <strncasecmp_P>:
    104a:	fb 01       	movw	r30, r22
    104c:	dc 01       	movw	r26, r24
    104e:	41 50       	subi	r20, 0x01	; 1
    1050:	50 40       	sbci	r21, 0x00	; 0
    1052:	88 f0       	brcs	.+34     	; 0x1076 <strncasecmp_P+0x2c>
    1054:	8d 91       	ld	r24, X+
    1056:	81 34       	cpi	r24, 0x41	; 65
    1058:	1c f0       	brlt	.+6      	; 0x1060 <strncasecmp_P+0x16>
    105a:	8b 35       	cpi	r24, 0x5B	; 91
    105c:	0c f4       	brge	.+2      	; 0x1060 <strncasecmp_P+0x16>
    105e:	80 5e       	subi	r24, 0xE0	; 224
    1060:	65 91       	lpm	r22, Z+
    1062:	61 34       	cpi	r22, 0x41	; 65
    1064:	1c f0       	brlt	.+6      	; 0x106c <strncasecmp_P+0x22>
    1066:	6b 35       	cpi	r22, 0x5B	; 91
    1068:	0c f4       	brge	.+2      	; 0x106c <strncasecmp_P+0x22>
    106a:	60 5e       	subi	r22, 0xE0	; 224
    106c:	86 1b       	sub	r24, r22
    106e:	61 11       	cpse	r22, r1
    1070:	71 f3       	breq	.-36     	; 0x104e <strncasecmp_P+0x4>
    1072:	99 0b       	sbc	r25, r25
    1074:	08 95       	ret
    1076:	88 1b       	sub	r24, r24
    1078:	fc cf       	rjmp	.-8      	; 0x1072 <strncasecmp_P+0x28>

0000107a <strnlen_P>:
    107a:	fc 01       	movw	r30, r24
    107c:	05 90       	lpm	r0, Z+
    107e:	61 50       	subi	r22, 0x01	; 1
    1080:	70 40       	sbci	r23, 0x00	; 0
    1082:	01 10       	cpse	r0, r1
    1084:	d8 f7       	brcc	.-10     	; 0x107c <strnlen_P+0x2>
    1086:	80 95       	com	r24
    1088:	90 95       	com	r25
    108a:	8e 0f       	add	r24, r30
    108c:	9f 1f       	adc	r25, r31
    108e:	08 95       	ret

00001090 <strnlen>:
    1090:	fc 01       	movw	r30, r24
    1092:	61 50       	subi	r22, 0x01	; 1
    1094:	70 40       	sbci	r23, 0x00	; 0
    1096:	01 90       	ld	r0, Z+
    1098:	01 10       	cpse	r0, r1
    109a:	d8 f7       	brcc	.-10     	; 0x1092 <strnlen+0x2>
    109c:	80 95       	com	r24
    109e:	90 95       	com	r25
    10a0:	8e 0f       	add	r24, r30
    10a2:	9f 1f       	adc	r25, r31
    10a4:	08 95       	ret

000010a6 <fputc>:
    10a6:	0f 93       	push	r16
    10a8:	1f 93       	push	r17
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
    10ae:	fb 01       	movw	r30, r22
    10b0:	23 81       	ldd	r18, Z+3	; 0x03
    10b2:	21 fd       	sbrc	r18, 1
    10b4:	03 c0       	rjmp	.+6      	; 0x10bc <fputc+0x16>
    10b6:	8f ef       	ldi	r24, 0xFF	; 255
    10b8:	9f ef       	ldi	r25, 0xFF	; 255
    10ba:	2c c0       	rjmp	.+88     	; 0x1114 <fputc+0x6e>
    10bc:	22 ff       	sbrs	r18, 2
    10be:	16 c0       	rjmp	.+44     	; 0x10ec <fputc+0x46>
    10c0:	46 81       	ldd	r20, Z+6	; 0x06
    10c2:	57 81       	ldd	r21, Z+7	; 0x07
    10c4:	24 81       	ldd	r18, Z+4	; 0x04
    10c6:	35 81       	ldd	r19, Z+5	; 0x05
    10c8:	42 17       	cp	r20, r18
    10ca:	53 07       	cpc	r21, r19
    10cc:	44 f4       	brge	.+16     	; 0x10de <fputc+0x38>
    10ce:	a0 81       	ld	r26, Z
    10d0:	b1 81       	ldd	r27, Z+1	; 0x01
    10d2:	9d 01       	movw	r18, r26
    10d4:	2f 5f       	subi	r18, 0xFF	; 255
    10d6:	3f 4f       	sbci	r19, 0xFF	; 255
    10d8:	31 83       	std	Z+1, r19	; 0x01
    10da:	20 83       	st	Z, r18
    10dc:	8c 93       	st	X, r24
    10de:	26 81       	ldd	r18, Z+6	; 0x06
    10e0:	37 81       	ldd	r19, Z+7	; 0x07
    10e2:	2f 5f       	subi	r18, 0xFF	; 255
    10e4:	3f 4f       	sbci	r19, 0xFF	; 255
    10e6:	37 83       	std	Z+7, r19	; 0x07
    10e8:	26 83       	std	Z+6, r18	; 0x06
    10ea:	14 c0       	rjmp	.+40     	; 0x1114 <fputc+0x6e>
    10ec:	8b 01       	movw	r16, r22
    10ee:	ec 01       	movw	r28, r24
    10f0:	fb 01       	movw	r30, r22
    10f2:	00 84       	ldd	r0, Z+8	; 0x08
    10f4:	f1 85       	ldd	r31, Z+9	; 0x09
    10f6:	e0 2d       	mov	r30, r0
    10f8:	09 95       	icall
    10fa:	89 2b       	or	r24, r25
    10fc:	e1 f6       	brne	.-72     	; 0x10b6 <fputc+0x10>
    10fe:	d8 01       	movw	r26, r16
    1100:	16 96       	adiw	r26, 0x06	; 6
    1102:	8d 91       	ld	r24, X+
    1104:	9c 91       	ld	r25, X
    1106:	17 97       	sbiw	r26, 0x07	; 7
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	17 96       	adiw	r26, 0x07	; 7
    110c:	9c 93       	st	X, r25
    110e:	8e 93       	st	-X, r24
    1110:	16 97       	sbiw	r26, 0x06	; 6
    1112:	ce 01       	movw	r24, r28
    1114:	df 91       	pop	r29
    1116:	cf 91       	pop	r28
    1118:	1f 91       	pop	r17
    111a:	0f 91       	pop	r16
    111c:	08 95       	ret

0000111e <__ultoa_invert>:
    111e:	fa 01       	movw	r30, r20
    1120:	aa 27       	eor	r26, r26
    1122:	28 30       	cpi	r18, 0x08	; 8
    1124:	51 f1       	breq	.+84     	; 0x117a <__ultoa_invert+0x5c>
    1126:	20 31       	cpi	r18, 0x10	; 16
    1128:	81 f1       	breq	.+96     	; 0x118a <__ultoa_invert+0x6c>
    112a:	e8 94       	clt
    112c:	6f 93       	push	r22
    112e:	6e 7f       	andi	r22, 0xFE	; 254
    1130:	6e 5f       	subi	r22, 0xFE	; 254
    1132:	7f 4f       	sbci	r23, 0xFF	; 255
    1134:	8f 4f       	sbci	r24, 0xFF	; 255
    1136:	9f 4f       	sbci	r25, 0xFF	; 255
    1138:	af 4f       	sbci	r26, 0xFF	; 255
    113a:	b1 e0       	ldi	r27, 0x01	; 1
    113c:	3e d0       	rcall	.+124    	; 0x11ba <__ultoa_invert+0x9c>
    113e:	b4 e0       	ldi	r27, 0x04	; 4
    1140:	3c d0       	rcall	.+120    	; 0x11ba <__ultoa_invert+0x9c>
    1142:	67 0f       	add	r22, r23
    1144:	78 1f       	adc	r23, r24
    1146:	89 1f       	adc	r24, r25
    1148:	9a 1f       	adc	r25, r26
    114a:	a1 1d       	adc	r26, r1
    114c:	68 0f       	add	r22, r24
    114e:	79 1f       	adc	r23, r25
    1150:	8a 1f       	adc	r24, r26
    1152:	91 1d       	adc	r25, r1
    1154:	a1 1d       	adc	r26, r1
    1156:	6a 0f       	add	r22, r26
    1158:	71 1d       	adc	r23, r1
    115a:	81 1d       	adc	r24, r1
    115c:	91 1d       	adc	r25, r1
    115e:	a1 1d       	adc	r26, r1
    1160:	20 d0       	rcall	.+64     	; 0x11a2 <__ultoa_invert+0x84>
    1162:	09 f4       	brne	.+2      	; 0x1166 <__ultoa_invert+0x48>
    1164:	68 94       	set
    1166:	3f 91       	pop	r19
    1168:	2a e0       	ldi	r18, 0x0A	; 10
    116a:	26 9f       	mul	r18, r22
    116c:	11 24       	eor	r1, r1
    116e:	30 19       	sub	r19, r0
    1170:	30 5d       	subi	r19, 0xD0	; 208
    1172:	31 93       	st	Z+, r19
    1174:	de f6       	brtc	.-74     	; 0x112c <__ultoa_invert+0xe>
    1176:	cf 01       	movw	r24, r30
    1178:	08 95       	ret
    117a:	46 2f       	mov	r20, r22
    117c:	47 70       	andi	r20, 0x07	; 7
    117e:	40 5d       	subi	r20, 0xD0	; 208
    1180:	41 93       	st	Z+, r20
    1182:	b3 e0       	ldi	r27, 0x03	; 3
    1184:	0f d0       	rcall	.+30     	; 0x11a4 <__ultoa_invert+0x86>
    1186:	c9 f7       	brne	.-14     	; 0x117a <__ultoa_invert+0x5c>
    1188:	f6 cf       	rjmp	.-20     	; 0x1176 <__ultoa_invert+0x58>
    118a:	46 2f       	mov	r20, r22
    118c:	4f 70       	andi	r20, 0x0F	; 15
    118e:	40 5d       	subi	r20, 0xD0	; 208
    1190:	4a 33       	cpi	r20, 0x3A	; 58
    1192:	18 f0       	brcs	.+6      	; 0x119a <__ultoa_invert+0x7c>
    1194:	49 5d       	subi	r20, 0xD9	; 217
    1196:	31 fd       	sbrc	r19, 1
    1198:	40 52       	subi	r20, 0x20	; 32
    119a:	41 93       	st	Z+, r20
    119c:	02 d0       	rcall	.+4      	; 0x11a2 <__ultoa_invert+0x84>
    119e:	a9 f7       	brne	.-22     	; 0x118a <__ultoa_invert+0x6c>
    11a0:	ea cf       	rjmp	.-44     	; 0x1176 <__ultoa_invert+0x58>
    11a2:	b4 e0       	ldi	r27, 0x04	; 4
    11a4:	a6 95       	lsr	r26
    11a6:	97 95       	ror	r25
    11a8:	87 95       	ror	r24
    11aa:	77 95       	ror	r23
    11ac:	67 95       	ror	r22
    11ae:	ba 95       	dec	r27
    11b0:	c9 f7       	brne	.-14     	; 0x11a4 <__ultoa_invert+0x86>
    11b2:	00 97       	sbiw	r24, 0x00	; 0
    11b4:	61 05       	cpc	r22, r1
    11b6:	71 05       	cpc	r23, r1
    11b8:	08 95       	ret
    11ba:	9b 01       	movw	r18, r22
    11bc:	ac 01       	movw	r20, r24
    11be:	0a 2e       	mov	r0, r26
    11c0:	06 94       	lsr	r0
    11c2:	57 95       	ror	r21
    11c4:	47 95       	ror	r20
    11c6:	37 95       	ror	r19
    11c8:	27 95       	ror	r18
    11ca:	ba 95       	dec	r27
    11cc:	c9 f7       	brne	.-14     	; 0x11c0 <__ultoa_invert+0xa2>
    11ce:	62 0f       	add	r22, r18
    11d0:	73 1f       	adc	r23, r19
    11d2:	84 1f       	adc	r24, r20
    11d4:	95 1f       	adc	r25, r21
    11d6:	a0 1d       	adc	r26, r0
    11d8:	08 95       	ret

000011da <__floatunsisf>:
    11da:	e8 94       	clt
    11dc:	09 c0       	rjmp	.+18     	; 0x11f0 <__floatsisf+0x12>

000011de <__floatsisf>:
    11de:	97 fb       	bst	r25, 7
    11e0:	3e f4       	brtc	.+14     	; 0x11f0 <__floatsisf+0x12>
    11e2:	90 95       	com	r25
    11e4:	80 95       	com	r24
    11e6:	70 95       	com	r23
    11e8:	61 95       	neg	r22
    11ea:	7f 4f       	sbci	r23, 0xFF	; 255
    11ec:	8f 4f       	sbci	r24, 0xFF	; 255
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	99 23       	and	r25, r25
    11f2:	a9 f0       	breq	.+42     	; 0x121e <__floatsisf+0x40>
    11f4:	f9 2f       	mov	r31, r25
    11f6:	96 e9       	ldi	r25, 0x96	; 150
    11f8:	bb 27       	eor	r27, r27
    11fa:	93 95       	inc	r25
    11fc:	f6 95       	lsr	r31
    11fe:	87 95       	ror	r24
    1200:	77 95       	ror	r23
    1202:	67 95       	ror	r22
    1204:	b7 95       	ror	r27
    1206:	f1 11       	cpse	r31, r1
    1208:	f8 cf       	rjmp	.-16     	; 0x11fa <__floatsisf+0x1c>
    120a:	fa f4       	brpl	.+62     	; 0x124a <__floatsisf+0x6c>
    120c:	bb 0f       	add	r27, r27
    120e:	11 f4       	brne	.+4      	; 0x1214 <__floatsisf+0x36>
    1210:	60 ff       	sbrs	r22, 0
    1212:	1b c0       	rjmp	.+54     	; 0x124a <__floatsisf+0x6c>
    1214:	6f 5f       	subi	r22, 0xFF	; 255
    1216:	7f 4f       	sbci	r23, 0xFF	; 255
    1218:	8f 4f       	sbci	r24, 0xFF	; 255
    121a:	9f 4f       	sbci	r25, 0xFF	; 255
    121c:	16 c0       	rjmp	.+44     	; 0x124a <__floatsisf+0x6c>
    121e:	88 23       	and	r24, r24
    1220:	11 f0       	breq	.+4      	; 0x1226 <__floatsisf+0x48>
    1222:	96 e9       	ldi	r25, 0x96	; 150
    1224:	11 c0       	rjmp	.+34     	; 0x1248 <__floatsisf+0x6a>
    1226:	77 23       	and	r23, r23
    1228:	21 f0       	breq	.+8      	; 0x1232 <__floatsisf+0x54>
    122a:	9e e8       	ldi	r25, 0x8E	; 142
    122c:	87 2f       	mov	r24, r23
    122e:	76 2f       	mov	r23, r22
    1230:	05 c0       	rjmp	.+10     	; 0x123c <__floatsisf+0x5e>
    1232:	66 23       	and	r22, r22
    1234:	71 f0       	breq	.+28     	; 0x1252 <__floatsisf+0x74>
    1236:	96 e8       	ldi	r25, 0x86	; 134
    1238:	86 2f       	mov	r24, r22
    123a:	70 e0       	ldi	r23, 0x00	; 0
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	2a f0       	brmi	.+10     	; 0x124a <__floatsisf+0x6c>
    1240:	9a 95       	dec	r25
    1242:	66 0f       	add	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	da f7       	brpl	.-10     	; 0x1240 <__floatsisf+0x62>
    124a:	88 0f       	add	r24, r24
    124c:	96 95       	lsr	r25
    124e:	87 95       	ror	r24
    1250:	97 f9       	bld	r25, 7
    1252:	08 95       	ret

00001254 <__ctype_isfalse>:
    1254:	99 27       	eor	r25, r25
    1256:	88 27       	eor	r24, r24

00001258 <__ctype_istrue>:
    1258:	08 95       	ret

0000125a <__muluhisi3>:
    125a:	0e 94 6f 09 	call	0x12de	; 0x12de <__umulhisi3>
    125e:	a5 9f       	mul	r26, r21
    1260:	90 0d       	add	r25, r0
    1262:	b4 9f       	mul	r27, r20
    1264:	90 0d       	add	r25, r0
    1266:	a4 9f       	mul	r26, r20
    1268:	80 0d       	add	r24, r0
    126a:	91 1d       	adc	r25, r1
    126c:	11 24       	eor	r1, r1
    126e:	08 95       	ret

00001270 <__prologue_saves__>:
    1270:	2f 92       	push	r2
    1272:	3f 92       	push	r3
    1274:	4f 92       	push	r4
    1276:	5f 92       	push	r5
    1278:	6f 92       	push	r6
    127a:	7f 92       	push	r7
    127c:	8f 92       	push	r8
    127e:	9f 92       	push	r9
    1280:	af 92       	push	r10
    1282:	bf 92       	push	r11
    1284:	cf 92       	push	r12
    1286:	df 92       	push	r13
    1288:	ef 92       	push	r14
    128a:	ff 92       	push	r15
    128c:	0f 93       	push	r16
    128e:	1f 93       	push	r17
    1290:	cf 93       	push	r28
    1292:	df 93       	push	r29
    1294:	cd b7       	in	r28, 0x3d	; 61
    1296:	de b7       	in	r29, 0x3e	; 62
    1298:	ca 1b       	sub	r28, r26
    129a:	db 0b       	sbc	r29, r27
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	de bf       	out	0x3e, r29	; 62
    12a2:	0f be       	out	0x3f, r0	; 63
    12a4:	cd bf       	out	0x3d, r28	; 61
    12a6:	09 94       	ijmp

000012a8 <__epilogue_restores__>:
    12a8:	2a 88       	ldd	r2, Y+18	; 0x12
    12aa:	39 88       	ldd	r3, Y+17	; 0x11
    12ac:	48 88       	ldd	r4, Y+16	; 0x10
    12ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    12b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    12b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    12b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    12b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    12b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    12ba:	b9 84       	ldd	r11, Y+9	; 0x09
    12bc:	c8 84       	ldd	r12, Y+8	; 0x08
    12be:	df 80       	ldd	r13, Y+7	; 0x07
    12c0:	ee 80       	ldd	r14, Y+6	; 0x06
    12c2:	fd 80       	ldd	r15, Y+5	; 0x05
    12c4:	0c 81       	ldd	r16, Y+4	; 0x04
    12c6:	1b 81       	ldd	r17, Y+3	; 0x03
    12c8:	aa 81       	ldd	r26, Y+2	; 0x02
    12ca:	b9 81       	ldd	r27, Y+1	; 0x01
    12cc:	ce 0f       	add	r28, r30
    12ce:	d1 1d       	adc	r29, r1
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	f8 94       	cli
    12d4:	de bf       	out	0x3e, r29	; 62
    12d6:	0f be       	out	0x3f, r0	; 63
    12d8:	cd bf       	out	0x3d, r28	; 61
    12da:	ed 01       	movw	r28, r26
    12dc:	08 95       	ret

000012de <__umulhisi3>:
    12de:	a2 9f       	mul	r26, r18
    12e0:	b0 01       	movw	r22, r0
    12e2:	b3 9f       	mul	r27, r19
    12e4:	c0 01       	movw	r24, r0
    12e6:	a3 9f       	mul	r26, r19
    12e8:	70 0d       	add	r23, r0
    12ea:	81 1d       	adc	r24, r1
    12ec:	11 24       	eor	r1, r1
    12ee:	91 1d       	adc	r25, r1
    12f0:	b2 9f       	mul	r27, r18
    12f2:	70 0d       	add	r23, r0
    12f4:	81 1d       	adc	r24, r1
    12f6:	11 24       	eor	r1, r1
    12f8:	91 1d       	adc	r25, r1
    12fa:	08 95       	ret

000012fc <_exit>:
    12fc:	f8 94       	cli

000012fe <__stop_program>:
    12fe:	ff cf       	rjmp	.-2      	; 0x12fe <__stop_program>
