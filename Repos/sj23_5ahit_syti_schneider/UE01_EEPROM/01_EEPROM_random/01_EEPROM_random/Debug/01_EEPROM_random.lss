
01_EEPROM_random.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000c5e  00000cf2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080011e  0080011e  00000d10  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000db0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001142  00000000  00000000  00000ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b7  00000000  00000000  0000203a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000094e  00000000  00000000  000029f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00003340  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000558  00000000  00000000  000035bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ff  00000000  00000000  00003b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004313  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 94 01 	jmp	0x328	; 0x328 <__vector_1>
   8:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 80 01 	jmp	0x300	; 0x300 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 27 01 	call	0x24e	; 0x24e <main>
  9e:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
  a6:	88 b1       	in	r24, 0x08	; 8
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	88 b9       	out	0x08, r24	; 8
  ac:	00 c0       	rjmp	.+0      	; 0xae <toggle_e+0x8>
  ae:	88 b1       	in	r24, 0x08	; 8
  b0:	8b 7f       	andi	r24, 0xFB	; 251
  b2:	88 b9       	out	0x08, r24	; 8
  b4:	08 95       	ret

000000b6 <lcd_write>:
  b6:	cf 93       	push	r28
  b8:	c8 2f       	mov	r28, r24
  ba:	8a b1       	in	r24, 0x0a	; 10
  bc:	80 6f       	ori	r24, 0xF0	; 240
  be:	8a b9       	out	0x0a, r24	; 10
  c0:	88 b1       	in	r24, 0x08	; 8
  c2:	8d 7f       	andi	r24, 0xFD	; 253
  c4:	88 b9       	out	0x08, r24	; 8
  c6:	66 23       	and	r22, r22
  c8:	21 f0       	breq	.+8      	; 0xd2 <lcd_write+0x1c>
  ca:	88 b1       	in	r24, 0x08	; 8
  cc:	81 60       	ori	r24, 0x01	; 1
  ce:	88 b9       	out	0x08, r24	; 8
  d0:	03 c0       	rjmp	.+6      	; 0xd8 <lcd_write+0x22>
  d2:	88 b1       	in	r24, 0x08	; 8
  d4:	8e 7f       	andi	r24, 0xFE	; 254
  d6:	88 b9       	out	0x08, r24	; 8
  d8:	8b b1       	in	r24, 0x0b	; 11
  da:	8f 70       	andi	r24, 0x0F	; 15
  dc:	9c 2f       	mov	r25, r28
  de:	90 7f       	andi	r25, 0xF0	; 240
  e0:	89 2b       	or	r24, r25
  e2:	8b b9       	out	0x0b, r24	; 11
  e4:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
  e8:	2b b1       	in	r18, 0x0b	; 11
  ea:	30 e1       	ldi	r19, 0x10	; 16
  ec:	c3 9f       	mul	r28, r19
  ee:	c0 01       	movw	r24, r0
  f0:	11 24       	eor	r1, r1
  f2:	92 2f       	mov	r25, r18
  f4:	9f 70       	andi	r25, 0x0F	; 15
  f6:	89 2b       	or	r24, r25
  f8:	8b b9       	out	0x0b, r24	; 11
  fa:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
  fe:	8b b1       	in	r24, 0x0b	; 11
 100:	80 6f       	ori	r24, 0xF0	; 240
 102:	8b b9       	out	0x0b, r24	; 11
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <lcd_read>:
 108:	88 23       	and	r24, r24
 10a:	21 f0       	breq	.+8      	; 0x114 <lcd_read+0xc>
 10c:	88 b1       	in	r24, 0x08	; 8
 10e:	81 60       	ori	r24, 0x01	; 1
 110:	88 b9       	out	0x08, r24	; 8
 112:	03 c0       	rjmp	.+6      	; 0x11a <lcd_read+0x12>
 114:	88 b1       	in	r24, 0x08	; 8
 116:	8e 7f       	andi	r24, 0xFE	; 254
 118:	88 b9       	out	0x08, r24	; 8
 11a:	88 b1       	in	r24, 0x08	; 8
 11c:	82 60       	ori	r24, 0x02	; 2
 11e:	88 b9       	out	0x08, r24	; 8
 120:	8a b1       	in	r24, 0x0a	; 10
 122:	8f 70       	andi	r24, 0x0F	; 15
 124:	8a b9       	out	0x0a, r24	; 10
 126:	88 b1       	in	r24, 0x08	; 8
 128:	84 60       	ori	r24, 0x04	; 4
 12a:	88 b9       	out	0x08, r24	; 8
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_read+0x26>
 12e:	29 b1       	in	r18, 0x09	; 9
 130:	88 b1       	in	r24, 0x08	; 8
 132:	8b 7f       	andi	r24, 0xFB	; 251
 134:	88 b9       	out	0x08, r24	; 8
 136:	00 c0       	rjmp	.+0      	; 0x138 <lcd_read+0x30>
 138:	88 b1       	in	r24, 0x08	; 8
 13a:	84 60       	ori	r24, 0x04	; 4
 13c:	88 b9       	out	0x08, r24	; 8
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_read+0x38>
 140:	99 b1       	in	r25, 0x09	; 9
 142:	88 b1       	in	r24, 0x08	; 8
 144:	8b 7f       	andi	r24, 0xFB	; 251
 146:	88 b9       	out	0x08, r24	; 8
 148:	20 7f       	andi	r18, 0xF0	; 240
 14a:	89 2f       	mov	r24, r25
 14c:	82 95       	swap	r24
 14e:	8f 70       	andi	r24, 0x0F	; 15
 150:	82 2b       	or	r24, r18
 152:	08 95       	ret

00000154 <lcd_waitbusy>:
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	0e 94 84 00 	call	0x108	; 0x108 <lcd_read>
 15a:	88 23       	and	r24, r24
 15c:	dc f3       	brlt	.-10     	; 0x154 <lcd_waitbusy>
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	0e 94 84 00 	call	0x108	; 0x108 <lcd_read>
 164:	08 95       	ret

00000166 <lcd_command>:
 166:	cf 93       	push	r28
 168:	c8 2f       	mov	r28, r24
 16a:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_waitbusy>
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	8c 2f       	mov	r24, r28
 172:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_write>
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <lcd_newline>:
 17a:	80 34       	cpi	r24, 0x40	; 64
 17c:	10 f4       	brcc	.+4      	; 0x182 <lcd_newline+0x8>
 17e:	80 e4       	ldi	r24, 0x40	; 64
 180:	01 c0       	rjmp	.+2      	; 0x184 <lcd_newline+0xa>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	80 58       	subi	r24, 0x80	; 128
 186:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>
 18a:	08 95       	ret

0000018c <lcd_clrscr>:
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>
 192:	08 95       	ret

00000194 <lcd_putc>:
 194:	cf 93       	push	r28
 196:	c8 2f       	mov	r28, r24
 198:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_waitbusy>
 19c:	ca 30       	cpi	r28, 0x0A	; 10
 19e:	19 f4       	brne	.+6      	; 0x1a6 <lcd_putc+0x12>
 1a0:	0e 94 bd 00 	call	0x17a	; 0x17a <lcd_newline>
 1a4:	04 c0       	rjmp	.+8      	; 0x1ae <lcd_putc+0x1a>
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	8c 2f       	mov	r24, r28
 1aa:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_write>
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <lcd_puts>:
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	fc 01       	movw	r30, r24
 1b8:	03 c0       	rjmp	.+6      	; 0x1c0 <lcd_puts+0xe>
 1ba:	0e 94 ca 00 	call	0x194	; 0x194 <lcd_putc>
 1be:	fe 01       	movw	r30, r28
 1c0:	ef 01       	movw	r28, r30
 1c2:	21 96       	adiw	r28, 0x01	; 1
 1c4:	80 81       	ld	r24, Z
 1c6:	81 11       	cpse	r24, r1
 1c8:	f8 cf       	rjmp	.-16     	; 0x1ba <lcd_puts+0x8>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 1d0:	cf 93       	push	r28
 1d2:	c8 2f       	mov	r28, r24
#if LCD_IO_MODE
    /*
     *  Initialize LCD to 4 bit I/O mode
     */

    DDR(LCD_DATA_PORT) |= 0xF0;
 1d4:	8a b1       	in	r24, 0x0a	; 10
 1d6:	80 6f       	ori	r24, 0xF0	; 240
 1d8:	8a b9       	out	0x0a, r24	; 10
    DDR(LCD_RS_PORT) |= _BV(LCD_RS_PIN);
 1da:	87 b1       	in	r24, 0x07	; 7
 1dc:	81 60       	ori	r24, 0x01	; 1
 1de:	87 b9       	out	0x07, r24	; 7
    lcd_rs_low();
 1e0:	88 b1       	in	r24, 0x08	; 8
 1e2:	8e 7f       	andi	r24, 0xFE	; 254
 1e4:	88 b9       	out	0x08, r24	; 8
    DDR(LCD_RW_PORT) |= _BV(LCD_RW_PIN);
 1e6:	87 b1       	in	r24, 0x07	; 7
 1e8:	82 60       	ori	r24, 0x02	; 2
 1ea:	87 b9       	out	0x07, r24	; 7
    lcd_rw_low();
 1ec:	88 b1       	in	r24, 0x08	; 8
 1ee:	8d 7f       	andi	r24, 0xFD	; 253
 1f0:	88 b9       	out	0x08, r24	; 8
    DDR(LCD_E_PORT) |= _BV(LCD_E_PIN);
 1f2:	87 b1       	in	r24, 0x07	; 7
 1f4:	84 60       	ori	r24, 0x04	; 4
 1f6:	87 b9       	out	0x07, r24	; 7
    lcd_e_low();
 1f8:	88 b1       	in	r24, 0x08	; 8
 1fa:	8b 7f       	andi	r24, 0xFB	; 251
 1fc:	88 b9       	out	0x08, r24	; 8
    delay(16000);                           /* wait 16ms after power-on     */

    /* initial write to lcd is 8bit */
    set_data(LCD_FUNCTION_8BIT_1LINE);
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	8f 70       	andi	r24, 0x0F	; 15
 202:	80 63       	ori	r24, 0x30	; 48
 204:	8b b9       	out	0x0b, r24	; 11

    lcd_e_toggle();
 206:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
    delay(4992);         /* delay, busy flag can't be checked here */

    set_data(LCD_FUNCTION_8BIT_1LINE);
 20a:	8b b1       	in	r24, 0x0b	; 11
 20c:	8f 70       	andi	r24, 0x0F	; 15
 20e:	80 63       	ori	r24, 0x30	; 48
 210:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 212:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
    delay(64);           /* delay, busy flag can't be checked here */

    set_data(LCD_FUNCTION_8BIT_1LINE);
 216:	8b b1       	in	r24, 0x0b	; 11
 218:	8f 70       	andi	r24, 0x0F	; 15
 21a:	80 63       	ori	r24, 0x30	; 48
 21c:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 21e:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
    delay(64);           /* delay, busy flag can't be checked here */

    set_data(LCD_FUNCTION_4BIT_1LINE); /* set IO mode to 4bit */
 222:	8b b1       	in	r24, 0x0b	; 11
 224:	8f 70       	andi	r24, 0x0F	; 15
 226:	80 62       	ori	r24, 0x20	; 32
 228:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 22a:	0e 94 53 00 	call	0xa6	; 0xa6 <toggle_e>
    lcd_write(LCD_FUNCTION_8BIT_1LINE,0);   /* function set: 8bit interface */
    delay(64);                              /* wait 64us                    */
    lcd_write(LCD_FUNCTION_8BIT_1LINE,0);   /* function set: 8bit interface */
    delay(64);                              /* wait 64us                    */
#endif
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 22e:	88 e2       	ldi	r24, 0x28	; 40
 230:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 234:	88 e0       	ldi	r24, 0x08	; 8
 236:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>
    lcd_clrscr();                           /* display clear                */
 23a:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 23e:	86 e0       	ldi	r24, 0x06	; 6
 240:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 244:	8c 2f       	mov	r24, r28
 246:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_command>

}/* lcd_init */
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

0000024e <main>:

volatile uint8_t random_adc_value = 1;
volatile int random_value;

int main(void)
{
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	cd b7       	in	r28, 0x3d	; 61
 254:	de b7       	in	r29, 0x3e	; 62
 256:	60 97       	sbiw	r28, 0x10	; 16
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	f8 94       	cli
 25c:	de bf       	out	0x3e, r29	; 62
 25e:	0f be       	out	0x3f, r0	; 63
 260:	cd bf       	out	0x3d, r28	; 61
	// ADC config
	ADMUX |= (1<<REFS0);
 262:	ec e7       	ldi	r30, 0x7C	; 124
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	80 64       	ori	r24, 0x40	; 64
 26a:	80 83       	st	Z, r24
	ADMUX |= (1<<MUX0) | (1<<MUX1);
 26c:	80 81       	ld	r24, Z
 26e:	83 60       	ori	r24, 0x03	; 3
 270:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADATE);
 272:	ea e7       	ldi	r30, 0x7A	; 122
 274:	f0 e0       	ldi	r31, 0x00	; 0
 276:	80 81       	ld	r24, Z
 278:	80 62       	ori	r24, 0x20	; 32
 27a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1<<ADIE);
 27c:	80 81       	ld	r24, Z
 27e:	88 68       	ori	r24, 0x88	; 136
 280:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
 282:	80 81       	ld	r24, Z
 284:	87 60       	ori	r24, 0x07	; 7
 286:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADSC);
 288:	80 81       	ld	r24, Z
 28a:	80 64       	ori	r24, 0x40	; 64
 28c:	80 83       	st	Z, r24
	
	// LCD
	lcd_init(LCD_DISP_ON);
 28e:	8c e0       	ldi	r24, 0x0C	; 12
 290:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_init>
	
	// Tasten
	DDRD &= ~((1<<DDD2) | (1<DDD3));
 294:	8a b1       	in	r24, 0x0a	; 10
 296:	8a 7f       	andi	r24, 0xFA	; 250
 298:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<PORTD2) | (1<<PORTD3);
 29a:	8b b1       	in	r24, 0x0b	; 11
 29c:	8c 60       	ori	r24, 0x0C	; 12
 29e:	8b b9       	out	0x0b, r24	; 11
	EIMSK |= (1<<INT0) | (1<<INT1);
 2a0:	8d b3       	in	r24, 0x1d	; 29
 2a2:	83 60       	ori	r24, 0x03	; 3
 2a4:	8d bb       	out	0x1d, r24	; 29
	
	sei();
 2a6:	78 94       	sei
	
	uint16_t current_value = eeprom_read_word(0x00);
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 6a 05 	call	0xad4	; 0xad4 <eeprom_read_word>
	random_value = current_value;
 2b0:	28 2f       	mov	r18, r24
 2b2:	39 2f       	mov	r19, r25
 2b4:	30 93 1f 01 	sts	0x011F, r19	; 0x80011f <__data_end+0x1>
 2b8:	20 93 1e 01 	sts	0x011E, r18	; 0x80011e <__data_end>
	
	char buffer[16];
	sprintf(buffer, "%u loaded!", current_value);
 2bc:	9f 93       	push	r25
 2be:	8f 93       	push	r24
 2c0:	85 e0       	ldi	r24, 0x05	; 5
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	9f 93       	push	r25
 2c6:	8f 93       	push	r24
 2c8:	8e 01       	movw	r16, r28
 2ca:	0f 5f       	subi	r16, 0xFF	; 255
 2cc:	1f 4f       	sbci	r17, 0xFF	; 255
 2ce:	1f 93       	push	r17
 2d0:	0f 93       	push	r16
 2d2:	0e 94 b7 02 	call	0x56e	; 0x56e <sprintf>
	lcd_clrscr();
 2d6:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_clrscr>
	lcd_puts(buffer);
 2da:	c8 01       	movw	r24, r16
 2dc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e0:	2f ef       	ldi	r18, 0xFF	; 255
 2e2:	83 ed       	ldi	r24, 0xD3	; 211
 2e4:	90 e3       	ldi	r25, 0x30	; 48
 2e6:	21 50       	subi	r18, 0x01	; 1
 2e8:	80 40       	sbci	r24, 0x00	; 0
 2ea:	90 40       	sbci	r25, 0x00	; 0
 2ec:	e1 f7       	brne	.-8      	; 0x2e6 <main+0x98>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <main+0xa2>
 2f0:	00 00       	nop
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
 2fe:	ff cf       	rjmp	.-2      	; 0x2fe <main+0xb0>

00000300 <__vector_21>:
    while (1) 
    {
    }
}

ISR(ADC_vect) {
 300:	1f 92       	push	r1
 302:	0f 92       	push	r0
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	0f 92       	push	r0
 308:	11 24       	eor	r1, r1
 30a:	8f 93       	push	r24
 30c:	9f 93       	push	r25
	random_adc_value = ADCW;
 30e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 312:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 316:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <random_adc_value>
}
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	0f 90       	pop	r0
 320:	0f be       	out	0x3f, r0	; 63
 322:	0f 90       	pop	r0
 324:	1f 90       	pop	r1
 326:	18 95       	reti

00000328 <__vector_1>:

ISR (INT0_vect) {
 328:	1f 92       	push	r1
 32a:	0f 92       	push	r0
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	0f 92       	push	r0
 330:	11 24       	eor	r1, r1
 332:	0f 93       	push	r16
 334:	1f 93       	push	r17
 336:	2f 93       	push	r18
 338:	3f 93       	push	r19
 33a:	4f 93       	push	r20
 33c:	5f 93       	push	r21
 33e:	6f 93       	push	r22
 340:	7f 93       	push	r23
 342:	8f 93       	push	r24
 344:	9f 93       	push	r25
 346:	af 93       	push	r26
 348:	bf 93       	push	r27
 34a:	ef 93       	push	r30
 34c:	ff 93       	push	r31
 34e:	cf 93       	push	r28
 350:	df 93       	push	r29
 352:	cd b7       	in	r28, 0x3d	; 61
 354:	de b7       	in	r29, 0x3e	; 62
 356:	60 97       	sbiw	r28, 0x10	; 16
 358:	de bf       	out	0x3e, r29	; 62
 35a:	cd bf       	out	0x3d, r28	; 61
	srand(random_adc_value);
 35c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <random_adc_value>
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	0e 94 ac 02 	call	0x558	; 0x558 <srand>
	random_value = rand();
 366:	0e 94 a7 02 	call	0x54e	; 0x54e <rand>
 36a:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
 36e:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
	
	char buffer[16];
	sprintf(buffer, "%u", random_value);
 372:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 376:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 37a:	9f 93       	push	r25
 37c:	8f 93       	push	r24
 37e:	80 e1       	ldi	r24, 0x10	; 16
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	8e 01       	movw	r16, r28
 388:	0f 5f       	subi	r16, 0xFF	; 255
 38a:	1f 4f       	sbci	r17, 0xFF	; 255
 38c:	1f 93       	push	r17
 38e:	0f 93       	push	r16
 390:	0e 94 b7 02 	call	0x56e	; 0x56e <sprintf>
	lcd_clrscr();
 394:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_clrscr>
	lcd_puts(buffer);
 398:	c8 01       	movw	r24, r16
 39a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_puts>
 39e:	2f ef       	ldi	r18, 0xFF	; 255
 3a0:	83 ec       	ldi	r24, 0xC3	; 195
 3a2:	99 e0       	ldi	r25, 0x09	; 9
 3a4:	21 50       	subi	r18, 0x01	; 1
 3a6:	80 40       	sbci	r24, 0x00	; 0
 3a8:	90 40       	sbci	r25, 0x00	; 0
 3aa:	e1 f7       	brne	.-8      	; 0x3a4 <__vector_1+0x7c>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <__vector_1+0x86>
 3ae:	00 00       	nop
	_delay_ms(200);
}
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	0f 90       	pop	r0
 3b8:	0f 90       	pop	r0
 3ba:	0f 90       	pop	r0
 3bc:	60 96       	adiw	r28, 0x10	; 16
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	ff 91       	pop	r31
 3ce:	ef 91       	pop	r30
 3d0:	bf 91       	pop	r27
 3d2:	af 91       	pop	r26
 3d4:	9f 91       	pop	r25
 3d6:	8f 91       	pop	r24
 3d8:	7f 91       	pop	r23
 3da:	6f 91       	pop	r22
 3dc:	5f 91       	pop	r21
 3de:	4f 91       	pop	r20
 3e0:	3f 91       	pop	r19
 3e2:	2f 91       	pop	r18
 3e4:	1f 91       	pop	r17
 3e6:	0f 91       	pop	r16
 3e8:	0f 90       	pop	r0
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	0f 90       	pop	r0
 3ee:	1f 90       	pop	r1
 3f0:	18 95       	reti

000003f2 <__vector_2>:

ISR (INT1_vect) {
 3f2:	1f 92       	push	r1
 3f4:	0f 92       	push	r0
 3f6:	0f b6       	in	r0, 0x3f	; 63
 3f8:	0f 92       	push	r0
 3fa:	11 24       	eor	r1, r1
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	2f 93       	push	r18
 402:	3f 93       	push	r19
 404:	4f 93       	push	r20
 406:	5f 93       	push	r21
 408:	6f 93       	push	r22
 40a:	7f 93       	push	r23
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	af 93       	push	r26
 412:	bf 93       	push	r27
 414:	ef 93       	push	r30
 416:	ff 93       	push	r31
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	cd b7       	in	r28, 0x3d	; 61
 41e:	de b7       	in	r29, 0x3e	; 62
 420:	60 97       	sbiw	r28, 0x10	; 16
 422:	de bf       	out	0x3e, r29	; 62
 424:	cd bf       	out	0x3d, r28	; 61
	eeprom_write_word(0x00, random_value);	
 426:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <__data_end>
 42a:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <__data_end+0x1>
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 70 05 	call	0xae0	; 0xae0 <eeprom_write_word>
	
	char buffer[16];
	sprintf(buffer, "%u saved!", random_value);
 436:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 43a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 43e:	9f 93       	push	r25
 440:	8f 93       	push	r24
 442:	83 e1       	ldi	r24, 0x13	; 19
 444:	91 e0       	ldi	r25, 0x01	; 1
 446:	9f 93       	push	r25
 448:	8f 93       	push	r24
 44a:	8e 01       	movw	r16, r28
 44c:	0f 5f       	subi	r16, 0xFF	; 255
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	1f 93       	push	r17
 452:	0f 93       	push	r16
 454:	0e 94 b7 02 	call	0x56e	; 0x56e <sprintf>
	lcd_clrscr();
 458:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_clrscr>
	lcd_puts(buffer);
 45c:	c8 01       	movw	r24, r16
 45e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_puts>
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	83 ed       	ldi	r24, 0xD3	; 211
 466:	90 e3       	ldi	r25, 0x30	; 48
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	80 40       	sbci	r24, 0x00	; 0
 46c:	90 40       	sbci	r25, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 472:	00 00       	nop
	_delay_ms(1000);
}
 474:	0f 90       	pop	r0
 476:	0f 90       	pop	r0
 478:	0f 90       	pop	r0
 47a:	0f 90       	pop	r0
 47c:	0f 90       	pop	r0
 47e:	0f 90       	pop	r0
 480:	60 96       	adiw	r28, 0x10	; 16
 482:	0f b6       	in	r0, 0x3f	; 63
 484:	f8 94       	cli
 486:	de bf       	out	0x3e, r29	; 62
 488:	0f be       	out	0x3f, r0	; 63
 48a:	cd bf       	out	0x3d, r28	; 61
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	ff 91       	pop	r31
 492:	ef 91       	pop	r30
 494:	bf 91       	pop	r27
 496:	af 91       	pop	r26
 498:	9f 91       	pop	r25
 49a:	8f 91       	pop	r24
 49c:	7f 91       	pop	r23
 49e:	6f 91       	pop	r22
 4a0:	5f 91       	pop	r21
 4a2:	4f 91       	pop	r20
 4a4:	3f 91       	pop	r19
 4a6:	2f 91       	pop	r18
 4a8:	1f 91       	pop	r17
 4aa:	0f 91       	pop	r16
 4ac:	0f 90       	pop	r0
 4ae:	0f be       	out	0x3f, r0	; 63
 4b0:	0f 90       	pop	r0
 4b2:	1f 90       	pop	r1
 4b4:	18 95       	reti

000004b6 <do_rand>:
 4b6:	8f 92       	push	r8
 4b8:	9f 92       	push	r9
 4ba:	af 92       	push	r10
 4bc:	bf 92       	push	r11
 4be:	cf 92       	push	r12
 4c0:	df 92       	push	r13
 4c2:	ef 92       	push	r14
 4c4:	ff 92       	push	r15
 4c6:	cf 93       	push	r28
 4c8:	df 93       	push	r29
 4ca:	ec 01       	movw	r28, r24
 4cc:	68 81       	ld	r22, Y
 4ce:	79 81       	ldd	r23, Y+1	; 0x01
 4d0:	8a 81       	ldd	r24, Y+2	; 0x02
 4d2:	9b 81       	ldd	r25, Y+3	; 0x03
 4d4:	61 15       	cp	r22, r1
 4d6:	71 05       	cpc	r23, r1
 4d8:	81 05       	cpc	r24, r1
 4da:	91 05       	cpc	r25, r1
 4dc:	21 f4       	brne	.+8      	; 0x4e6 <do_rand+0x30>
 4de:	64 e2       	ldi	r22, 0x24	; 36
 4e0:	79 ed       	ldi	r23, 0xD9	; 217
 4e2:	8b e5       	ldi	r24, 0x5B	; 91
 4e4:	97 e0       	ldi	r25, 0x07	; 7
 4e6:	2d e1       	ldi	r18, 0x1D	; 29
 4e8:	33 ef       	ldi	r19, 0xF3	; 243
 4ea:	41 e0       	ldi	r20, 0x01	; 1
 4ec:	50 e0       	ldi	r21, 0x00	; 0
 4ee:	0e 94 93 05 	call	0xb26	; 0xb26 <__divmodsi4>
 4f2:	49 01       	movw	r8, r18
 4f4:	5a 01       	movw	r10, r20
 4f6:	9b 01       	movw	r18, r22
 4f8:	ac 01       	movw	r20, r24
 4fa:	a7 ea       	ldi	r26, 0xA7	; 167
 4fc:	b1 e4       	ldi	r27, 0x41	; 65
 4fe:	0e 94 b2 05 	call	0xb64	; 0xb64 <__muluhisi3>
 502:	6b 01       	movw	r12, r22
 504:	7c 01       	movw	r14, r24
 506:	ac ee       	ldi	r26, 0xEC	; 236
 508:	b4 ef       	ldi	r27, 0xF4	; 244
 50a:	a5 01       	movw	r20, r10
 50c:	94 01       	movw	r18, r8
 50e:	0e 94 c0 05 	call	0xb80	; 0xb80 <__mulohisi3>
 512:	dc 01       	movw	r26, r24
 514:	cb 01       	movw	r24, r22
 516:	8c 0d       	add	r24, r12
 518:	9d 1d       	adc	r25, r13
 51a:	ae 1d       	adc	r26, r14
 51c:	bf 1d       	adc	r27, r15
 51e:	b7 ff       	sbrs	r27, 7
 520:	03 c0       	rjmp	.+6      	; 0x528 <do_rand+0x72>
 522:	01 97       	sbiw	r24, 0x01	; 1
 524:	a1 09       	sbc	r26, r1
 526:	b0 48       	sbci	r27, 0x80	; 128
 528:	88 83       	st	Y, r24
 52a:	99 83       	std	Y+1, r25	; 0x01
 52c:	aa 83       	std	Y+2, r26	; 0x02
 52e:	bb 83       	std	Y+3, r27	; 0x03
 530:	9f 77       	andi	r25, 0x7F	; 127
 532:	df 91       	pop	r29
 534:	cf 91       	pop	r28
 536:	ff 90       	pop	r15
 538:	ef 90       	pop	r14
 53a:	df 90       	pop	r13
 53c:	cf 90       	pop	r12
 53e:	bf 90       	pop	r11
 540:	af 90       	pop	r10
 542:	9f 90       	pop	r9
 544:	8f 90       	pop	r8
 546:	08 95       	ret

00000548 <rand_r>:
 548:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <do_rand>
 54c:	08 95       	ret

0000054e <rand>:
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	91 e0       	ldi	r25, 0x01	; 1
 552:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <do_rand>
 556:	08 95       	ret

00000558 <srand>:
 558:	a0 e0       	ldi	r26, 0x00	; 0
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 560:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 564:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 568:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 56c:	08 95       	ret

0000056e <sprintf>:
 56e:	ae e0       	ldi	r26, 0x0E	; 14
 570:	b0 e0       	ldi	r27, 0x00	; 0
 572:	ed eb       	ldi	r30, 0xBD	; 189
 574:	f2 e0       	ldi	r31, 0x02	; 2
 576:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__prologue_saves__+0x1c>
 57a:	0d 89       	ldd	r16, Y+21	; 0x15
 57c:	1e 89       	ldd	r17, Y+22	; 0x16
 57e:	86 e0       	ldi	r24, 0x06	; 6
 580:	8c 83       	std	Y+4, r24	; 0x04
 582:	1a 83       	std	Y+2, r17	; 0x02
 584:	09 83       	std	Y+1, r16	; 0x01
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	9f e7       	ldi	r25, 0x7F	; 127
 58a:	9e 83       	std	Y+6, r25	; 0x06
 58c:	8d 83       	std	Y+5, r24	; 0x05
 58e:	ae 01       	movw	r20, r28
 590:	47 5e       	subi	r20, 0xE7	; 231
 592:	5f 4f       	sbci	r21, 0xFF	; 255
 594:	6f 89       	ldd	r22, Y+23	; 0x17
 596:	78 8d       	ldd	r23, Y+24	; 0x18
 598:	ce 01       	movw	r24, r28
 59a:	01 96       	adiw	r24, 0x01	; 1
 59c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <vfprintf>
 5a0:	ef 81       	ldd	r30, Y+7	; 0x07
 5a2:	f8 85       	ldd	r31, Y+8	; 0x08
 5a4:	e0 0f       	add	r30, r16
 5a6:	f1 1f       	adc	r31, r17
 5a8:	10 82       	st	Z, r1
 5aa:	2e 96       	adiw	r28, 0x0e	; 14
 5ac:	e4 e0       	ldi	r30, 0x04	; 4
 5ae:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__epilogue_restores__+0x1c>

000005b2 <vfprintf>:
 5b2:	ab e0       	ldi	r26, 0x0B	; 11
 5b4:	b0 e0       	ldi	r27, 0x00	; 0
 5b6:	ef ed       	ldi	r30, 0xDF	; 223
 5b8:	f2 e0       	ldi	r31, 0x02	; 2
 5ba:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__prologue_saves__>
 5be:	6c 01       	movw	r12, r24
 5c0:	7b 01       	movw	r14, r22
 5c2:	8a 01       	movw	r16, r20
 5c4:	fc 01       	movw	r30, r24
 5c6:	17 82       	std	Z+7, r1	; 0x07
 5c8:	16 82       	std	Z+6, r1	; 0x06
 5ca:	83 81       	ldd	r24, Z+3	; 0x03
 5cc:	81 ff       	sbrs	r24, 1
 5ce:	cc c1       	rjmp	.+920    	; 0x968 <__stack+0x69>
 5d0:	ce 01       	movw	r24, r28
 5d2:	01 96       	adiw	r24, 0x01	; 1
 5d4:	3c 01       	movw	r6, r24
 5d6:	f6 01       	movw	r30, r12
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	f7 01       	movw	r30, r14
 5dc:	93 fd       	sbrc	r25, 3
 5de:	85 91       	lpm	r24, Z+
 5e0:	93 ff       	sbrs	r25, 3
 5e2:	81 91       	ld	r24, Z+
 5e4:	7f 01       	movw	r14, r30
 5e6:	88 23       	and	r24, r24
 5e8:	09 f4       	brne	.+2      	; 0x5ec <vfprintf+0x3a>
 5ea:	ba c1       	rjmp	.+884    	; 0x960 <__stack+0x61>
 5ec:	85 32       	cpi	r24, 0x25	; 37
 5ee:	39 f4       	brne	.+14     	; 0x5fe <vfprintf+0x4c>
 5f0:	93 fd       	sbrc	r25, 3
 5f2:	85 91       	lpm	r24, Z+
 5f4:	93 ff       	sbrs	r25, 3
 5f6:	81 91       	ld	r24, Z+
 5f8:	7f 01       	movw	r14, r30
 5fa:	85 32       	cpi	r24, 0x25	; 37
 5fc:	29 f4       	brne	.+10     	; 0x608 <vfprintf+0x56>
 5fe:	b6 01       	movw	r22, r12
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 606:	e7 cf       	rjmp	.-50     	; 0x5d6 <vfprintf+0x24>
 608:	91 2c       	mov	r9, r1
 60a:	21 2c       	mov	r2, r1
 60c:	31 2c       	mov	r3, r1
 60e:	ff e1       	ldi	r31, 0x1F	; 31
 610:	f3 15       	cp	r31, r3
 612:	d8 f0       	brcs	.+54     	; 0x64a <vfprintf+0x98>
 614:	8b 32       	cpi	r24, 0x2B	; 43
 616:	79 f0       	breq	.+30     	; 0x636 <vfprintf+0x84>
 618:	38 f4       	brcc	.+14     	; 0x628 <vfprintf+0x76>
 61a:	80 32       	cpi	r24, 0x20	; 32
 61c:	79 f0       	breq	.+30     	; 0x63c <vfprintf+0x8a>
 61e:	83 32       	cpi	r24, 0x23	; 35
 620:	a1 f4       	brne	.+40     	; 0x64a <vfprintf+0x98>
 622:	23 2d       	mov	r18, r3
 624:	20 61       	ori	r18, 0x10	; 16
 626:	1d c0       	rjmp	.+58     	; 0x662 <vfprintf+0xb0>
 628:	8d 32       	cpi	r24, 0x2D	; 45
 62a:	61 f0       	breq	.+24     	; 0x644 <vfprintf+0x92>
 62c:	80 33       	cpi	r24, 0x30	; 48
 62e:	69 f4       	brne	.+26     	; 0x64a <vfprintf+0x98>
 630:	23 2d       	mov	r18, r3
 632:	21 60       	ori	r18, 0x01	; 1
 634:	16 c0       	rjmp	.+44     	; 0x662 <vfprintf+0xb0>
 636:	83 2d       	mov	r24, r3
 638:	82 60       	ori	r24, 0x02	; 2
 63a:	38 2e       	mov	r3, r24
 63c:	e3 2d       	mov	r30, r3
 63e:	e4 60       	ori	r30, 0x04	; 4
 640:	3e 2e       	mov	r3, r30
 642:	2a c0       	rjmp	.+84     	; 0x698 <vfprintf+0xe6>
 644:	f3 2d       	mov	r31, r3
 646:	f8 60       	ori	r31, 0x08	; 8
 648:	1d c0       	rjmp	.+58     	; 0x684 <vfprintf+0xd2>
 64a:	37 fc       	sbrc	r3, 7
 64c:	2d c0       	rjmp	.+90     	; 0x6a8 <vfprintf+0xf6>
 64e:	20 ed       	ldi	r18, 0xD0	; 208
 650:	28 0f       	add	r18, r24
 652:	2a 30       	cpi	r18, 0x0A	; 10
 654:	40 f0       	brcs	.+16     	; 0x666 <vfprintf+0xb4>
 656:	8e 32       	cpi	r24, 0x2E	; 46
 658:	b9 f4       	brne	.+46     	; 0x688 <vfprintf+0xd6>
 65a:	36 fc       	sbrc	r3, 6
 65c:	81 c1       	rjmp	.+770    	; 0x960 <__stack+0x61>
 65e:	23 2d       	mov	r18, r3
 660:	20 64       	ori	r18, 0x40	; 64
 662:	32 2e       	mov	r3, r18
 664:	19 c0       	rjmp	.+50     	; 0x698 <vfprintf+0xe6>
 666:	36 fe       	sbrs	r3, 6
 668:	06 c0       	rjmp	.+12     	; 0x676 <vfprintf+0xc4>
 66a:	8a e0       	ldi	r24, 0x0A	; 10
 66c:	98 9e       	mul	r9, r24
 66e:	20 0d       	add	r18, r0
 670:	11 24       	eor	r1, r1
 672:	92 2e       	mov	r9, r18
 674:	11 c0       	rjmp	.+34     	; 0x698 <vfprintf+0xe6>
 676:	ea e0       	ldi	r30, 0x0A	; 10
 678:	2e 9e       	mul	r2, r30
 67a:	20 0d       	add	r18, r0
 67c:	11 24       	eor	r1, r1
 67e:	22 2e       	mov	r2, r18
 680:	f3 2d       	mov	r31, r3
 682:	f0 62       	ori	r31, 0x20	; 32
 684:	3f 2e       	mov	r3, r31
 686:	08 c0       	rjmp	.+16     	; 0x698 <vfprintf+0xe6>
 688:	8c 36       	cpi	r24, 0x6C	; 108
 68a:	21 f4       	brne	.+8      	; 0x694 <vfprintf+0xe2>
 68c:	83 2d       	mov	r24, r3
 68e:	80 68       	ori	r24, 0x80	; 128
 690:	38 2e       	mov	r3, r24
 692:	02 c0       	rjmp	.+4      	; 0x698 <vfprintf+0xe6>
 694:	88 36       	cpi	r24, 0x68	; 104
 696:	41 f4       	brne	.+16     	; 0x6a8 <vfprintf+0xf6>
 698:	f7 01       	movw	r30, r14
 69a:	93 fd       	sbrc	r25, 3
 69c:	85 91       	lpm	r24, Z+
 69e:	93 ff       	sbrs	r25, 3
 6a0:	81 91       	ld	r24, Z+
 6a2:	7f 01       	movw	r14, r30
 6a4:	81 11       	cpse	r24, r1
 6a6:	b3 cf       	rjmp	.-154    	; 0x60e <vfprintf+0x5c>
 6a8:	98 2f       	mov	r25, r24
 6aa:	9f 7d       	andi	r25, 0xDF	; 223
 6ac:	95 54       	subi	r25, 0x45	; 69
 6ae:	93 30       	cpi	r25, 0x03	; 3
 6b0:	28 f4       	brcc	.+10     	; 0x6bc <vfprintf+0x10a>
 6b2:	0c 5f       	subi	r16, 0xFC	; 252
 6b4:	1f 4f       	sbci	r17, 0xFF	; 255
 6b6:	9f e3       	ldi	r25, 0x3F	; 63
 6b8:	99 83       	std	Y+1, r25	; 0x01
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <vfprintf+0x124>
 6bc:	83 36       	cpi	r24, 0x63	; 99
 6be:	31 f0       	breq	.+12     	; 0x6cc <vfprintf+0x11a>
 6c0:	83 37       	cpi	r24, 0x73	; 115
 6c2:	71 f0       	breq	.+28     	; 0x6e0 <vfprintf+0x12e>
 6c4:	83 35       	cpi	r24, 0x53	; 83
 6c6:	09 f0       	breq	.+2      	; 0x6ca <vfprintf+0x118>
 6c8:	59 c0       	rjmp	.+178    	; 0x77c <vfprintf+0x1ca>
 6ca:	21 c0       	rjmp	.+66     	; 0x70e <vfprintf+0x15c>
 6cc:	f8 01       	movw	r30, r16
 6ce:	80 81       	ld	r24, Z
 6d0:	89 83       	std	Y+1, r24	; 0x01
 6d2:	0e 5f       	subi	r16, 0xFE	; 254
 6d4:	1f 4f       	sbci	r17, 0xFF	; 255
 6d6:	88 24       	eor	r8, r8
 6d8:	83 94       	inc	r8
 6da:	91 2c       	mov	r9, r1
 6dc:	53 01       	movw	r10, r6
 6de:	13 c0       	rjmp	.+38     	; 0x706 <vfprintf+0x154>
 6e0:	28 01       	movw	r4, r16
 6e2:	f2 e0       	ldi	r31, 0x02	; 2
 6e4:	4f 0e       	add	r4, r31
 6e6:	51 1c       	adc	r5, r1
 6e8:	f8 01       	movw	r30, r16
 6ea:	a0 80       	ld	r10, Z
 6ec:	b1 80       	ldd	r11, Z+1	; 0x01
 6ee:	36 fe       	sbrs	r3, 6
 6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <vfprintf+0x146>
 6f2:	69 2d       	mov	r22, r9
 6f4:	70 e0       	ldi	r23, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <vfprintf+0x14a>
 6f8:	6f ef       	ldi	r22, 0xFF	; 255
 6fa:	7f ef       	ldi	r23, 0xFF	; 255
 6fc:	c5 01       	movw	r24, r10
 6fe:	0e 94 c5 04 	call	0x98a	; 0x98a <strnlen>
 702:	4c 01       	movw	r8, r24
 704:	82 01       	movw	r16, r4
 706:	f3 2d       	mov	r31, r3
 708:	ff 77       	andi	r31, 0x7F	; 127
 70a:	3f 2e       	mov	r3, r31
 70c:	16 c0       	rjmp	.+44     	; 0x73a <vfprintf+0x188>
 70e:	28 01       	movw	r4, r16
 710:	22 e0       	ldi	r18, 0x02	; 2
 712:	42 0e       	add	r4, r18
 714:	51 1c       	adc	r5, r1
 716:	f8 01       	movw	r30, r16
 718:	a0 80       	ld	r10, Z
 71a:	b1 80       	ldd	r11, Z+1	; 0x01
 71c:	36 fe       	sbrs	r3, 6
 71e:	03 c0       	rjmp	.+6      	; 0x726 <vfprintf+0x174>
 720:	69 2d       	mov	r22, r9
 722:	70 e0       	ldi	r23, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfprintf+0x178>
 726:	6f ef       	ldi	r22, 0xFF	; 255
 728:	7f ef       	ldi	r23, 0xFF	; 255
 72a:	c5 01       	movw	r24, r10
 72c:	0e 94 ba 04 	call	0x974	; 0x974 <strnlen_P>
 730:	4c 01       	movw	r8, r24
 732:	f3 2d       	mov	r31, r3
 734:	f0 68       	ori	r31, 0x80	; 128
 736:	3f 2e       	mov	r3, r31
 738:	82 01       	movw	r16, r4
 73a:	33 fc       	sbrc	r3, 3
 73c:	1b c0       	rjmp	.+54     	; 0x774 <vfprintf+0x1c2>
 73e:	82 2d       	mov	r24, r2
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	88 16       	cp	r8, r24
 744:	99 06       	cpc	r9, r25
 746:	b0 f4       	brcc	.+44     	; 0x774 <vfprintf+0x1c2>
 748:	b6 01       	movw	r22, r12
 74a:	80 e2       	ldi	r24, 0x20	; 32
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 752:	2a 94       	dec	r2
 754:	f4 cf       	rjmp	.-24     	; 0x73e <vfprintf+0x18c>
 756:	f5 01       	movw	r30, r10
 758:	37 fc       	sbrc	r3, 7
 75a:	85 91       	lpm	r24, Z+
 75c:	37 fe       	sbrs	r3, 7
 75e:	81 91       	ld	r24, Z+
 760:	5f 01       	movw	r10, r30
 762:	b6 01       	movw	r22, r12
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 76a:	21 10       	cpse	r2, r1
 76c:	2a 94       	dec	r2
 76e:	21 e0       	ldi	r18, 0x01	; 1
 770:	82 1a       	sub	r8, r18
 772:	91 08       	sbc	r9, r1
 774:	81 14       	cp	r8, r1
 776:	91 04       	cpc	r9, r1
 778:	71 f7       	brne	.-36     	; 0x756 <vfprintf+0x1a4>
 77a:	e8 c0       	rjmp	.+464    	; 0x94c <__stack+0x4d>
 77c:	84 36       	cpi	r24, 0x64	; 100
 77e:	11 f0       	breq	.+4      	; 0x784 <vfprintf+0x1d2>
 780:	89 36       	cpi	r24, 0x69	; 105
 782:	41 f5       	brne	.+80     	; 0x7d4 <vfprintf+0x222>
 784:	f8 01       	movw	r30, r16
 786:	37 fe       	sbrs	r3, 7
 788:	07 c0       	rjmp	.+14     	; 0x798 <vfprintf+0x1e6>
 78a:	60 81       	ld	r22, Z
 78c:	71 81       	ldd	r23, Z+1	; 0x01
 78e:	82 81       	ldd	r24, Z+2	; 0x02
 790:	93 81       	ldd	r25, Z+3	; 0x03
 792:	0c 5f       	subi	r16, 0xFC	; 252
 794:	1f 4f       	sbci	r17, 0xFF	; 255
 796:	08 c0       	rjmp	.+16     	; 0x7a8 <vfprintf+0x1f6>
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	07 2e       	mov	r0, r23
 79e:	00 0c       	add	r0, r0
 7a0:	88 0b       	sbc	r24, r24
 7a2:	99 0b       	sbc	r25, r25
 7a4:	0e 5f       	subi	r16, 0xFE	; 254
 7a6:	1f 4f       	sbci	r17, 0xFF	; 255
 7a8:	f3 2d       	mov	r31, r3
 7aa:	ff 76       	andi	r31, 0x6F	; 111
 7ac:	3f 2e       	mov	r3, r31
 7ae:	97 ff       	sbrs	r25, 7
 7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <vfprintf+0x212>
 7b2:	90 95       	com	r25
 7b4:	80 95       	com	r24
 7b6:	70 95       	com	r23
 7b8:	61 95       	neg	r22
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	f0 68       	ori	r31, 0x80	; 128
 7c2:	3f 2e       	mov	r3, r31
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	a3 01       	movw	r20, r6
 7ca:	0e 94 0c 05 	call	0xa18	; 0xa18 <__ultoa_invert>
 7ce:	88 2e       	mov	r8, r24
 7d0:	86 18       	sub	r8, r6
 7d2:	45 c0       	rjmp	.+138    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 7d4:	85 37       	cpi	r24, 0x75	; 117
 7d6:	31 f4       	brne	.+12     	; 0x7e4 <vfprintf+0x232>
 7d8:	23 2d       	mov	r18, r3
 7da:	2f 7e       	andi	r18, 0xEF	; 239
 7dc:	b2 2e       	mov	r11, r18
 7de:	2a e0       	ldi	r18, 0x0A	; 10
 7e0:	30 e0       	ldi	r19, 0x00	; 0
 7e2:	25 c0       	rjmp	.+74     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 7e4:	93 2d       	mov	r25, r3
 7e6:	99 7f       	andi	r25, 0xF9	; 249
 7e8:	b9 2e       	mov	r11, r25
 7ea:	8f 36       	cpi	r24, 0x6F	; 111
 7ec:	c1 f0       	breq	.+48     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7ee:	18 f4       	brcc	.+6      	; 0x7f6 <vfprintf+0x244>
 7f0:	88 35       	cpi	r24, 0x58	; 88
 7f2:	79 f0       	breq	.+30     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7f4:	b5 c0       	rjmp	.+362    	; 0x960 <__stack+0x61>
 7f6:	80 37       	cpi	r24, 0x70	; 112
 7f8:	19 f0       	breq	.+6      	; 0x800 <__DATA_REGION_LENGTH__>
 7fa:	88 37       	cpi	r24, 0x78	; 120
 7fc:	21 f0       	breq	.+8      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fe:	b0 c0       	rjmp	.+352    	; 0x960 <__stack+0x61>
 800:	e9 2f       	mov	r30, r25
 802:	e0 61       	ori	r30, 0x10	; 16
 804:	be 2e       	mov	r11, r30
 806:	b4 fe       	sbrs	r11, 4
 808:	0d c0       	rjmp	.+26     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 80a:	fb 2d       	mov	r31, r11
 80c:	f4 60       	ori	r31, 0x04	; 4
 80e:	bf 2e       	mov	r11, r31
 810:	09 c0       	rjmp	.+18     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 812:	34 fe       	sbrs	r3, 4
 814:	0a c0       	rjmp	.+20     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 816:	29 2f       	mov	r18, r25
 818:	26 60       	ori	r18, 0x06	; 6
 81a:	b2 2e       	mov	r11, r18
 81c:	06 c0       	rjmp	.+12     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 81e:	28 e0       	ldi	r18, 0x08	; 8
 820:	30 e0       	ldi	r19, 0x00	; 0
 822:	05 c0       	rjmp	.+10     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 824:	20 e1       	ldi	r18, 0x10	; 16
 826:	30 e0       	ldi	r19, 0x00	; 0
 828:	02 c0       	rjmp	.+4      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 82a:	20 e1       	ldi	r18, 0x10	; 16
 82c:	32 e0       	ldi	r19, 0x02	; 2
 82e:	f8 01       	movw	r30, r16
 830:	b7 fe       	sbrs	r11, 7
 832:	07 c0       	rjmp	.+14     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 834:	60 81       	ld	r22, Z
 836:	71 81       	ldd	r23, Z+1	; 0x01
 838:	82 81       	ldd	r24, Z+2	; 0x02
 83a:	93 81       	ldd	r25, Z+3	; 0x03
 83c:	0c 5f       	subi	r16, 0xFC	; 252
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	06 c0       	rjmp	.+12     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 842:	60 81       	ld	r22, Z
 844:	71 81       	ldd	r23, Z+1	; 0x01
 846:	80 e0       	ldi	r24, 0x00	; 0
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0e 5f       	subi	r16, 0xFE	; 254
 84c:	1f 4f       	sbci	r17, 0xFF	; 255
 84e:	a3 01       	movw	r20, r6
 850:	0e 94 0c 05 	call	0xa18	; 0xa18 <__ultoa_invert>
 854:	88 2e       	mov	r8, r24
 856:	86 18       	sub	r8, r6
 858:	fb 2d       	mov	r31, r11
 85a:	ff 77       	andi	r31, 0x7F	; 127
 85c:	3f 2e       	mov	r3, r31
 85e:	36 fe       	sbrs	r3, 6
 860:	0d c0       	rjmp	.+26     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 862:	23 2d       	mov	r18, r3
 864:	2e 7f       	andi	r18, 0xFE	; 254
 866:	a2 2e       	mov	r10, r18
 868:	89 14       	cp	r8, r9
 86a:	58 f4       	brcc	.+22     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 86c:	34 fe       	sbrs	r3, 4
 86e:	0b c0       	rjmp	.+22     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 870:	32 fc       	sbrc	r3, 2
 872:	09 c0       	rjmp	.+18     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 874:	83 2d       	mov	r24, r3
 876:	8e 7e       	andi	r24, 0xEE	; 238
 878:	a8 2e       	mov	r10, r24
 87a:	05 c0       	rjmp	.+10     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 87c:	b8 2c       	mov	r11, r8
 87e:	a3 2c       	mov	r10, r3
 880:	03 c0       	rjmp	.+6      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 882:	b8 2c       	mov	r11, r8
 884:	01 c0       	rjmp	.+2      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 886:	b9 2c       	mov	r11, r9
 888:	a4 fe       	sbrs	r10, 4
 88a:	0f c0       	rjmp	.+30     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 88c:	fe 01       	movw	r30, r28
 88e:	e8 0d       	add	r30, r8
 890:	f1 1d       	adc	r31, r1
 892:	80 81       	ld	r24, Z
 894:	80 33       	cpi	r24, 0x30	; 48
 896:	21 f4       	brne	.+8      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 898:	9a 2d       	mov	r25, r10
 89a:	99 7e       	andi	r25, 0xE9	; 233
 89c:	a9 2e       	mov	r10, r25
 89e:	09 c0       	rjmp	.+18     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8a0:	a2 fe       	sbrs	r10, 2
 8a2:	06 c0       	rjmp	.+12     	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8a4:	b3 94       	inc	r11
 8a6:	b3 94       	inc	r11
 8a8:	04 c0       	rjmp	.+8      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8aa:	8a 2d       	mov	r24, r10
 8ac:	86 78       	andi	r24, 0x86	; 134
 8ae:	09 f0       	breq	.+2      	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8b0:	b3 94       	inc	r11
 8b2:	a3 fc       	sbrc	r10, 3
 8b4:	11 c0       	rjmp	.+34     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
 8b6:	a0 fe       	sbrs	r10, 0
 8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8ba:	b2 14       	cp	r11, r2
 8bc:	88 f4       	brcc	.+34     	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8be:	28 0c       	add	r2, r8
 8c0:	92 2c       	mov	r9, r2
 8c2:	9b 18       	sub	r9, r11
 8c4:	0e c0       	rjmp	.+28     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8c6:	b2 14       	cp	r11, r2
 8c8:	60 f4       	brcc	.+24     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8ca:	b6 01       	movw	r22, r12
 8cc:	80 e2       	ldi	r24, 0x20	; 32
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 8d4:	b3 94       	inc	r11
 8d6:	f7 cf       	rjmp	.-18     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8d8:	b2 14       	cp	r11, r2
 8da:	18 f4       	brcc	.+6      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
 8dc:	2b 18       	sub	r2, r11
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8e0:	98 2c       	mov	r9, r8
 8e2:	21 2c       	mov	r2, r1
 8e4:	a4 fe       	sbrs	r10, 4
 8e6:	10 c0       	rjmp	.+32     	; 0x908 <__stack+0x9>
 8e8:	b6 01       	movw	r22, r12
 8ea:	80 e3       	ldi	r24, 0x30	; 48
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 8f2:	a2 fe       	sbrs	r10, 2
 8f4:	17 c0       	rjmp	.+46     	; 0x924 <__stack+0x25>
 8f6:	a1 fc       	sbrc	r10, 1
 8f8:	03 c0       	rjmp	.+6      	; 0x900 <__stack+0x1>
 8fa:	88 e7       	ldi	r24, 0x78	; 120
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <__stack+0x5>
 900:	88 e5       	ldi	r24, 0x58	; 88
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	b6 01       	movw	r22, r12
 906:	0c c0       	rjmp	.+24     	; 0x920 <__stack+0x21>
 908:	8a 2d       	mov	r24, r10
 90a:	86 78       	andi	r24, 0x86	; 134
 90c:	59 f0       	breq	.+22     	; 0x924 <__stack+0x25>
 90e:	a1 fe       	sbrs	r10, 1
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0x17>
 912:	8b e2       	ldi	r24, 0x2B	; 43
 914:	01 c0       	rjmp	.+2      	; 0x918 <__stack+0x19>
 916:	80 e2       	ldi	r24, 0x20	; 32
 918:	a7 fc       	sbrc	r10, 7
 91a:	8d e2       	ldi	r24, 0x2D	; 45
 91c:	b6 01       	movw	r22, r12
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 924:	89 14       	cp	r8, r9
 926:	38 f4       	brcc	.+14     	; 0x936 <__stack+0x37>
 928:	b6 01       	movw	r22, r12
 92a:	80 e3       	ldi	r24, 0x30	; 48
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 932:	9a 94       	dec	r9
 934:	f7 cf       	rjmp	.-18     	; 0x924 <__stack+0x25>
 936:	8a 94       	dec	r8
 938:	f3 01       	movw	r30, r6
 93a:	e8 0d       	add	r30, r8
 93c:	f1 1d       	adc	r31, r1
 93e:	80 81       	ld	r24, Z
 940:	b6 01       	movw	r22, r12
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 948:	81 10       	cpse	r8, r1
 94a:	f5 cf       	rjmp	.-22     	; 0x936 <__stack+0x37>
 94c:	22 20       	and	r2, r2
 94e:	09 f4       	brne	.+2      	; 0x952 <__stack+0x53>
 950:	42 ce       	rjmp	.-892    	; 0x5d6 <vfprintf+0x24>
 952:	b6 01       	movw	r22, r12
 954:	80 e2       	ldi	r24, 0x20	; 32
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <fputc>
 95c:	2a 94       	dec	r2
 95e:	f6 cf       	rjmp	.-20     	; 0x94c <__stack+0x4d>
 960:	f6 01       	movw	r30, r12
 962:	86 81       	ldd	r24, Z+6	; 0x06
 964:	97 81       	ldd	r25, Z+7	; 0x07
 966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x6d>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	9f ef       	ldi	r25, 0xFF	; 255
 96c:	2b 96       	adiw	r28, 0x0b	; 11
 96e:	e2 e1       	ldi	r30, 0x12	; 18
 970:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__epilogue_restores__>

00000974 <strnlen_P>:
 974:	fc 01       	movw	r30, r24
 976:	05 90       	lpm	r0, Z+
 978:	61 50       	subi	r22, 0x01	; 1
 97a:	70 40       	sbci	r23, 0x00	; 0
 97c:	01 10       	cpse	r0, r1
 97e:	d8 f7       	brcc	.-10     	; 0x976 <strnlen_P+0x2>
 980:	80 95       	com	r24
 982:	90 95       	com	r25
 984:	8e 0f       	add	r24, r30
 986:	9f 1f       	adc	r25, r31
 988:	08 95       	ret

0000098a <strnlen>:
 98a:	fc 01       	movw	r30, r24
 98c:	61 50       	subi	r22, 0x01	; 1
 98e:	70 40       	sbci	r23, 0x00	; 0
 990:	01 90       	ld	r0, Z+
 992:	01 10       	cpse	r0, r1
 994:	d8 f7       	brcc	.-10     	; 0x98c <strnlen+0x2>
 996:	80 95       	com	r24
 998:	90 95       	com	r25
 99a:	8e 0f       	add	r24, r30
 99c:	9f 1f       	adc	r25, r31
 99e:	08 95       	ret

000009a0 <fputc>:
 9a0:	0f 93       	push	r16
 9a2:	1f 93       	push	r17
 9a4:	cf 93       	push	r28
 9a6:	df 93       	push	r29
 9a8:	fb 01       	movw	r30, r22
 9aa:	23 81       	ldd	r18, Z+3	; 0x03
 9ac:	21 fd       	sbrc	r18, 1
 9ae:	03 c0       	rjmp	.+6      	; 0x9b6 <fputc+0x16>
 9b0:	8f ef       	ldi	r24, 0xFF	; 255
 9b2:	9f ef       	ldi	r25, 0xFF	; 255
 9b4:	2c c0       	rjmp	.+88     	; 0xa0e <fputc+0x6e>
 9b6:	22 ff       	sbrs	r18, 2
 9b8:	16 c0       	rjmp	.+44     	; 0x9e6 <fputc+0x46>
 9ba:	46 81       	ldd	r20, Z+6	; 0x06
 9bc:	57 81       	ldd	r21, Z+7	; 0x07
 9be:	24 81       	ldd	r18, Z+4	; 0x04
 9c0:	35 81       	ldd	r19, Z+5	; 0x05
 9c2:	42 17       	cp	r20, r18
 9c4:	53 07       	cpc	r21, r19
 9c6:	44 f4       	brge	.+16     	; 0x9d8 <fputc+0x38>
 9c8:	a0 81       	ld	r26, Z
 9ca:	b1 81       	ldd	r27, Z+1	; 0x01
 9cc:	9d 01       	movw	r18, r26
 9ce:	2f 5f       	subi	r18, 0xFF	; 255
 9d0:	3f 4f       	sbci	r19, 0xFF	; 255
 9d2:	31 83       	std	Z+1, r19	; 0x01
 9d4:	20 83       	st	Z, r18
 9d6:	8c 93       	st	X, r24
 9d8:	26 81       	ldd	r18, Z+6	; 0x06
 9da:	37 81       	ldd	r19, Z+7	; 0x07
 9dc:	2f 5f       	subi	r18, 0xFF	; 255
 9de:	3f 4f       	sbci	r19, 0xFF	; 255
 9e0:	37 83       	std	Z+7, r19	; 0x07
 9e2:	26 83       	std	Z+6, r18	; 0x06
 9e4:	14 c0       	rjmp	.+40     	; 0xa0e <fputc+0x6e>
 9e6:	8b 01       	movw	r16, r22
 9e8:	ec 01       	movw	r28, r24
 9ea:	fb 01       	movw	r30, r22
 9ec:	00 84       	ldd	r0, Z+8	; 0x08
 9ee:	f1 85       	ldd	r31, Z+9	; 0x09
 9f0:	e0 2d       	mov	r30, r0
 9f2:	09 95       	icall
 9f4:	89 2b       	or	r24, r25
 9f6:	e1 f6       	brne	.-72     	; 0x9b0 <fputc+0x10>
 9f8:	d8 01       	movw	r26, r16
 9fa:	16 96       	adiw	r26, 0x06	; 6
 9fc:	8d 91       	ld	r24, X+
 9fe:	9c 91       	ld	r25, X
 a00:	17 97       	sbiw	r26, 0x07	; 7
 a02:	01 96       	adiw	r24, 0x01	; 1
 a04:	17 96       	adiw	r26, 0x07	; 7
 a06:	9c 93       	st	X, r25
 a08:	8e 93       	st	-X, r24
 a0a:	16 97       	sbiw	r26, 0x06	; 6
 a0c:	ce 01       	movw	r24, r28
 a0e:	df 91       	pop	r29
 a10:	cf 91       	pop	r28
 a12:	1f 91       	pop	r17
 a14:	0f 91       	pop	r16
 a16:	08 95       	ret

00000a18 <__ultoa_invert>:
 a18:	fa 01       	movw	r30, r20
 a1a:	aa 27       	eor	r26, r26
 a1c:	28 30       	cpi	r18, 0x08	; 8
 a1e:	51 f1       	breq	.+84     	; 0xa74 <__ultoa_invert+0x5c>
 a20:	20 31       	cpi	r18, 0x10	; 16
 a22:	81 f1       	breq	.+96     	; 0xa84 <__ultoa_invert+0x6c>
 a24:	e8 94       	clt
 a26:	6f 93       	push	r22
 a28:	6e 7f       	andi	r22, 0xFE	; 254
 a2a:	6e 5f       	subi	r22, 0xFE	; 254
 a2c:	7f 4f       	sbci	r23, 0xFF	; 255
 a2e:	8f 4f       	sbci	r24, 0xFF	; 255
 a30:	9f 4f       	sbci	r25, 0xFF	; 255
 a32:	af 4f       	sbci	r26, 0xFF	; 255
 a34:	b1 e0       	ldi	r27, 0x01	; 1
 a36:	3e d0       	rcall	.+124    	; 0xab4 <__ultoa_invert+0x9c>
 a38:	b4 e0       	ldi	r27, 0x04	; 4
 a3a:	3c d0       	rcall	.+120    	; 0xab4 <__ultoa_invert+0x9c>
 a3c:	67 0f       	add	r22, r23
 a3e:	78 1f       	adc	r23, r24
 a40:	89 1f       	adc	r24, r25
 a42:	9a 1f       	adc	r25, r26
 a44:	a1 1d       	adc	r26, r1
 a46:	68 0f       	add	r22, r24
 a48:	79 1f       	adc	r23, r25
 a4a:	8a 1f       	adc	r24, r26
 a4c:	91 1d       	adc	r25, r1
 a4e:	a1 1d       	adc	r26, r1
 a50:	6a 0f       	add	r22, r26
 a52:	71 1d       	adc	r23, r1
 a54:	81 1d       	adc	r24, r1
 a56:	91 1d       	adc	r25, r1
 a58:	a1 1d       	adc	r26, r1
 a5a:	20 d0       	rcall	.+64     	; 0xa9c <__ultoa_invert+0x84>
 a5c:	09 f4       	brne	.+2      	; 0xa60 <__ultoa_invert+0x48>
 a5e:	68 94       	set
 a60:	3f 91       	pop	r19
 a62:	2a e0       	ldi	r18, 0x0A	; 10
 a64:	26 9f       	mul	r18, r22
 a66:	11 24       	eor	r1, r1
 a68:	30 19       	sub	r19, r0
 a6a:	30 5d       	subi	r19, 0xD0	; 208
 a6c:	31 93       	st	Z+, r19
 a6e:	de f6       	brtc	.-74     	; 0xa26 <__ultoa_invert+0xe>
 a70:	cf 01       	movw	r24, r30
 a72:	08 95       	ret
 a74:	46 2f       	mov	r20, r22
 a76:	47 70       	andi	r20, 0x07	; 7
 a78:	40 5d       	subi	r20, 0xD0	; 208
 a7a:	41 93       	st	Z+, r20
 a7c:	b3 e0       	ldi	r27, 0x03	; 3
 a7e:	0f d0       	rcall	.+30     	; 0xa9e <__ultoa_invert+0x86>
 a80:	c9 f7       	brne	.-14     	; 0xa74 <__ultoa_invert+0x5c>
 a82:	f6 cf       	rjmp	.-20     	; 0xa70 <__ultoa_invert+0x58>
 a84:	46 2f       	mov	r20, r22
 a86:	4f 70       	andi	r20, 0x0F	; 15
 a88:	40 5d       	subi	r20, 0xD0	; 208
 a8a:	4a 33       	cpi	r20, 0x3A	; 58
 a8c:	18 f0       	brcs	.+6      	; 0xa94 <__ultoa_invert+0x7c>
 a8e:	49 5d       	subi	r20, 0xD9	; 217
 a90:	31 fd       	sbrc	r19, 1
 a92:	40 52       	subi	r20, 0x20	; 32
 a94:	41 93       	st	Z+, r20
 a96:	02 d0       	rcall	.+4      	; 0xa9c <__ultoa_invert+0x84>
 a98:	a9 f7       	brne	.-22     	; 0xa84 <__ultoa_invert+0x6c>
 a9a:	ea cf       	rjmp	.-44     	; 0xa70 <__ultoa_invert+0x58>
 a9c:	b4 e0       	ldi	r27, 0x04	; 4
 a9e:	a6 95       	lsr	r26
 aa0:	97 95       	ror	r25
 aa2:	87 95       	ror	r24
 aa4:	77 95       	ror	r23
 aa6:	67 95       	ror	r22
 aa8:	ba 95       	dec	r27
 aaa:	c9 f7       	brne	.-14     	; 0xa9e <__ultoa_invert+0x86>
 aac:	00 97       	sbiw	r24, 0x00	; 0
 aae:	61 05       	cpc	r22, r1
 ab0:	71 05       	cpc	r23, r1
 ab2:	08 95       	ret
 ab4:	9b 01       	movw	r18, r22
 ab6:	ac 01       	movw	r20, r24
 ab8:	0a 2e       	mov	r0, r26
 aba:	06 94       	lsr	r0
 abc:	57 95       	ror	r21
 abe:	47 95       	ror	r20
 ac0:	37 95       	ror	r19
 ac2:	27 95       	ror	r18
 ac4:	ba 95       	dec	r27
 ac6:	c9 f7       	brne	.-14     	; 0xaba <__ultoa_invert+0xa2>
 ac8:	62 0f       	add	r22, r18
 aca:	73 1f       	adc	r23, r19
 acc:	84 1f       	adc	r24, r20
 ace:	95 1f       	adc	r25, r21
 ad0:	a0 1d       	adc	r26, r0
 ad2:	08 95       	ret

00000ad4 <eeprom_read_word>:
 ad4:	a8 e1       	ldi	r26, 0x18	; 24
 ad6:	b0 e0       	ldi	r27, 0x00	; 0
 ad8:	42 e0       	ldi	r20, 0x02	; 2
 ada:	50 e0       	ldi	r21, 0x00	; 0
 adc:	0c 94 77 05 	jmp	0xaee	; 0xaee <eeprom_read_blraw>

00000ae0 <eeprom_write_word>:
 ae0:	0e 94 85 05 	call	0xb0a	; 0xb0a <eeprom_write_byte>
 ae4:	27 2f       	mov	r18, r23
 ae6:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <eeprom_write_r18>

00000aea <eeprom_read_block>:
 aea:	dc 01       	movw	r26, r24
 aec:	cb 01       	movw	r24, r22

00000aee <eeprom_read_blraw>:
 aee:	fc 01       	movw	r30, r24
 af0:	f9 99       	sbic	0x1f, 1	; 31
 af2:	fe cf       	rjmp	.-4      	; 0xaf0 <eeprom_read_blraw+0x2>
 af4:	06 c0       	rjmp	.+12     	; 0xb02 <eeprom_read_blraw+0x14>
 af6:	f2 bd       	out	0x22, r31	; 34
 af8:	e1 bd       	out	0x21, r30	; 33
 afa:	f8 9a       	sbi	0x1f, 0	; 31
 afc:	31 96       	adiw	r30, 0x01	; 1
 afe:	00 b4       	in	r0, 0x20	; 32
 b00:	0d 92       	st	X+, r0
 b02:	41 50       	subi	r20, 0x01	; 1
 b04:	50 40       	sbci	r21, 0x00	; 0
 b06:	b8 f7       	brcc	.-18     	; 0xaf6 <eeprom_read_blraw+0x8>
 b08:	08 95       	ret

00000b0a <eeprom_write_byte>:
 b0a:	26 2f       	mov	r18, r22

00000b0c <eeprom_write_r18>:
 b0c:	f9 99       	sbic	0x1f, 1	; 31
 b0e:	fe cf       	rjmp	.-4      	; 0xb0c <eeprom_write_r18>
 b10:	1f ba       	out	0x1f, r1	; 31
 b12:	92 bd       	out	0x22, r25	; 34
 b14:	81 bd       	out	0x21, r24	; 33
 b16:	20 bd       	out	0x20, r18	; 32
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	f8 94       	cli
 b1c:	fa 9a       	sbi	0x1f, 2	; 31
 b1e:	f9 9a       	sbi	0x1f, 1	; 31
 b20:	0f be       	out	0x3f, r0	; 63
 b22:	01 96       	adiw	r24, 0x01	; 1
 b24:	08 95       	ret

00000b26 <__divmodsi4>:
 b26:	05 2e       	mov	r0, r21
 b28:	97 fb       	bst	r25, 7
 b2a:	1e f4       	brtc	.+6      	; 0xb32 <__divmodsi4+0xc>
 b2c:	00 94       	com	r0
 b2e:	0e 94 aa 05 	call	0xb54	; 0xb54 <__negsi2>
 b32:	57 fd       	sbrc	r21, 7
 b34:	07 d0       	rcall	.+14     	; 0xb44 <__divmodsi4_neg2>
 b36:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__udivmodsi4>
 b3a:	07 fc       	sbrc	r0, 7
 b3c:	03 d0       	rcall	.+6      	; 0xb44 <__divmodsi4_neg2>
 b3e:	4e f4       	brtc	.+18     	; 0xb52 <__divmodsi4_exit>
 b40:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__negsi2>

00000b44 <__divmodsi4_neg2>:
 b44:	50 95       	com	r21
 b46:	40 95       	com	r20
 b48:	30 95       	com	r19
 b4a:	21 95       	neg	r18
 b4c:	3f 4f       	sbci	r19, 0xFF	; 255
 b4e:	4f 4f       	sbci	r20, 0xFF	; 255
 b50:	5f 4f       	sbci	r21, 0xFF	; 255

00000b52 <__divmodsi4_exit>:
 b52:	08 95       	ret

00000b54 <__negsi2>:
 b54:	90 95       	com	r25
 b56:	80 95       	com	r24
 b58:	70 95       	com	r23
 b5a:	61 95       	neg	r22
 b5c:	7f 4f       	sbci	r23, 0xFF	; 255
 b5e:	8f 4f       	sbci	r24, 0xFF	; 255
 b60:	9f 4f       	sbci	r25, 0xFF	; 255
 b62:	08 95       	ret

00000b64 <__muluhisi3>:
 b64:	0e 94 1e 06 	call	0xc3c	; 0xc3c <__umulhisi3>
 b68:	a5 9f       	mul	r26, r21
 b6a:	90 0d       	add	r25, r0
 b6c:	b4 9f       	mul	r27, r20
 b6e:	90 0d       	add	r25, r0
 b70:	a4 9f       	mul	r26, r20
 b72:	80 0d       	add	r24, r0
 b74:	91 1d       	adc	r25, r1
 b76:	11 24       	eor	r1, r1
 b78:	08 95       	ret

00000b7a <__mulshisi3>:
 b7a:	b7 ff       	sbrs	r27, 7
 b7c:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__muluhisi3>

00000b80 <__mulohisi3>:
 b80:	0e 94 b2 05 	call	0xb64	; 0xb64 <__muluhisi3>
 b84:	82 1b       	sub	r24, r18
 b86:	93 0b       	sbc	r25, r19
 b88:	08 95       	ret

00000b8a <__prologue_saves__>:
 b8a:	2f 92       	push	r2
 b8c:	3f 92       	push	r3
 b8e:	4f 92       	push	r4
 b90:	5f 92       	push	r5
 b92:	6f 92       	push	r6
 b94:	7f 92       	push	r7
 b96:	8f 92       	push	r8
 b98:	9f 92       	push	r9
 b9a:	af 92       	push	r10
 b9c:	bf 92       	push	r11
 b9e:	cf 92       	push	r12
 ba0:	df 92       	push	r13
 ba2:	ef 92       	push	r14
 ba4:	ff 92       	push	r15
 ba6:	0f 93       	push	r16
 ba8:	1f 93       	push	r17
 baa:	cf 93       	push	r28
 bac:	df 93       	push	r29
 bae:	cd b7       	in	r28, 0x3d	; 61
 bb0:	de b7       	in	r29, 0x3e	; 62
 bb2:	ca 1b       	sub	r28, r26
 bb4:	db 0b       	sbc	r29, r27
 bb6:	0f b6       	in	r0, 0x3f	; 63
 bb8:	f8 94       	cli
 bba:	de bf       	out	0x3e, r29	; 62
 bbc:	0f be       	out	0x3f, r0	; 63
 bbe:	cd bf       	out	0x3d, r28	; 61
 bc0:	09 94       	ijmp

00000bc2 <__epilogue_restores__>:
 bc2:	2a 88       	ldd	r2, Y+18	; 0x12
 bc4:	39 88       	ldd	r3, Y+17	; 0x11
 bc6:	48 88       	ldd	r4, Y+16	; 0x10
 bc8:	5f 84       	ldd	r5, Y+15	; 0x0f
 bca:	6e 84       	ldd	r6, Y+14	; 0x0e
 bcc:	7d 84       	ldd	r7, Y+13	; 0x0d
 bce:	8c 84       	ldd	r8, Y+12	; 0x0c
 bd0:	9b 84       	ldd	r9, Y+11	; 0x0b
 bd2:	aa 84       	ldd	r10, Y+10	; 0x0a
 bd4:	b9 84       	ldd	r11, Y+9	; 0x09
 bd6:	c8 84       	ldd	r12, Y+8	; 0x08
 bd8:	df 80       	ldd	r13, Y+7	; 0x07
 bda:	ee 80       	ldd	r14, Y+6	; 0x06
 bdc:	fd 80       	ldd	r15, Y+5	; 0x05
 bde:	0c 81       	ldd	r16, Y+4	; 0x04
 be0:	1b 81       	ldd	r17, Y+3	; 0x03
 be2:	aa 81       	ldd	r26, Y+2	; 0x02
 be4:	b9 81       	ldd	r27, Y+1	; 0x01
 be6:	ce 0f       	add	r28, r30
 be8:	d1 1d       	adc	r29, r1
 bea:	0f b6       	in	r0, 0x3f	; 63
 bec:	f8 94       	cli
 bee:	de bf       	out	0x3e, r29	; 62
 bf0:	0f be       	out	0x3f, r0	; 63
 bf2:	cd bf       	out	0x3d, r28	; 61
 bf4:	ed 01       	movw	r28, r26
 bf6:	08 95       	ret

00000bf8 <__udivmodsi4>:
 bf8:	a1 e2       	ldi	r26, 0x21	; 33
 bfa:	1a 2e       	mov	r1, r26
 bfc:	aa 1b       	sub	r26, r26
 bfe:	bb 1b       	sub	r27, r27
 c00:	fd 01       	movw	r30, r26
 c02:	0d c0       	rjmp	.+26     	; 0xc1e <__udivmodsi4_ep>

00000c04 <__udivmodsi4_loop>:
 c04:	aa 1f       	adc	r26, r26
 c06:	bb 1f       	adc	r27, r27
 c08:	ee 1f       	adc	r30, r30
 c0a:	ff 1f       	adc	r31, r31
 c0c:	a2 17       	cp	r26, r18
 c0e:	b3 07       	cpc	r27, r19
 c10:	e4 07       	cpc	r30, r20
 c12:	f5 07       	cpc	r31, r21
 c14:	20 f0       	brcs	.+8      	; 0xc1e <__udivmodsi4_ep>
 c16:	a2 1b       	sub	r26, r18
 c18:	b3 0b       	sbc	r27, r19
 c1a:	e4 0b       	sbc	r30, r20
 c1c:	f5 0b       	sbc	r31, r21

00000c1e <__udivmodsi4_ep>:
 c1e:	66 1f       	adc	r22, r22
 c20:	77 1f       	adc	r23, r23
 c22:	88 1f       	adc	r24, r24
 c24:	99 1f       	adc	r25, r25
 c26:	1a 94       	dec	r1
 c28:	69 f7       	brne	.-38     	; 0xc04 <__udivmodsi4_loop>
 c2a:	60 95       	com	r22
 c2c:	70 95       	com	r23
 c2e:	80 95       	com	r24
 c30:	90 95       	com	r25
 c32:	9b 01       	movw	r18, r22
 c34:	ac 01       	movw	r20, r24
 c36:	bd 01       	movw	r22, r26
 c38:	cf 01       	movw	r24, r30
 c3a:	08 95       	ret

00000c3c <__umulhisi3>:
 c3c:	a2 9f       	mul	r26, r18
 c3e:	b0 01       	movw	r22, r0
 c40:	b3 9f       	mul	r27, r19
 c42:	c0 01       	movw	r24, r0
 c44:	a3 9f       	mul	r26, r19
 c46:	70 0d       	add	r23, r0
 c48:	81 1d       	adc	r24, r1
 c4a:	11 24       	eor	r1, r1
 c4c:	91 1d       	adc	r25, r1
 c4e:	b2 9f       	mul	r27, r18
 c50:	70 0d       	add	r23, r0
 c52:	81 1d       	adc	r24, r1
 c54:	11 24       	eor	r1, r1
 c56:	91 1d       	adc	r25, r1
 c58:	08 95       	ret

00000c5a <_exit>:
 c5a:	f8 94       	cli

00000c5c <__stop_program>:
 c5c:	ff cf       	rjmp	.-2      	; 0xc5c <__stop_program>
