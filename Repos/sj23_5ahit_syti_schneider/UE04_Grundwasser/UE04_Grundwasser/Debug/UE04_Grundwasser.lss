
UE04_Grundwasser.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000d82  00000e16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010c  0080010c  00000e22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001145  00000000  00000000  00000fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a79  00000000  00000000  000020e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009db  00000000  00000000  00002b5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001dc  00000000  00000000  0000353c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000543  00000000  00000000  00003718  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000836  00000000  00000000  00003c5b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004491  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e8       	ldi	r30, 0x82	; 130
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 30       	cpi	r26, 0x0E	; 14
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <main>
  9e:	0c 94 bf 06 	jmp	0xd7e	; 0xd7e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <acd_init>:

// Variablen, die nur in dieser Datei gebraucht werden, mit static deklarieren
static volatile uint16_t adc = 0;

void acd_init(){
	ADMUX |= (1<<MUX0) | (1<<MUX2);
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	85 60       	ori	r24, 0x05	; 5
  ae:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);
  b0:	80 81       	ld	r24, Z
  b2:	80 64       	ori	r24, 0x40	; 64
  b4:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADEN) | (1<<ADIE) | (1<<ADATE);
  b6:	ea e7       	ldi	r30, 0x7A	; 122
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	88 6a       	ori	r24, 0xA8	; 168
  be:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
  c0:	80 81       	ld	r24, Z
  c2:	87 60       	ori	r24, 0x07	; 7
  c4:	80 83       	st	Z, r24
	
	sei();
  c6:	78 94       	sei
  c8:	08 95       	ret

000000ca <adc_start_conversion>:
}

void adc_start_conversion(){
	ADCSRA |= (1<<ADSC);
  ca:	ea e7       	ldi	r30, 0x7A	; 122
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 83       	st	Z, r24
  d4:	08 95       	ret

000000d6 <adc_get_water_level>:
}

float adc_get_water_level(){
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
  da:	f8 94       	cli
	float water_level;
	ATOMIC_BLOCK(ATOMIC_FORCEON) {
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	22 c0       	rjmp	.+68     	; 0x124 <adc_get_water_level+0x4e>
		
		float voltage = adc * 5 / 1024;
  e0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  e4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
  e8:	9c 01       	movw	r18, r24
  ea:	22 0f       	add	r18, r18
  ec:	33 1f       	adc	r19, r19
  ee:	22 0f       	add	r18, r18
  f0:	33 1f       	adc	r19, r19
  f2:	82 0f       	add	r24, r18
  f4:	93 1f       	adc	r25, r19
  f6:	c9 2f       	mov	r28, r25
  f8:	c6 95       	lsr	r28
  fa:	c6 95       	lsr	r28
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	d8 2f       	mov	r29, r24
 100:	be 01       	movw	r22, r28
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 b1 02 	call	0x562	; 0x562 <__floatunsisf>
		water_level = voltage * 0.5 + 2.5;
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	5f e3       	ldi	r21, 0x3F	; 63
 112:	0e 94 44 03 	call	0x688	; 0x688 <__mulsf3>
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	40 e2       	ldi	r20, 0x20	; 32
 11c:	50 e4       	ldi	r21, 0x40	; 64
 11e:	0e 94 45 02 	call	0x48a	; 0x48a <__addsf3>
	ADCSRA |= (1<<ADSC);
}

float adc_get_water_level(){
	float water_level;
	ATOMIC_BLOCK(ATOMIC_FORCEON) {
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	21 11       	cpse	r18, r1
 126:	dc cf       	rjmp	.-72     	; 0xe0 <adc_get_water_level+0xa>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 128:	78 94       	sei
		float voltage = adc * 5 / 1024;
		water_level = voltage * 0.5 + 2.5;
	}

	return water_level;
}
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <__vector_21>:

ISR(ADC_vect) {
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
	adc = ADCW;
 13e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 142:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 146:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 14a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 15c:	88 b1       	in	r24, 0x08	; 8
 15e:	84 60       	ori	r24, 0x04	; 4
 160:	88 b9       	out	0x08, r24	; 8
 162:	00 00       	nop
 164:	88 b1       	in	r24, 0x08	; 8
 166:	8b 7f       	andi	r24, 0xFB	; 251
 168:	88 b9       	out	0x08, r24	; 8
 16a:	08 95       	ret

0000016c <lcd_write>:
 16c:	cf 93       	push	r28
 16e:	c8 2f       	mov	r28, r24
 170:	66 23       	and	r22, r22
 172:	21 f0       	breq	.+8      	; 0x17c <lcd_write+0x10>
 174:	88 b1       	in	r24, 0x08	; 8
 176:	81 60       	ori	r24, 0x01	; 1
 178:	88 b9       	out	0x08, r24	; 8
 17a:	03 c0       	rjmp	.+6      	; 0x182 <lcd_write+0x16>
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	8e 7f       	andi	r24, 0xFE	; 254
 180:	88 b9       	out	0x08, r24	; 8
 182:	88 b1       	in	r24, 0x08	; 8
 184:	8d 7f       	andi	r24, 0xFD	; 253
 186:	88 b9       	out	0x08, r24	; 8
 188:	8a b1       	in	r24, 0x0a	; 10
 18a:	80 61       	ori	r24, 0x10	; 16
 18c:	8a b9       	out	0x0a, r24	; 10
 18e:	8a b1       	in	r24, 0x0a	; 10
 190:	80 62       	ori	r24, 0x20	; 32
 192:	8a b9       	out	0x0a, r24	; 10
 194:	8a b1       	in	r24, 0x0a	; 10
 196:	80 64       	ori	r24, 0x40	; 64
 198:	8a b9       	out	0x0a, r24	; 10
 19a:	8a b1       	in	r24, 0x0a	; 10
 19c:	80 68       	ori	r24, 0x80	; 128
 19e:	8a b9       	out	0x0a, r24	; 10
 1a0:	8b b1       	in	r24, 0x0b	; 11
 1a2:	8f 77       	andi	r24, 0x7F	; 127
 1a4:	8b b9       	out	0x0b, r24	; 11
 1a6:	8b b1       	in	r24, 0x0b	; 11
 1a8:	8f 7b       	andi	r24, 0xBF	; 191
 1aa:	8b b9       	out	0x0b, r24	; 11
 1ac:	8b b1       	in	r24, 0x0b	; 11
 1ae:	8f 7d       	andi	r24, 0xDF	; 223
 1b0:	8b b9       	out	0x0b, r24	; 11
 1b2:	8b b1       	in	r24, 0x0b	; 11
 1b4:	8f 7e       	andi	r24, 0xEF	; 239
 1b6:	8b b9       	out	0x0b, r24	; 11
 1b8:	cc 23       	and	r28, r28
 1ba:	1c f4       	brge	.+6      	; 0x1c2 <lcd_write+0x56>
 1bc:	8b b1       	in	r24, 0x0b	; 11
 1be:	80 68       	ori	r24, 0x80	; 128
 1c0:	8b b9       	out	0x0b, r24	; 11
 1c2:	c6 ff       	sbrs	r28, 6
 1c4:	03 c0       	rjmp	.+6      	; 0x1cc <lcd_write+0x60>
 1c6:	8b b1       	in	r24, 0x0b	; 11
 1c8:	80 64       	ori	r24, 0x40	; 64
 1ca:	8b b9       	out	0x0b, r24	; 11
 1cc:	c5 ff       	sbrs	r28, 5
 1ce:	03 c0       	rjmp	.+6      	; 0x1d6 <lcd_write+0x6a>
 1d0:	8b b1       	in	r24, 0x0b	; 11
 1d2:	80 62       	ori	r24, 0x20	; 32
 1d4:	8b b9       	out	0x0b, r24	; 11
 1d6:	c4 ff       	sbrs	r28, 4
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <lcd_write+0x74>
 1da:	8b b1       	in	r24, 0x0b	; 11
 1dc:	80 61       	ori	r24, 0x10	; 16
 1de:	8b b9       	out	0x0b, r24	; 11
 1e0:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 1e4:	8b b1       	in	r24, 0x0b	; 11
 1e6:	8f 77       	andi	r24, 0x7F	; 127
 1e8:	8b b9       	out	0x0b, r24	; 11
 1ea:	8b b1       	in	r24, 0x0b	; 11
 1ec:	8f 7b       	andi	r24, 0xBF	; 191
 1ee:	8b b9       	out	0x0b, r24	; 11
 1f0:	8b b1       	in	r24, 0x0b	; 11
 1f2:	8f 7d       	andi	r24, 0xDF	; 223
 1f4:	8b b9       	out	0x0b, r24	; 11
 1f6:	8b b1       	in	r24, 0x0b	; 11
 1f8:	8f 7e       	andi	r24, 0xEF	; 239
 1fa:	8b b9       	out	0x0b, r24	; 11
 1fc:	c3 ff       	sbrs	r28, 3
 1fe:	03 c0       	rjmp	.+6      	; 0x206 <lcd_write+0x9a>
 200:	8b b1       	in	r24, 0x0b	; 11
 202:	80 68       	ori	r24, 0x80	; 128
 204:	8b b9       	out	0x0b, r24	; 11
 206:	c2 ff       	sbrs	r28, 2
 208:	03 c0       	rjmp	.+6      	; 0x210 <lcd_write+0xa4>
 20a:	8b b1       	in	r24, 0x0b	; 11
 20c:	80 64       	ori	r24, 0x40	; 64
 20e:	8b b9       	out	0x0b, r24	; 11
 210:	c1 ff       	sbrs	r28, 1
 212:	03 c0       	rjmp	.+6      	; 0x21a <lcd_write+0xae>
 214:	8b b1       	in	r24, 0x0b	; 11
 216:	80 62       	ori	r24, 0x20	; 32
 218:	8b b9       	out	0x0b, r24	; 11
 21a:	c0 ff       	sbrs	r28, 0
 21c:	03 c0       	rjmp	.+6      	; 0x224 <lcd_write+0xb8>
 21e:	8b b1       	in	r24, 0x0b	; 11
 220:	80 61       	ori	r24, 0x10	; 16
 222:	8b b9       	out	0x0b, r24	; 11
 224:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 228:	8b b1       	in	r24, 0x0b	; 11
 22a:	80 61       	ori	r24, 0x10	; 16
 22c:	8b b9       	out	0x0b, r24	; 11
 22e:	8b b1       	in	r24, 0x0b	; 11
 230:	80 62       	ori	r24, 0x20	; 32
 232:	8b b9       	out	0x0b, r24	; 11
 234:	8b b1       	in	r24, 0x0b	; 11
 236:	80 64       	ori	r24, 0x40	; 64
 238:	8b b9       	out	0x0b, r24	; 11
 23a:	8b b1       	in	r24, 0x0b	; 11
 23c:	80 68       	ori	r24, 0x80	; 128
 23e:	8b b9       	out	0x0b, r24	; 11
 240:	cf 91       	pop	r28
 242:	08 95       	ret

00000244 <lcd_read>:
 244:	88 23       	and	r24, r24
 246:	21 f0       	breq	.+8      	; 0x250 <lcd_read+0xc>
 248:	88 b1       	in	r24, 0x08	; 8
 24a:	81 60       	ori	r24, 0x01	; 1
 24c:	88 b9       	out	0x08, r24	; 8
 24e:	03 c0       	rjmp	.+6      	; 0x256 <lcd_read+0x12>
 250:	88 b1       	in	r24, 0x08	; 8
 252:	8e 7f       	andi	r24, 0xFE	; 254
 254:	88 b9       	out	0x08, r24	; 8
 256:	88 b1       	in	r24, 0x08	; 8
 258:	82 60       	ori	r24, 0x02	; 2
 25a:	88 b9       	out	0x08, r24	; 8
 25c:	8a b1       	in	r24, 0x0a	; 10
 25e:	8f 7e       	andi	r24, 0xEF	; 239
 260:	8a b9       	out	0x0a, r24	; 10
 262:	8a b1       	in	r24, 0x0a	; 10
 264:	8f 7d       	andi	r24, 0xDF	; 223
 266:	8a b9       	out	0x0a, r24	; 10
 268:	8a b1       	in	r24, 0x0a	; 10
 26a:	8f 7b       	andi	r24, 0xBF	; 191
 26c:	8a b9       	out	0x0a, r24	; 10
 26e:	8a b1       	in	r24, 0x0a	; 10
 270:	8f 77       	andi	r24, 0x7F	; 127
 272:	8a b9       	out	0x0a, r24	; 10
 274:	88 b1       	in	r24, 0x08	; 8
 276:	84 60       	ori	r24, 0x04	; 4
 278:	88 b9       	out	0x08, r24	; 8
 27a:	00 00       	nop
 27c:	4c 99       	sbic	0x09, 4	; 9
 27e:	02 c0       	rjmp	.+4      	; 0x284 <lcd_read+0x40>
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	01 c0       	rjmp	.+2      	; 0x286 <lcd_read+0x42>
 284:	80 e1       	ldi	r24, 0x10	; 16
 286:	4d 99       	sbic	0x09, 5	; 9
 288:	80 62       	ori	r24, 0x20	; 32
 28a:	4e 99       	sbic	0x09, 6	; 9
 28c:	80 64       	ori	r24, 0x40	; 64
 28e:	4f 99       	sbic	0x09, 7	; 9
 290:	80 68       	ori	r24, 0x80	; 128
 292:	98 b1       	in	r25, 0x08	; 8
 294:	9b 7f       	andi	r25, 0xFB	; 251
 296:	98 b9       	out	0x08, r25	; 8
 298:	00 00       	nop
 29a:	98 b1       	in	r25, 0x08	; 8
 29c:	94 60       	ori	r25, 0x04	; 4
 29e:	98 b9       	out	0x08, r25	; 8
 2a0:	00 00       	nop
 2a2:	4c 99       	sbic	0x09, 4	; 9
 2a4:	81 60       	ori	r24, 0x01	; 1
 2a6:	4d 99       	sbic	0x09, 5	; 9
 2a8:	82 60       	ori	r24, 0x02	; 2
 2aa:	4e 99       	sbic	0x09, 6	; 9
 2ac:	84 60       	ori	r24, 0x04	; 4
 2ae:	4f 99       	sbic	0x09, 7	; 9
 2b0:	88 60       	ori	r24, 0x08	; 8
 2b2:	98 b1       	in	r25, 0x08	; 8
 2b4:	9b 7f       	andi	r25, 0xFB	; 251
 2b6:	98 b9       	out	0x08, r25	; 8
 2b8:	08 95       	ret

000002ba <lcd_waitbusy>:
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0e 94 22 01 	call	0x244	; 0x244 <lcd_read>
 2c0:	88 23       	and	r24, r24
 2c2:	dc f3       	brlt	.-10     	; 0x2ba <lcd_waitbusy>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <lcd_waitbusy+0xc>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <lcd_waitbusy+0xe>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	0e 94 22 01 	call	0x244	; 0x244 <lcd_read>
 2ce:	08 95       	ret

000002d0 <lcd_command>:
 2d0:	cf 93       	push	r28
 2d2:	c8 2f       	mov	r28, r24
 2d4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_waitbusy>
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	8c 2f       	mov	r24, r28
 2dc:	0e 94 b6 00 	call	0x16c	; 0x16c <lcd_write>
 2e0:	cf 91       	pop	r28
 2e2:	08 95       	ret

000002e4 <lcd_clrscr>:
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>
 2ea:	08 95       	ret

000002ec <lcd_putc>:
 2ec:	cf 93       	push	r28
 2ee:	c8 2f       	mov	r28, r24
 2f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_waitbusy>
 2f4:	ca 30       	cpi	r28, 0x0A	; 10
 2f6:	49 f4       	brne	.+18     	; 0x30a <lcd_putc+0x1e>
 2f8:	80 34       	cpi	r24, 0x40	; 64
 2fa:	10 f4       	brcc	.+4      	; 0x300 <lcd_putc+0x14>
 2fc:	80 e4       	ldi	r24, 0x40	; 64
 2fe:	01 c0       	rjmp	.+2      	; 0x302 <lcd_putc+0x16>
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	80 58       	subi	r24, 0x80	; 128
 304:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>
 308:	04 c0       	rjmp	.+8      	; 0x312 <lcd_putc+0x26>
 30a:	61 e0       	ldi	r22, 0x01	; 1
 30c:	8c 2f       	mov	r24, r28
 30e:	0e 94 b6 00 	call	0x16c	; 0x16c <lcd_write>
 312:	cf 91       	pop	r28
 314:	08 95       	ret

00000316 <lcd_puts>:
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	fc 01       	movw	r30, r24
 31c:	03 c0       	rjmp	.+6      	; 0x324 <lcd_puts+0xe>
 31e:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_putc>
 322:	fe 01       	movw	r30, r28
 324:	ef 01       	movw	r28, r30
 326:	21 96       	adiw	r28, 0x01	; 1
 328:	80 81       	ld	r24, Z
 32a:	81 11       	cpse	r24, r1
 32c:	f8 cf       	rjmp	.-16     	; 0x31e <lcd_puts+0x8>
 32e:	df 91       	pop	r29
 330:	cf 91       	pop	r28
 332:	08 95       	ret

00000334 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 334:	cf 93       	push	r28
 336:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 338:	87 b1       	in	r24, 0x07	; 7
 33a:	81 60       	ori	r24, 0x01	; 1
 33c:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 33e:	87 b1       	in	r24, 0x07	; 7
 340:	82 60       	ori	r24, 0x02	; 2
 342:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 344:	87 b1       	in	r24, 0x07	; 7
 346:	84 60       	ori	r24, 0x04	; 4
 348:	87 b9       	out	0x07, r24	; 7
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 34a:	8a b1       	in	r24, 0x0a	; 10
 34c:	80 61       	ori	r24, 0x10	; 16
 34e:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 350:	8a b1       	in	r24, 0x0a	; 10
 352:	80 62       	ori	r24, 0x20	; 32
 354:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 356:	8a b1       	in	r24, 0x0a	; 10
 358:	80 64       	ori	r24, 0x40	; 64
 35a:	8a b9       	out	0x0a, r24	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 35c:	8a b1       	in	r24, 0x0a	; 10
 35e:	80 68       	ori	r24, 0x80	; 128
 360:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 362:	8f e9       	ldi	r24, 0x9F	; 159
 364:	9f e0       	ldi	r25, 0x0F	; 15
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <lcd_init+0x32>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <lcd_init+0x38>
 36c:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 36e:	8b b1       	in	r24, 0x0b	; 11
 370:	80 62       	ori	r24, 0x20	; 32
 372:	8b b9       	out	0x0b, r24	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 374:	8b b1       	in	r24, 0x0b	; 11
 376:	80 61       	ori	r24, 0x10	; 16
 378:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 37a:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 37e:	81 ee       	ldi	r24, 0xE1	; 225
 380:	94 e0       	ldi	r25, 0x04	; 4
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <lcd_init+0x4e>
 386:	00 c0       	rjmp	.+0      	; 0x388 <lcd_init+0x54>
 388:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 38a:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 38e:	95 e1       	ldi	r25, 0x15	; 21
 390:	9a 95       	dec	r25
 392:	f1 f7       	brne	.-4      	; 0x390 <lcd_init+0x5c>
 394:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 396:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 39a:	85 e1       	ldi	r24, 0x15	; 21
 39c:	8a 95       	dec	r24
 39e:	f1 f7       	brne	.-4      	; 0x39c <lcd_init+0x68>
 3a0:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 3a2:	8b b1       	in	r24, 0x0b	; 11
 3a4:	8f 7e       	andi	r24, 0xEF	; 239
 3a6:	8b b9       	out	0x0b, r24	; 11
    lcd_e_toggle();
 3a8:	0e 94 ae 00 	call	0x15c	; 0x15c <toggle_e>
 3ac:	95 e1       	ldi	r25, 0x15	; 21
 3ae:	9a 95       	dec	r25
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <lcd_init+0x7a>
 3b2:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 3b4:	88 e2       	ldi	r24, 0x28	; 40
 3b6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 3ba:	88 e0       	ldi	r24, 0x08	; 8
 3bc:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 3c0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 3c4:	86 e0       	ldi	r24, 0x06	; 6
 3c6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 3ca:	8c 2f       	mov	r24, r28
 3cc:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_command>

}/* lcd_init */
 3d0:	cf 91       	pop	r28
 3d2:	08 95       	ret

000003d4 <main>:
#include "dbmanage.h"
#include "lcd.h"
#include "adc.h"

int main(void)
{
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	cd b7       	in	r28, 0x3d	; 61
 3da:	de b7       	in	r29, 0x3e	; 62
 3dc:	64 97       	sbiw	r28, 0x14	; 20
 3de:	0f b6       	in	r0, 0x3f	; 63
 3e0:	f8 94       	cli
 3e2:	de bf       	out	0x3e, r29	; 62
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	cd bf       	out	0x3d, r28	; 61
	float currentWaterLevel = 0;
	char txtbuffer[20];
	
	lcd_init(LCD_DISP_ON);
 3e8:	8c e0       	ldi	r24, 0x0C	; 12
 3ea:	0e 94 9a 01 	call	0x334	; 0x334 <lcd_init>

	acd_init();
 3ee:	0e 94 53 00 	call	0xa6	; 0xa6 <acd_init>
	adc_start_conversion();
 3f2:	0e 94 65 00 	call	0xca	; 0xca <adc_start_conversion>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3f6:	2f ef       	ldi	r18, 0xFF	; 255
 3f8:	83 ed       	ldi	r24, 0xD3	; 211
 3fa:	90 e3       	ldi	r25, 0x30	; 48
 3fc:	21 50       	subi	r18, 0x01	; 1
 3fe:	80 40       	sbci	r24, 0x00	; 0
 400:	90 40       	sbci	r25, 0x00	; 0
 402:	e1 f7       	brne	.-8      	; 0x3fc <main+0x28>
 404:	00 c0       	rjmp	.+0      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 406:	00 00       	nop
	while (1)
	{
		_delay_ms(1000); // Statt Timer verwenden wir die Delay, weil es in diesem Fall egal ist!

		// Your Code
		currentWaterLevel = adc_get_water_level();
 408:	0e 94 6b 00 	call	0xd6	; 0xd6 <adc_get_water_level>
 40c:	16 2f       	mov	r17, r22
 40e:	07 2f       	mov	r16, r23
 410:	f8 2e       	mov	r15, r24
 412:	e9 2e       	mov	r14, r25
		
		sprintf(txtbuffer, "%.2f", currentWaterLevel);
 414:	9f 93       	push	r25
 416:	8f 93       	push	r24
 418:	7f 93       	push	r23
 41a:	6f 93       	push	r22
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	91 e0       	ldi	r25, 0x01	; 1
 420:	9f 93       	push	r25
 422:	8f 93       	push	r24
 424:	ce 01       	movw	r24, r28
 426:	01 96       	adiw	r24, 0x01	; 1
 428:	6c 01       	movw	r12, r24
 42a:	9f 93       	push	r25
 42c:	8f 93       	push	r24
 42e:	0e 94 d5 03 	call	0x7aa	; 0x7aa <sprintf>
		lcd_clrscr();
 432:	0e 94 72 01 	call	0x2e4	; 0x2e4 <lcd_clrscr>
		lcd_puts(txtbuffer);
 436:	c6 01       	movw	r24, r12
 438:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_puts>
		
		if (currentWaterLevel > WATERLEVEL_ALARM_HEIGHT)
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	f8 94       	cli
 440:	de bf       	out	0x3e, r29	; 62
 442:	0f be       	out	0x3f, r0	; 63
 444:	cd bf       	out	0x3d, r28	; 61
 446:	20 e0       	ldi	r18, 0x00	; 0
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	40 e6       	ldi	r20, 0x60	; 96
 44c:	50 e4       	ldi	r21, 0x40	; 64
 44e:	61 2f       	mov	r22, r17
 450:	70 2f       	mov	r23, r16
 452:	8f 2d       	mov	r24, r15
 454:	9e 2d       	mov	r25, r14
 456:	0e 94 3f 03 	call	0x67e	; 0x67e <__gesf2>
 45a:	18 16       	cp	r1, r24
 45c:	64 f6       	brge	.-104    	; 0x3f6 <main+0x22>
		{
			sprintf(txtbuffer, "\nALARM", currentWaterLevel);
 45e:	ef 92       	push	r14
 460:	ff 92       	push	r15
 462:	0f 93       	push	r16
 464:	1f 93       	push	r17
 466:	85 e0       	ldi	r24, 0x05	; 5
 468:	91 e0       	ldi	r25, 0x01	; 1
 46a:	9f 93       	push	r25
 46c:	8f 93       	push	r24
 46e:	df 92       	push	r13
 470:	cf 92       	push	r12
 472:	0e 94 d5 03 	call	0x7aa	; 0x7aa <sprintf>
			lcd_puts(txtbuffer);			
 476:	c6 01       	movw	r24, r12
 478:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_puts>
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	b7 cf       	rjmp	.-146    	; 0x3f6 <main+0x22>

00000488 <__subsf3>:
 488:	50 58       	subi	r21, 0x80	; 128

0000048a <__addsf3>:
 48a:	bb 27       	eor	r27, r27
 48c:	aa 27       	eor	r26, r26
 48e:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__addsf3x>
 492:	0c 94 05 03 	jmp	0x60a	; 0x60a <__fp_round>
 496:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_pscA>
 49a:	38 f0       	brcs	.+14     	; 0x4aa <__addsf3+0x20>
 49c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscB>
 4a0:	20 f0       	brcs	.+8      	; 0x4aa <__addsf3+0x20>
 4a2:	39 f4       	brne	.+14     	; 0x4b2 <__addsf3+0x28>
 4a4:	9f 3f       	cpi	r25, 0xFF	; 255
 4a6:	19 f4       	brne	.+6      	; 0x4ae <__addsf3+0x24>
 4a8:	26 f4       	brtc	.+8      	; 0x4b2 <__addsf3+0x28>
 4aa:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <__fp_nan>
 4ae:	0e f4       	brtc	.+2      	; 0x4b2 <__addsf3+0x28>
 4b0:	e0 95       	com	r30
 4b2:	e7 fb       	bst	r30, 7
 4b4:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_inf>

000004b8 <__addsf3x>:
 4b8:	e9 2f       	mov	r30, r25
 4ba:	0e 94 16 03 	call	0x62c	; 0x62c <__fp_split3>
 4be:	58 f3       	brcs	.-42     	; 0x496 <__addsf3+0xc>
 4c0:	ba 17       	cp	r27, r26
 4c2:	62 07       	cpc	r22, r18
 4c4:	73 07       	cpc	r23, r19
 4c6:	84 07       	cpc	r24, r20
 4c8:	95 07       	cpc	r25, r21
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__addsf3x+0x1c>
 4cc:	79 f4       	brne	.+30     	; 0x4ec <__addsf3x+0x34>
 4ce:	a6 f5       	brtc	.+104    	; 0x538 <__addsf3x+0x80>
 4d0:	0c 94 38 03 	jmp	0x670	; 0x670 <__fp_zero>
 4d4:	0e f4       	brtc	.+2      	; 0x4d8 <__addsf3x+0x20>
 4d6:	e0 95       	com	r30
 4d8:	0b 2e       	mov	r0, r27
 4da:	ba 2f       	mov	r27, r26
 4dc:	a0 2d       	mov	r26, r0
 4de:	0b 01       	movw	r0, r22
 4e0:	b9 01       	movw	r22, r18
 4e2:	90 01       	movw	r18, r0
 4e4:	0c 01       	movw	r0, r24
 4e6:	ca 01       	movw	r24, r20
 4e8:	a0 01       	movw	r20, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	ff 27       	eor	r31, r31
 4ee:	59 1b       	sub	r21, r25
 4f0:	99 f0       	breq	.+38     	; 0x518 <__addsf3x+0x60>
 4f2:	59 3f       	cpi	r21, 0xF9	; 249
 4f4:	50 f4       	brcc	.+20     	; 0x50a <__addsf3x+0x52>
 4f6:	50 3e       	cpi	r21, 0xE0	; 224
 4f8:	68 f1       	brcs	.+90     	; 0x554 <__addsf3x+0x9c>
 4fa:	1a 16       	cp	r1, r26
 4fc:	f0 40       	sbci	r31, 0x00	; 0
 4fe:	a2 2f       	mov	r26, r18
 500:	23 2f       	mov	r18, r19
 502:	34 2f       	mov	r19, r20
 504:	44 27       	eor	r20, r20
 506:	58 5f       	subi	r21, 0xF8	; 248
 508:	f3 cf       	rjmp	.-26     	; 0x4f0 <__addsf3x+0x38>
 50a:	46 95       	lsr	r20
 50c:	37 95       	ror	r19
 50e:	27 95       	ror	r18
 510:	a7 95       	ror	r26
 512:	f0 40       	sbci	r31, 0x00	; 0
 514:	53 95       	inc	r21
 516:	c9 f7       	brne	.-14     	; 0x50a <__addsf3x+0x52>
 518:	7e f4       	brtc	.+30     	; 0x538 <__addsf3x+0x80>
 51a:	1f 16       	cp	r1, r31
 51c:	ba 0b       	sbc	r27, r26
 51e:	62 0b       	sbc	r22, r18
 520:	73 0b       	sbc	r23, r19
 522:	84 0b       	sbc	r24, r20
 524:	ba f0       	brmi	.+46     	; 0x554 <__addsf3x+0x9c>
 526:	91 50       	subi	r25, 0x01	; 1
 528:	a1 f0       	breq	.+40     	; 0x552 <__addsf3x+0x9a>
 52a:	ff 0f       	add	r31, r31
 52c:	bb 1f       	adc	r27, r27
 52e:	66 1f       	adc	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	c2 f7       	brpl	.-16     	; 0x526 <__addsf3x+0x6e>
 536:	0e c0       	rjmp	.+28     	; 0x554 <__addsf3x+0x9c>
 538:	ba 0f       	add	r27, r26
 53a:	62 1f       	adc	r22, r18
 53c:	73 1f       	adc	r23, r19
 53e:	84 1f       	adc	r24, r20
 540:	48 f4       	brcc	.+18     	; 0x554 <__addsf3x+0x9c>
 542:	87 95       	ror	r24
 544:	77 95       	ror	r23
 546:	67 95       	ror	r22
 548:	b7 95       	ror	r27
 54a:	f7 95       	ror	r31
 54c:	9e 3f       	cpi	r25, 0xFE	; 254
 54e:	08 f0       	brcs	.+2      	; 0x552 <__addsf3x+0x9a>
 550:	b0 cf       	rjmp	.-160    	; 0x4b2 <__addsf3+0x28>
 552:	93 95       	inc	r25
 554:	88 0f       	add	r24, r24
 556:	08 f0       	brcs	.+2      	; 0x55a <__addsf3x+0xa2>
 558:	99 27       	eor	r25, r25
 55a:	ee 0f       	add	r30, r30
 55c:	97 95       	ror	r25
 55e:	87 95       	ror	r24
 560:	08 95       	ret

00000562 <__floatunsisf>:
 562:	e8 94       	clt
 564:	09 c0       	rjmp	.+18     	; 0x578 <__floatsisf+0x12>

00000566 <__floatsisf>:
 566:	97 fb       	bst	r25, 7
 568:	3e f4       	brtc	.+14     	; 0x578 <__floatsisf+0x12>
 56a:	90 95       	com	r25
 56c:	80 95       	com	r24
 56e:	70 95       	com	r23
 570:	61 95       	neg	r22
 572:	7f 4f       	sbci	r23, 0xFF	; 255
 574:	8f 4f       	sbci	r24, 0xFF	; 255
 576:	9f 4f       	sbci	r25, 0xFF	; 255
 578:	99 23       	and	r25, r25
 57a:	a9 f0       	breq	.+42     	; 0x5a6 <__floatsisf+0x40>
 57c:	f9 2f       	mov	r31, r25
 57e:	96 e9       	ldi	r25, 0x96	; 150
 580:	bb 27       	eor	r27, r27
 582:	93 95       	inc	r25
 584:	f6 95       	lsr	r31
 586:	87 95       	ror	r24
 588:	77 95       	ror	r23
 58a:	67 95       	ror	r22
 58c:	b7 95       	ror	r27
 58e:	f1 11       	cpse	r31, r1
 590:	f8 cf       	rjmp	.-16     	; 0x582 <__floatsisf+0x1c>
 592:	fa f4       	brpl	.+62     	; 0x5d2 <__floatsisf+0x6c>
 594:	bb 0f       	add	r27, r27
 596:	11 f4       	brne	.+4      	; 0x59c <__floatsisf+0x36>
 598:	60 ff       	sbrs	r22, 0
 59a:	1b c0       	rjmp	.+54     	; 0x5d2 <__floatsisf+0x6c>
 59c:	6f 5f       	subi	r22, 0xFF	; 255
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	8f 4f       	sbci	r24, 0xFF	; 255
 5a2:	9f 4f       	sbci	r25, 0xFF	; 255
 5a4:	16 c0       	rjmp	.+44     	; 0x5d2 <__floatsisf+0x6c>
 5a6:	88 23       	and	r24, r24
 5a8:	11 f0       	breq	.+4      	; 0x5ae <__floatsisf+0x48>
 5aa:	96 e9       	ldi	r25, 0x96	; 150
 5ac:	11 c0       	rjmp	.+34     	; 0x5d0 <__floatsisf+0x6a>
 5ae:	77 23       	and	r23, r23
 5b0:	21 f0       	breq	.+8      	; 0x5ba <__floatsisf+0x54>
 5b2:	9e e8       	ldi	r25, 0x8E	; 142
 5b4:	87 2f       	mov	r24, r23
 5b6:	76 2f       	mov	r23, r22
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__floatsisf+0x5e>
 5ba:	66 23       	and	r22, r22
 5bc:	71 f0       	breq	.+28     	; 0x5da <__floatsisf+0x74>
 5be:	96 e8       	ldi	r25, 0x86	; 134
 5c0:	86 2f       	mov	r24, r22
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	60 e0       	ldi	r22, 0x00	; 0
 5c6:	2a f0       	brmi	.+10     	; 0x5d2 <__floatsisf+0x6c>
 5c8:	9a 95       	dec	r25
 5ca:	66 0f       	add	r22, r22
 5cc:	77 1f       	adc	r23, r23
 5ce:	88 1f       	adc	r24, r24
 5d0:	da f7       	brpl	.-10     	; 0x5c8 <__floatsisf+0x62>
 5d2:	88 0f       	add	r24, r24
 5d4:	96 95       	lsr	r25
 5d6:	87 95       	ror	r24
 5d8:	97 f9       	bld	r25, 7
 5da:	08 95       	ret

000005dc <__fp_inf>:
 5dc:	97 f9       	bld	r25, 7
 5de:	9f 67       	ori	r25, 0x7F	; 127
 5e0:	80 e8       	ldi	r24, 0x80	; 128
 5e2:	70 e0       	ldi	r23, 0x00	; 0
 5e4:	60 e0       	ldi	r22, 0x00	; 0
 5e6:	08 95       	ret

000005e8 <__fp_nan>:
 5e8:	9f ef       	ldi	r25, 0xFF	; 255
 5ea:	80 ec       	ldi	r24, 0xC0	; 192
 5ec:	08 95       	ret

000005ee <__fp_pscA>:
 5ee:	00 24       	eor	r0, r0
 5f0:	0a 94       	dec	r0
 5f2:	16 16       	cp	r1, r22
 5f4:	17 06       	cpc	r1, r23
 5f6:	18 06       	cpc	r1, r24
 5f8:	09 06       	cpc	r0, r25
 5fa:	08 95       	ret

000005fc <__fp_pscB>:
 5fc:	00 24       	eor	r0, r0
 5fe:	0a 94       	dec	r0
 600:	12 16       	cp	r1, r18
 602:	13 06       	cpc	r1, r19
 604:	14 06       	cpc	r1, r20
 606:	05 06       	cpc	r0, r21
 608:	08 95       	ret

0000060a <__fp_round>:
 60a:	09 2e       	mov	r0, r25
 60c:	03 94       	inc	r0
 60e:	00 0c       	add	r0, r0
 610:	11 f4       	brne	.+4      	; 0x616 <__fp_round+0xc>
 612:	88 23       	and	r24, r24
 614:	52 f0       	brmi	.+20     	; 0x62a <__fp_round+0x20>
 616:	bb 0f       	add	r27, r27
 618:	40 f4       	brcc	.+16     	; 0x62a <__fp_round+0x20>
 61a:	bf 2b       	or	r27, r31
 61c:	11 f4       	brne	.+4      	; 0x622 <__fp_round+0x18>
 61e:	60 ff       	sbrs	r22, 0
 620:	04 c0       	rjmp	.+8      	; 0x62a <__fp_round+0x20>
 622:	6f 5f       	subi	r22, 0xFF	; 255
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	8f 4f       	sbci	r24, 0xFF	; 255
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	08 95       	ret

0000062c <__fp_split3>:
 62c:	57 fd       	sbrc	r21, 7
 62e:	90 58       	subi	r25, 0x80	; 128
 630:	44 0f       	add	r20, r20
 632:	55 1f       	adc	r21, r21
 634:	59 f0       	breq	.+22     	; 0x64c <__fp_splitA+0x10>
 636:	5f 3f       	cpi	r21, 0xFF	; 255
 638:	71 f0       	breq	.+28     	; 0x656 <__fp_splitA+0x1a>
 63a:	47 95       	ror	r20

0000063c <__fp_splitA>:
 63c:	88 0f       	add	r24, r24
 63e:	97 fb       	bst	r25, 7
 640:	99 1f       	adc	r25, r25
 642:	61 f0       	breq	.+24     	; 0x65c <__fp_splitA+0x20>
 644:	9f 3f       	cpi	r25, 0xFF	; 255
 646:	79 f0       	breq	.+30     	; 0x666 <__fp_splitA+0x2a>
 648:	87 95       	ror	r24
 64a:	08 95       	ret
 64c:	12 16       	cp	r1, r18
 64e:	13 06       	cpc	r1, r19
 650:	14 06       	cpc	r1, r20
 652:	55 1f       	adc	r21, r21
 654:	f2 cf       	rjmp	.-28     	; 0x63a <__fp_split3+0xe>
 656:	46 95       	lsr	r20
 658:	f1 df       	rcall	.-30     	; 0x63c <__fp_splitA>
 65a:	08 c0       	rjmp	.+16     	; 0x66c <__fp_splitA+0x30>
 65c:	16 16       	cp	r1, r22
 65e:	17 06       	cpc	r1, r23
 660:	18 06       	cpc	r1, r24
 662:	99 1f       	adc	r25, r25
 664:	f1 cf       	rjmp	.-30     	; 0x648 <__fp_splitA+0xc>
 666:	86 95       	lsr	r24
 668:	71 05       	cpc	r23, r1
 66a:	61 05       	cpc	r22, r1
 66c:	08 94       	sec
 66e:	08 95       	ret

00000670 <__fp_zero>:
 670:	e8 94       	clt

00000672 <__fp_szero>:
 672:	bb 27       	eor	r27, r27
 674:	66 27       	eor	r22, r22
 676:	77 27       	eor	r23, r23
 678:	cb 01       	movw	r24, r22
 67a:	97 f9       	bld	r25, 7
 67c:	08 95       	ret

0000067e <__gesf2>:
 67e:	0e 94 b1 03 	call	0x762	; 0x762 <__fp_cmp>
 682:	08 f4       	brcc	.+2      	; 0x686 <__gesf2+0x8>
 684:	8f ef       	ldi	r24, 0xFF	; 255
 686:	08 95       	ret

00000688 <__mulsf3>:
 688:	0e 94 57 03 	call	0x6ae	; 0x6ae <__mulsf3x>
 68c:	0c 94 05 03 	jmp	0x60a	; 0x60a <__fp_round>
 690:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_pscA>
 694:	38 f0       	brcs	.+14     	; 0x6a4 <__mulsf3+0x1c>
 696:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscB>
 69a:	20 f0       	brcs	.+8      	; 0x6a4 <__mulsf3+0x1c>
 69c:	95 23       	and	r25, r21
 69e:	11 f0       	breq	.+4      	; 0x6a4 <__mulsf3+0x1c>
 6a0:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_inf>
 6a4:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <__fp_nan>
 6a8:	11 24       	eor	r1, r1
 6aa:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_szero>

000006ae <__mulsf3x>:
 6ae:	0e 94 16 03 	call	0x62c	; 0x62c <__fp_split3>
 6b2:	70 f3       	brcs	.-36     	; 0x690 <__mulsf3+0x8>

000006b4 <__mulsf3_pse>:
 6b4:	95 9f       	mul	r25, r21
 6b6:	c1 f3       	breq	.-16     	; 0x6a8 <__mulsf3+0x20>
 6b8:	95 0f       	add	r25, r21
 6ba:	50 e0       	ldi	r21, 0x00	; 0
 6bc:	55 1f       	adc	r21, r21
 6be:	62 9f       	mul	r22, r18
 6c0:	f0 01       	movw	r30, r0
 6c2:	72 9f       	mul	r23, r18
 6c4:	bb 27       	eor	r27, r27
 6c6:	f0 0d       	add	r31, r0
 6c8:	b1 1d       	adc	r27, r1
 6ca:	63 9f       	mul	r22, r19
 6cc:	aa 27       	eor	r26, r26
 6ce:	f0 0d       	add	r31, r0
 6d0:	b1 1d       	adc	r27, r1
 6d2:	aa 1f       	adc	r26, r26
 6d4:	64 9f       	mul	r22, r20
 6d6:	66 27       	eor	r22, r22
 6d8:	b0 0d       	add	r27, r0
 6da:	a1 1d       	adc	r26, r1
 6dc:	66 1f       	adc	r22, r22
 6de:	82 9f       	mul	r24, r18
 6e0:	22 27       	eor	r18, r18
 6e2:	b0 0d       	add	r27, r0
 6e4:	a1 1d       	adc	r26, r1
 6e6:	62 1f       	adc	r22, r18
 6e8:	73 9f       	mul	r23, r19
 6ea:	b0 0d       	add	r27, r0
 6ec:	a1 1d       	adc	r26, r1
 6ee:	62 1f       	adc	r22, r18
 6f0:	83 9f       	mul	r24, r19
 6f2:	a0 0d       	add	r26, r0
 6f4:	61 1d       	adc	r22, r1
 6f6:	22 1f       	adc	r18, r18
 6f8:	74 9f       	mul	r23, r20
 6fa:	33 27       	eor	r19, r19
 6fc:	a0 0d       	add	r26, r0
 6fe:	61 1d       	adc	r22, r1
 700:	23 1f       	adc	r18, r19
 702:	84 9f       	mul	r24, r20
 704:	60 0d       	add	r22, r0
 706:	21 1d       	adc	r18, r1
 708:	82 2f       	mov	r24, r18
 70a:	76 2f       	mov	r23, r22
 70c:	6a 2f       	mov	r22, r26
 70e:	11 24       	eor	r1, r1
 710:	9f 57       	subi	r25, 0x7F	; 127
 712:	50 40       	sbci	r21, 0x00	; 0
 714:	9a f0       	brmi	.+38     	; 0x73c <__mulsf3_pse+0x88>
 716:	f1 f0       	breq	.+60     	; 0x754 <__mulsf3_pse+0xa0>
 718:	88 23       	and	r24, r24
 71a:	4a f0       	brmi	.+18     	; 0x72e <__mulsf3_pse+0x7a>
 71c:	ee 0f       	add	r30, r30
 71e:	ff 1f       	adc	r31, r31
 720:	bb 1f       	adc	r27, r27
 722:	66 1f       	adc	r22, r22
 724:	77 1f       	adc	r23, r23
 726:	88 1f       	adc	r24, r24
 728:	91 50       	subi	r25, 0x01	; 1
 72a:	50 40       	sbci	r21, 0x00	; 0
 72c:	a9 f7       	brne	.-22     	; 0x718 <__mulsf3_pse+0x64>
 72e:	9e 3f       	cpi	r25, 0xFE	; 254
 730:	51 05       	cpc	r21, r1
 732:	80 f0       	brcs	.+32     	; 0x754 <__mulsf3_pse+0xa0>
 734:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_inf>
 738:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_szero>
 73c:	5f 3f       	cpi	r21, 0xFF	; 255
 73e:	e4 f3       	brlt	.-8      	; 0x738 <__mulsf3_pse+0x84>
 740:	98 3e       	cpi	r25, 0xE8	; 232
 742:	d4 f3       	brlt	.-12     	; 0x738 <__mulsf3_pse+0x84>
 744:	86 95       	lsr	r24
 746:	77 95       	ror	r23
 748:	67 95       	ror	r22
 74a:	b7 95       	ror	r27
 74c:	f7 95       	ror	r31
 74e:	e7 95       	ror	r30
 750:	9f 5f       	subi	r25, 0xFF	; 255
 752:	c1 f7       	brne	.-16     	; 0x744 <__mulsf3_pse+0x90>
 754:	fe 2b       	or	r31, r30
 756:	88 0f       	add	r24, r24
 758:	91 1d       	adc	r25, r1
 75a:	96 95       	lsr	r25
 75c:	87 95       	ror	r24
 75e:	97 f9       	bld	r25, 7
 760:	08 95       	ret

00000762 <__fp_cmp>:
 762:	99 0f       	add	r25, r25
 764:	00 08       	sbc	r0, r0
 766:	55 0f       	add	r21, r21
 768:	aa 0b       	sbc	r26, r26
 76a:	e0 e8       	ldi	r30, 0x80	; 128
 76c:	fe ef       	ldi	r31, 0xFE	; 254
 76e:	16 16       	cp	r1, r22
 770:	17 06       	cpc	r1, r23
 772:	e8 07       	cpc	r30, r24
 774:	f9 07       	cpc	r31, r25
 776:	c0 f0       	brcs	.+48     	; 0x7a8 <__fp_cmp+0x46>
 778:	12 16       	cp	r1, r18
 77a:	13 06       	cpc	r1, r19
 77c:	e4 07       	cpc	r30, r20
 77e:	f5 07       	cpc	r31, r21
 780:	98 f0       	brcs	.+38     	; 0x7a8 <__fp_cmp+0x46>
 782:	62 1b       	sub	r22, r18
 784:	73 0b       	sbc	r23, r19
 786:	84 0b       	sbc	r24, r20
 788:	95 0b       	sbc	r25, r21
 78a:	39 f4       	brne	.+14     	; 0x79a <__fp_cmp+0x38>
 78c:	0a 26       	eor	r0, r26
 78e:	61 f0       	breq	.+24     	; 0x7a8 <__fp_cmp+0x46>
 790:	23 2b       	or	r18, r19
 792:	24 2b       	or	r18, r20
 794:	25 2b       	or	r18, r21
 796:	21 f4       	brne	.+8      	; 0x7a0 <__fp_cmp+0x3e>
 798:	08 95       	ret
 79a:	0a 26       	eor	r0, r26
 79c:	09 f4       	brne	.+2      	; 0x7a0 <__fp_cmp+0x3e>
 79e:	a1 40       	sbci	r26, 0x01	; 1
 7a0:	a6 95       	lsr	r26
 7a2:	8f ef       	ldi	r24, 0xFF	; 255
 7a4:	81 1d       	adc	r24, r1
 7a6:	81 1d       	adc	r24, r1
 7a8:	08 95       	ret

000007aa <sprintf>:
 7aa:	ae e0       	ldi	r26, 0x0E	; 14
 7ac:	b0 e0       	ldi	r27, 0x00	; 0
 7ae:	eb ed       	ldi	r30, 0xDB	; 219
 7b0:	f3 e0       	ldi	r31, 0x03	; 3
 7b2:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__prologue_saves__+0x1c>
 7b6:	0d 89       	ldd	r16, Y+21	; 0x15
 7b8:	1e 89       	ldd	r17, Y+22	; 0x16
 7ba:	86 e0       	ldi	r24, 0x06	; 6
 7bc:	8c 83       	std	Y+4, r24	; 0x04
 7be:	1a 83       	std	Y+2, r17	; 0x02
 7c0:	09 83       	std	Y+1, r16	; 0x01
 7c2:	8f ef       	ldi	r24, 0xFF	; 255
 7c4:	9f e7       	ldi	r25, 0x7F	; 127
 7c6:	9e 83       	std	Y+6, r25	; 0x06
 7c8:	8d 83       	std	Y+5, r24	; 0x05
 7ca:	ae 01       	movw	r20, r28
 7cc:	47 5e       	subi	r20, 0xE7	; 231
 7ce:	5f 4f       	sbci	r21, 0xFF	; 255
 7d0:	6f 89       	ldd	r22, Y+23	; 0x17
 7d2:	78 8d       	ldd	r23, Y+24	; 0x18
 7d4:	ce 01       	movw	r24, r28
 7d6:	01 96       	adiw	r24, 0x01	; 1
 7d8:	0e 94 f7 03 	call	0x7ee	; 0x7ee <vfprintf>
 7dc:	ef 81       	ldd	r30, Y+7	; 0x07
 7de:	f8 85       	ldd	r31, Y+8	; 0x08
 7e0:	e0 0f       	add	r30, r16
 7e2:	f1 1f       	adc	r31, r17
 7e4:	10 82       	st	Z, r1
 7e6:	2e 96       	adiw	r28, 0x0e	; 14
 7e8:	e4 e0       	ldi	r30, 0x04	; 4
 7ea:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <__epilogue_restores__+0x1c>

000007ee <vfprintf>:
 7ee:	ab e0       	ldi	r26, 0x0B	; 11
 7f0:	b0 e0       	ldi	r27, 0x00	; 0
 7f2:	ed ef       	ldi	r30, 0xFD	; 253
 7f4:	f3 e0       	ldi	r31, 0x03	; 3
 7f6:	0c 94 88 06 	jmp	0xd10	; 0xd10 <__prologue_saves__>
 7fa:	6c 01       	movw	r12, r24
 7fc:	7b 01       	movw	r14, r22
 7fe:	8a 01       	movw	r16, r20
 800:	fc 01       	movw	r30, r24
 802:	17 82       	std	Z+7, r1	; 0x07
 804:	16 82       	std	Z+6, r1	; 0x06
 806:	83 81       	ldd	r24, Z+3	; 0x03
 808:	81 ff       	sbrs	r24, 1
 80a:	cc c1       	rjmp	.+920    	; 0xba4 <__stack+0x2a5>
 80c:	ce 01       	movw	r24, r28
 80e:	01 96       	adiw	r24, 0x01	; 1
 810:	3c 01       	movw	r6, r24
 812:	f6 01       	movw	r30, r12
 814:	93 81       	ldd	r25, Z+3	; 0x03
 816:	f7 01       	movw	r30, r14
 818:	93 fd       	sbrc	r25, 3
 81a:	85 91       	lpm	r24, Z+
 81c:	93 ff       	sbrs	r25, 3
 81e:	81 91       	ld	r24, Z+
 820:	7f 01       	movw	r14, r30
 822:	88 23       	and	r24, r24
 824:	09 f4       	brne	.+2      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 826:	ba c1       	rjmp	.+884    	; 0xb9c <__stack+0x29d>
 828:	85 32       	cpi	r24, 0x25	; 37
 82a:	39 f4       	brne	.+14     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 82c:	93 fd       	sbrc	r25, 3
 82e:	85 91       	lpm	r24, Z+
 830:	93 ff       	sbrs	r25, 3
 832:	81 91       	ld	r24, Z+
 834:	7f 01       	movw	r14, r30
 836:	85 32       	cpi	r24, 0x25	; 37
 838:	29 f4       	brne	.+10     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 83a:	b6 01       	movw	r22, r12
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 842:	e7 cf       	rjmp	.-50     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 844:	91 2c       	mov	r9, r1
 846:	21 2c       	mov	r2, r1
 848:	31 2c       	mov	r3, r1
 84a:	ff e1       	ldi	r31, 0x1F	; 31
 84c:	f3 15       	cp	r31, r3
 84e:	d8 f0       	brcs	.+54     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 850:	8b 32       	cpi	r24, 0x2B	; 43
 852:	79 f0       	breq	.+30     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 854:	38 f4       	brcc	.+14     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 856:	80 32       	cpi	r24, 0x20	; 32
 858:	79 f0       	breq	.+30     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 85a:	83 32       	cpi	r24, 0x23	; 35
 85c:	a1 f4       	brne	.+40     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 85e:	23 2d       	mov	r18, r3
 860:	20 61       	ori	r18, 0x10	; 16
 862:	1d c0       	rjmp	.+58     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 864:	8d 32       	cpi	r24, 0x2D	; 45
 866:	61 f0       	breq	.+24     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 868:	80 33       	cpi	r24, 0x30	; 48
 86a:	69 f4       	brne	.+26     	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 86c:	23 2d       	mov	r18, r3
 86e:	21 60       	ori	r18, 0x01	; 1
 870:	16 c0       	rjmp	.+44     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 872:	83 2d       	mov	r24, r3
 874:	82 60       	ori	r24, 0x02	; 2
 876:	38 2e       	mov	r3, r24
 878:	e3 2d       	mov	r30, r3
 87a:	e4 60       	ori	r30, 0x04	; 4
 87c:	3e 2e       	mov	r3, r30
 87e:	2a c0       	rjmp	.+84     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 880:	f3 2d       	mov	r31, r3
 882:	f8 60       	ori	r31, 0x08	; 8
 884:	1d c0       	rjmp	.+58     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 886:	37 fc       	sbrc	r3, 7
 888:	2d c0       	rjmp	.+90     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 88a:	20 ed       	ldi	r18, 0xD0	; 208
 88c:	28 0f       	add	r18, r24
 88e:	2a 30       	cpi	r18, 0x0A	; 10
 890:	40 f0       	brcs	.+16     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 892:	8e 32       	cpi	r24, 0x2E	; 46
 894:	b9 f4       	brne	.+46     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 896:	36 fc       	sbrc	r3, 6
 898:	81 c1       	rjmp	.+770    	; 0xb9c <__stack+0x29d>
 89a:	23 2d       	mov	r18, r3
 89c:	20 64       	ori	r18, 0x40	; 64
 89e:	32 2e       	mov	r3, r18
 8a0:	19 c0       	rjmp	.+50     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8a2:	36 fe       	sbrs	r3, 6
 8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8a6:	8a e0       	ldi	r24, 0x0A	; 10
 8a8:	98 9e       	mul	r9, r24
 8aa:	20 0d       	add	r18, r0
 8ac:	11 24       	eor	r1, r1
 8ae:	92 2e       	mov	r9, r18
 8b0:	11 c0       	rjmp	.+34     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8b2:	ea e0       	ldi	r30, 0x0A	; 10
 8b4:	2e 9e       	mul	r2, r30
 8b6:	20 0d       	add	r18, r0
 8b8:	11 24       	eor	r1, r1
 8ba:	22 2e       	mov	r2, r18
 8bc:	f3 2d       	mov	r31, r3
 8be:	f0 62       	ori	r31, 0x20	; 32
 8c0:	3f 2e       	mov	r3, r31
 8c2:	08 c0       	rjmp	.+16     	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8c4:	8c 36       	cpi	r24, 0x6C	; 108
 8c6:	21 f4       	brne	.+8      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8c8:	83 2d       	mov	r24, r3
 8ca:	80 68       	ori	r24, 0x80	; 128
 8cc:	38 2e       	mov	r3, r24
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8d0:	88 36       	cpi	r24, 0x68	; 104
 8d2:	41 f4       	brne	.+16     	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8d4:	f7 01       	movw	r30, r14
 8d6:	93 fd       	sbrc	r25, 3
 8d8:	85 91       	lpm	r24, Z+
 8da:	93 ff       	sbrs	r25, 3
 8dc:	81 91       	ld	r24, Z+
 8de:	7f 01       	movw	r14, r30
 8e0:	81 11       	cpse	r24, r1
 8e2:	b3 cf       	rjmp	.-154    	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 8e4:	98 2f       	mov	r25, r24
 8e6:	9f 7d       	andi	r25, 0xDF	; 223
 8e8:	95 54       	subi	r25, 0x45	; 69
 8ea:	93 30       	cpi	r25, 0x03	; 3
 8ec:	28 f4       	brcc	.+10     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8ee:	0c 5f       	subi	r16, 0xFC	; 252
 8f0:	1f 4f       	sbci	r17, 0xFF	; 255
 8f2:	9f e3       	ldi	r25, 0x3F	; 63
 8f4:	99 83       	std	Y+1, r25	; 0x01
 8f6:	0d c0       	rjmp	.+26     	; 0x912 <__stack+0x13>
 8f8:	83 36       	cpi	r24, 0x63	; 99
 8fa:	31 f0       	breq	.+12     	; 0x908 <__stack+0x9>
 8fc:	83 37       	cpi	r24, 0x73	; 115
 8fe:	71 f0       	breq	.+28     	; 0x91c <__stack+0x1d>
 900:	83 35       	cpi	r24, 0x53	; 83
 902:	09 f0       	breq	.+2      	; 0x906 <__stack+0x7>
 904:	59 c0       	rjmp	.+178    	; 0x9b8 <__stack+0xb9>
 906:	21 c0       	rjmp	.+66     	; 0x94a <__stack+0x4b>
 908:	f8 01       	movw	r30, r16
 90a:	80 81       	ld	r24, Z
 90c:	89 83       	std	Y+1, r24	; 0x01
 90e:	0e 5f       	subi	r16, 0xFE	; 254
 910:	1f 4f       	sbci	r17, 0xFF	; 255
 912:	88 24       	eor	r8, r8
 914:	83 94       	inc	r8
 916:	91 2c       	mov	r9, r1
 918:	53 01       	movw	r10, r6
 91a:	13 c0       	rjmp	.+38     	; 0x942 <__stack+0x43>
 91c:	28 01       	movw	r4, r16
 91e:	f2 e0       	ldi	r31, 0x02	; 2
 920:	4f 0e       	add	r4, r31
 922:	51 1c       	adc	r5, r1
 924:	f8 01       	movw	r30, r16
 926:	a0 80       	ld	r10, Z
 928:	b1 80       	ldd	r11, Z+1	; 0x01
 92a:	36 fe       	sbrs	r3, 6
 92c:	03 c0       	rjmp	.+6      	; 0x934 <__stack+0x35>
 92e:	69 2d       	mov	r22, r9
 930:	70 e0       	ldi	r23, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <__stack+0x39>
 934:	6f ef       	ldi	r22, 0xFF	; 255
 936:	7f ef       	ldi	r23, 0xFF	; 255
 938:	c5 01       	movw	r24, r10
 93a:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <strnlen>
 93e:	4c 01       	movw	r8, r24
 940:	82 01       	movw	r16, r4
 942:	f3 2d       	mov	r31, r3
 944:	ff 77       	andi	r31, 0x7F	; 127
 946:	3f 2e       	mov	r3, r31
 948:	16 c0       	rjmp	.+44     	; 0x976 <__stack+0x77>
 94a:	28 01       	movw	r4, r16
 94c:	22 e0       	ldi	r18, 0x02	; 2
 94e:	42 0e       	add	r4, r18
 950:	51 1c       	adc	r5, r1
 952:	f8 01       	movw	r30, r16
 954:	a0 80       	ld	r10, Z
 956:	b1 80       	ldd	r11, Z+1	; 0x01
 958:	36 fe       	sbrs	r3, 6
 95a:	03 c0       	rjmp	.+6      	; 0x962 <__stack+0x63>
 95c:	69 2d       	mov	r22, r9
 95e:	70 e0       	ldi	r23, 0x00	; 0
 960:	02 c0       	rjmp	.+4      	; 0x966 <__stack+0x67>
 962:	6f ef       	ldi	r22, 0xFF	; 255
 964:	7f ef       	ldi	r23, 0xFF	; 255
 966:	c5 01       	movw	r24, r10
 968:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <strnlen_P>
 96c:	4c 01       	movw	r8, r24
 96e:	f3 2d       	mov	r31, r3
 970:	f0 68       	ori	r31, 0x80	; 128
 972:	3f 2e       	mov	r3, r31
 974:	82 01       	movw	r16, r4
 976:	33 fc       	sbrc	r3, 3
 978:	1b c0       	rjmp	.+54     	; 0x9b0 <__stack+0xb1>
 97a:	82 2d       	mov	r24, r2
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	88 16       	cp	r8, r24
 980:	99 06       	cpc	r9, r25
 982:	b0 f4       	brcc	.+44     	; 0x9b0 <__stack+0xb1>
 984:	b6 01       	movw	r22, r12
 986:	80 e2       	ldi	r24, 0x20	; 32
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 98e:	2a 94       	dec	r2
 990:	f4 cf       	rjmp	.-24     	; 0x97a <__stack+0x7b>
 992:	f5 01       	movw	r30, r10
 994:	37 fc       	sbrc	r3, 7
 996:	85 91       	lpm	r24, Z+
 998:	37 fe       	sbrs	r3, 7
 99a:	81 91       	ld	r24, Z+
 99c:	5f 01       	movw	r10, r30
 99e:	b6 01       	movw	r22, r12
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 9a6:	21 10       	cpse	r2, r1
 9a8:	2a 94       	dec	r2
 9aa:	21 e0       	ldi	r18, 0x01	; 1
 9ac:	82 1a       	sub	r8, r18
 9ae:	91 08       	sbc	r9, r1
 9b0:	81 14       	cp	r8, r1
 9b2:	91 04       	cpc	r9, r1
 9b4:	71 f7       	brne	.-36     	; 0x992 <__stack+0x93>
 9b6:	e8 c0       	rjmp	.+464    	; 0xb88 <__stack+0x289>
 9b8:	84 36       	cpi	r24, 0x64	; 100
 9ba:	11 f0       	breq	.+4      	; 0x9c0 <__stack+0xc1>
 9bc:	89 36       	cpi	r24, 0x69	; 105
 9be:	41 f5       	brne	.+80     	; 0xa10 <__stack+0x111>
 9c0:	f8 01       	movw	r30, r16
 9c2:	37 fe       	sbrs	r3, 7
 9c4:	07 c0       	rjmp	.+14     	; 0x9d4 <__stack+0xd5>
 9c6:	60 81       	ld	r22, Z
 9c8:	71 81       	ldd	r23, Z+1	; 0x01
 9ca:	82 81       	ldd	r24, Z+2	; 0x02
 9cc:	93 81       	ldd	r25, Z+3	; 0x03
 9ce:	0c 5f       	subi	r16, 0xFC	; 252
 9d0:	1f 4f       	sbci	r17, 0xFF	; 255
 9d2:	08 c0       	rjmp	.+16     	; 0x9e4 <__stack+0xe5>
 9d4:	60 81       	ld	r22, Z
 9d6:	71 81       	ldd	r23, Z+1	; 0x01
 9d8:	07 2e       	mov	r0, r23
 9da:	00 0c       	add	r0, r0
 9dc:	88 0b       	sbc	r24, r24
 9de:	99 0b       	sbc	r25, r25
 9e0:	0e 5f       	subi	r16, 0xFE	; 254
 9e2:	1f 4f       	sbci	r17, 0xFF	; 255
 9e4:	f3 2d       	mov	r31, r3
 9e6:	ff 76       	andi	r31, 0x6F	; 111
 9e8:	3f 2e       	mov	r3, r31
 9ea:	97 ff       	sbrs	r25, 7
 9ec:	09 c0       	rjmp	.+18     	; 0xa00 <__stack+0x101>
 9ee:	90 95       	com	r25
 9f0:	80 95       	com	r24
 9f2:	70 95       	com	r23
 9f4:	61 95       	neg	r22
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255
 9f8:	8f 4f       	sbci	r24, 0xFF	; 255
 9fa:	9f 4f       	sbci	r25, 0xFF	; 255
 9fc:	f0 68       	ori	r31, 0x80	; 128
 9fe:	3f 2e       	mov	r3, r31
 a00:	2a e0       	ldi	r18, 0x0A	; 10
 a02:	30 e0       	ldi	r19, 0x00	; 0
 a04:	a3 01       	movw	r20, r6
 a06:	0e 94 2a 06 	call	0xc54	; 0xc54 <__ultoa_invert>
 a0a:	88 2e       	mov	r8, r24
 a0c:	86 18       	sub	r8, r6
 a0e:	45 c0       	rjmp	.+138    	; 0xa9a <__stack+0x19b>
 a10:	85 37       	cpi	r24, 0x75	; 117
 a12:	31 f4       	brne	.+12     	; 0xa20 <__stack+0x121>
 a14:	23 2d       	mov	r18, r3
 a16:	2f 7e       	andi	r18, 0xEF	; 239
 a18:	b2 2e       	mov	r11, r18
 a1a:	2a e0       	ldi	r18, 0x0A	; 10
 a1c:	30 e0       	ldi	r19, 0x00	; 0
 a1e:	25 c0       	rjmp	.+74     	; 0xa6a <__stack+0x16b>
 a20:	93 2d       	mov	r25, r3
 a22:	99 7f       	andi	r25, 0xF9	; 249
 a24:	b9 2e       	mov	r11, r25
 a26:	8f 36       	cpi	r24, 0x6F	; 111
 a28:	c1 f0       	breq	.+48     	; 0xa5a <__stack+0x15b>
 a2a:	18 f4       	brcc	.+6      	; 0xa32 <__stack+0x133>
 a2c:	88 35       	cpi	r24, 0x58	; 88
 a2e:	79 f0       	breq	.+30     	; 0xa4e <__stack+0x14f>
 a30:	b5 c0       	rjmp	.+362    	; 0xb9c <__stack+0x29d>
 a32:	80 37       	cpi	r24, 0x70	; 112
 a34:	19 f0       	breq	.+6      	; 0xa3c <__stack+0x13d>
 a36:	88 37       	cpi	r24, 0x78	; 120
 a38:	21 f0       	breq	.+8      	; 0xa42 <__stack+0x143>
 a3a:	b0 c0       	rjmp	.+352    	; 0xb9c <__stack+0x29d>
 a3c:	e9 2f       	mov	r30, r25
 a3e:	e0 61       	ori	r30, 0x10	; 16
 a40:	be 2e       	mov	r11, r30
 a42:	b4 fe       	sbrs	r11, 4
 a44:	0d c0       	rjmp	.+26     	; 0xa60 <__stack+0x161>
 a46:	fb 2d       	mov	r31, r11
 a48:	f4 60       	ori	r31, 0x04	; 4
 a4a:	bf 2e       	mov	r11, r31
 a4c:	09 c0       	rjmp	.+18     	; 0xa60 <__stack+0x161>
 a4e:	34 fe       	sbrs	r3, 4
 a50:	0a c0       	rjmp	.+20     	; 0xa66 <__stack+0x167>
 a52:	29 2f       	mov	r18, r25
 a54:	26 60       	ori	r18, 0x06	; 6
 a56:	b2 2e       	mov	r11, r18
 a58:	06 c0       	rjmp	.+12     	; 0xa66 <__stack+0x167>
 a5a:	28 e0       	ldi	r18, 0x08	; 8
 a5c:	30 e0       	ldi	r19, 0x00	; 0
 a5e:	05 c0       	rjmp	.+10     	; 0xa6a <__stack+0x16b>
 a60:	20 e1       	ldi	r18, 0x10	; 16
 a62:	30 e0       	ldi	r19, 0x00	; 0
 a64:	02 c0       	rjmp	.+4      	; 0xa6a <__stack+0x16b>
 a66:	20 e1       	ldi	r18, 0x10	; 16
 a68:	32 e0       	ldi	r19, 0x02	; 2
 a6a:	f8 01       	movw	r30, r16
 a6c:	b7 fe       	sbrs	r11, 7
 a6e:	07 c0       	rjmp	.+14     	; 0xa7e <__stack+0x17f>
 a70:	60 81       	ld	r22, Z
 a72:	71 81       	ldd	r23, Z+1	; 0x01
 a74:	82 81       	ldd	r24, Z+2	; 0x02
 a76:	93 81       	ldd	r25, Z+3	; 0x03
 a78:	0c 5f       	subi	r16, 0xFC	; 252
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	06 c0       	rjmp	.+12     	; 0xa8a <__stack+0x18b>
 a7e:	60 81       	ld	r22, Z
 a80:	71 81       	ldd	r23, Z+1	; 0x01
 a82:	80 e0       	ldi	r24, 0x00	; 0
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	0e 5f       	subi	r16, 0xFE	; 254
 a88:	1f 4f       	sbci	r17, 0xFF	; 255
 a8a:	a3 01       	movw	r20, r6
 a8c:	0e 94 2a 06 	call	0xc54	; 0xc54 <__ultoa_invert>
 a90:	88 2e       	mov	r8, r24
 a92:	86 18       	sub	r8, r6
 a94:	fb 2d       	mov	r31, r11
 a96:	ff 77       	andi	r31, 0x7F	; 127
 a98:	3f 2e       	mov	r3, r31
 a9a:	36 fe       	sbrs	r3, 6
 a9c:	0d c0       	rjmp	.+26     	; 0xab8 <__stack+0x1b9>
 a9e:	23 2d       	mov	r18, r3
 aa0:	2e 7f       	andi	r18, 0xFE	; 254
 aa2:	a2 2e       	mov	r10, r18
 aa4:	89 14       	cp	r8, r9
 aa6:	58 f4       	brcc	.+22     	; 0xabe <__stack+0x1bf>
 aa8:	34 fe       	sbrs	r3, 4
 aaa:	0b c0       	rjmp	.+22     	; 0xac2 <__stack+0x1c3>
 aac:	32 fc       	sbrc	r3, 2
 aae:	09 c0       	rjmp	.+18     	; 0xac2 <__stack+0x1c3>
 ab0:	83 2d       	mov	r24, r3
 ab2:	8e 7e       	andi	r24, 0xEE	; 238
 ab4:	a8 2e       	mov	r10, r24
 ab6:	05 c0       	rjmp	.+10     	; 0xac2 <__stack+0x1c3>
 ab8:	b8 2c       	mov	r11, r8
 aba:	a3 2c       	mov	r10, r3
 abc:	03 c0       	rjmp	.+6      	; 0xac4 <__stack+0x1c5>
 abe:	b8 2c       	mov	r11, r8
 ac0:	01 c0       	rjmp	.+2      	; 0xac4 <__stack+0x1c5>
 ac2:	b9 2c       	mov	r11, r9
 ac4:	a4 fe       	sbrs	r10, 4
 ac6:	0f c0       	rjmp	.+30     	; 0xae6 <__stack+0x1e7>
 ac8:	fe 01       	movw	r30, r28
 aca:	e8 0d       	add	r30, r8
 acc:	f1 1d       	adc	r31, r1
 ace:	80 81       	ld	r24, Z
 ad0:	80 33       	cpi	r24, 0x30	; 48
 ad2:	21 f4       	brne	.+8      	; 0xadc <__stack+0x1dd>
 ad4:	9a 2d       	mov	r25, r10
 ad6:	99 7e       	andi	r25, 0xE9	; 233
 ad8:	a9 2e       	mov	r10, r25
 ada:	09 c0       	rjmp	.+18     	; 0xaee <__stack+0x1ef>
 adc:	a2 fe       	sbrs	r10, 2
 ade:	06 c0       	rjmp	.+12     	; 0xaec <__stack+0x1ed>
 ae0:	b3 94       	inc	r11
 ae2:	b3 94       	inc	r11
 ae4:	04 c0       	rjmp	.+8      	; 0xaee <__stack+0x1ef>
 ae6:	8a 2d       	mov	r24, r10
 ae8:	86 78       	andi	r24, 0x86	; 134
 aea:	09 f0       	breq	.+2      	; 0xaee <__stack+0x1ef>
 aec:	b3 94       	inc	r11
 aee:	a3 fc       	sbrc	r10, 3
 af0:	11 c0       	rjmp	.+34     	; 0xb14 <__stack+0x215>
 af2:	a0 fe       	sbrs	r10, 0
 af4:	06 c0       	rjmp	.+12     	; 0xb02 <__stack+0x203>
 af6:	b2 14       	cp	r11, r2
 af8:	88 f4       	brcc	.+34     	; 0xb1c <__stack+0x21d>
 afa:	28 0c       	add	r2, r8
 afc:	92 2c       	mov	r9, r2
 afe:	9b 18       	sub	r9, r11
 b00:	0e c0       	rjmp	.+28     	; 0xb1e <__stack+0x21f>
 b02:	b2 14       	cp	r11, r2
 b04:	60 f4       	brcc	.+24     	; 0xb1e <__stack+0x21f>
 b06:	b6 01       	movw	r22, r12
 b08:	80 e2       	ldi	r24, 0x20	; 32
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b10:	b3 94       	inc	r11
 b12:	f7 cf       	rjmp	.-18     	; 0xb02 <__stack+0x203>
 b14:	b2 14       	cp	r11, r2
 b16:	18 f4       	brcc	.+6      	; 0xb1e <__stack+0x21f>
 b18:	2b 18       	sub	r2, r11
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <__stack+0x221>
 b1c:	98 2c       	mov	r9, r8
 b1e:	21 2c       	mov	r2, r1
 b20:	a4 fe       	sbrs	r10, 4
 b22:	10 c0       	rjmp	.+32     	; 0xb44 <__stack+0x245>
 b24:	b6 01       	movw	r22, r12
 b26:	80 e3       	ldi	r24, 0x30	; 48
 b28:	90 e0       	ldi	r25, 0x00	; 0
 b2a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b2e:	a2 fe       	sbrs	r10, 2
 b30:	17 c0       	rjmp	.+46     	; 0xb60 <__stack+0x261>
 b32:	a1 fc       	sbrc	r10, 1
 b34:	03 c0       	rjmp	.+6      	; 0xb3c <__stack+0x23d>
 b36:	88 e7       	ldi	r24, 0x78	; 120
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__stack+0x241>
 b3c:	88 e5       	ldi	r24, 0x58	; 88
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	b6 01       	movw	r22, r12
 b42:	0c c0       	rjmp	.+24     	; 0xb5c <__stack+0x25d>
 b44:	8a 2d       	mov	r24, r10
 b46:	86 78       	andi	r24, 0x86	; 134
 b48:	59 f0       	breq	.+22     	; 0xb60 <__stack+0x261>
 b4a:	a1 fe       	sbrs	r10, 1
 b4c:	02 c0       	rjmp	.+4      	; 0xb52 <__stack+0x253>
 b4e:	8b e2       	ldi	r24, 0x2B	; 43
 b50:	01 c0       	rjmp	.+2      	; 0xb54 <__stack+0x255>
 b52:	80 e2       	ldi	r24, 0x20	; 32
 b54:	a7 fc       	sbrc	r10, 7
 b56:	8d e2       	ldi	r24, 0x2D	; 45
 b58:	b6 01       	movw	r22, r12
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b60:	89 14       	cp	r8, r9
 b62:	38 f4       	brcc	.+14     	; 0xb72 <__stack+0x273>
 b64:	b6 01       	movw	r22, r12
 b66:	80 e3       	ldi	r24, 0x30	; 48
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b6e:	9a 94       	dec	r9
 b70:	f7 cf       	rjmp	.-18     	; 0xb60 <__stack+0x261>
 b72:	8a 94       	dec	r8
 b74:	f3 01       	movw	r30, r6
 b76:	e8 0d       	add	r30, r8
 b78:	f1 1d       	adc	r31, r1
 b7a:	80 81       	ld	r24, Z
 b7c:	b6 01       	movw	r22, r12
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b84:	81 10       	cpse	r8, r1
 b86:	f5 cf       	rjmp	.-22     	; 0xb72 <__stack+0x273>
 b88:	22 20       	and	r2, r2
 b8a:	09 f4       	brne	.+2      	; 0xb8e <__stack+0x28f>
 b8c:	42 ce       	rjmp	.-892    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 b8e:	b6 01       	movw	r22, r12
 b90:	80 e2       	ldi	r24, 0x20	; 32
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	0e 94 ee 05 	call	0xbdc	; 0xbdc <fputc>
 b98:	2a 94       	dec	r2
 b9a:	f6 cf       	rjmp	.-20     	; 0xb88 <__stack+0x289>
 b9c:	f6 01       	movw	r30, r12
 b9e:	86 81       	ldd	r24, Z+6	; 0x06
 ba0:	97 81       	ldd	r25, Z+7	; 0x07
 ba2:	02 c0       	rjmp	.+4      	; 0xba8 <__stack+0x2a9>
 ba4:	8f ef       	ldi	r24, 0xFF	; 255
 ba6:	9f ef       	ldi	r25, 0xFF	; 255
 ba8:	2b 96       	adiw	r28, 0x0b	; 11
 baa:	e2 e1       	ldi	r30, 0x12	; 18
 bac:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <__epilogue_restores__>

00000bb0 <strnlen_P>:
 bb0:	fc 01       	movw	r30, r24
 bb2:	05 90       	lpm	r0, Z+
 bb4:	61 50       	subi	r22, 0x01	; 1
 bb6:	70 40       	sbci	r23, 0x00	; 0
 bb8:	01 10       	cpse	r0, r1
 bba:	d8 f7       	brcc	.-10     	; 0xbb2 <strnlen_P+0x2>
 bbc:	80 95       	com	r24
 bbe:	90 95       	com	r25
 bc0:	8e 0f       	add	r24, r30
 bc2:	9f 1f       	adc	r25, r31
 bc4:	08 95       	ret

00000bc6 <strnlen>:
 bc6:	fc 01       	movw	r30, r24
 bc8:	61 50       	subi	r22, 0x01	; 1
 bca:	70 40       	sbci	r23, 0x00	; 0
 bcc:	01 90       	ld	r0, Z+
 bce:	01 10       	cpse	r0, r1
 bd0:	d8 f7       	brcc	.-10     	; 0xbc8 <strnlen+0x2>
 bd2:	80 95       	com	r24
 bd4:	90 95       	com	r25
 bd6:	8e 0f       	add	r24, r30
 bd8:	9f 1f       	adc	r25, r31
 bda:	08 95       	ret

00000bdc <fputc>:
 bdc:	0f 93       	push	r16
 bde:	1f 93       	push	r17
 be0:	cf 93       	push	r28
 be2:	df 93       	push	r29
 be4:	fb 01       	movw	r30, r22
 be6:	23 81       	ldd	r18, Z+3	; 0x03
 be8:	21 fd       	sbrc	r18, 1
 bea:	03 c0       	rjmp	.+6      	; 0xbf2 <fputc+0x16>
 bec:	8f ef       	ldi	r24, 0xFF	; 255
 bee:	9f ef       	ldi	r25, 0xFF	; 255
 bf0:	2c c0       	rjmp	.+88     	; 0xc4a <fputc+0x6e>
 bf2:	22 ff       	sbrs	r18, 2
 bf4:	16 c0       	rjmp	.+44     	; 0xc22 <fputc+0x46>
 bf6:	46 81       	ldd	r20, Z+6	; 0x06
 bf8:	57 81       	ldd	r21, Z+7	; 0x07
 bfa:	24 81       	ldd	r18, Z+4	; 0x04
 bfc:	35 81       	ldd	r19, Z+5	; 0x05
 bfe:	42 17       	cp	r20, r18
 c00:	53 07       	cpc	r21, r19
 c02:	44 f4       	brge	.+16     	; 0xc14 <fputc+0x38>
 c04:	a0 81       	ld	r26, Z
 c06:	b1 81       	ldd	r27, Z+1	; 0x01
 c08:	9d 01       	movw	r18, r26
 c0a:	2f 5f       	subi	r18, 0xFF	; 255
 c0c:	3f 4f       	sbci	r19, 0xFF	; 255
 c0e:	31 83       	std	Z+1, r19	; 0x01
 c10:	20 83       	st	Z, r18
 c12:	8c 93       	st	X, r24
 c14:	26 81       	ldd	r18, Z+6	; 0x06
 c16:	37 81       	ldd	r19, Z+7	; 0x07
 c18:	2f 5f       	subi	r18, 0xFF	; 255
 c1a:	3f 4f       	sbci	r19, 0xFF	; 255
 c1c:	37 83       	std	Z+7, r19	; 0x07
 c1e:	26 83       	std	Z+6, r18	; 0x06
 c20:	14 c0       	rjmp	.+40     	; 0xc4a <fputc+0x6e>
 c22:	8b 01       	movw	r16, r22
 c24:	ec 01       	movw	r28, r24
 c26:	fb 01       	movw	r30, r22
 c28:	00 84       	ldd	r0, Z+8	; 0x08
 c2a:	f1 85       	ldd	r31, Z+9	; 0x09
 c2c:	e0 2d       	mov	r30, r0
 c2e:	09 95       	icall
 c30:	89 2b       	or	r24, r25
 c32:	e1 f6       	brne	.-72     	; 0xbec <fputc+0x10>
 c34:	d8 01       	movw	r26, r16
 c36:	16 96       	adiw	r26, 0x06	; 6
 c38:	8d 91       	ld	r24, X+
 c3a:	9c 91       	ld	r25, X
 c3c:	17 97       	sbiw	r26, 0x07	; 7
 c3e:	01 96       	adiw	r24, 0x01	; 1
 c40:	17 96       	adiw	r26, 0x07	; 7
 c42:	9c 93       	st	X, r25
 c44:	8e 93       	st	-X, r24
 c46:	16 97       	sbiw	r26, 0x06	; 6
 c48:	ce 01       	movw	r24, r28
 c4a:	df 91       	pop	r29
 c4c:	cf 91       	pop	r28
 c4e:	1f 91       	pop	r17
 c50:	0f 91       	pop	r16
 c52:	08 95       	ret

00000c54 <__ultoa_invert>:
 c54:	fa 01       	movw	r30, r20
 c56:	aa 27       	eor	r26, r26
 c58:	28 30       	cpi	r18, 0x08	; 8
 c5a:	51 f1       	breq	.+84     	; 0xcb0 <__ultoa_invert+0x5c>
 c5c:	20 31       	cpi	r18, 0x10	; 16
 c5e:	81 f1       	breq	.+96     	; 0xcc0 <__ultoa_invert+0x6c>
 c60:	e8 94       	clt
 c62:	6f 93       	push	r22
 c64:	6e 7f       	andi	r22, 0xFE	; 254
 c66:	6e 5f       	subi	r22, 0xFE	; 254
 c68:	7f 4f       	sbci	r23, 0xFF	; 255
 c6a:	8f 4f       	sbci	r24, 0xFF	; 255
 c6c:	9f 4f       	sbci	r25, 0xFF	; 255
 c6e:	af 4f       	sbci	r26, 0xFF	; 255
 c70:	b1 e0       	ldi	r27, 0x01	; 1
 c72:	3e d0       	rcall	.+124    	; 0xcf0 <__ultoa_invert+0x9c>
 c74:	b4 e0       	ldi	r27, 0x04	; 4
 c76:	3c d0       	rcall	.+120    	; 0xcf0 <__ultoa_invert+0x9c>
 c78:	67 0f       	add	r22, r23
 c7a:	78 1f       	adc	r23, r24
 c7c:	89 1f       	adc	r24, r25
 c7e:	9a 1f       	adc	r25, r26
 c80:	a1 1d       	adc	r26, r1
 c82:	68 0f       	add	r22, r24
 c84:	79 1f       	adc	r23, r25
 c86:	8a 1f       	adc	r24, r26
 c88:	91 1d       	adc	r25, r1
 c8a:	a1 1d       	adc	r26, r1
 c8c:	6a 0f       	add	r22, r26
 c8e:	71 1d       	adc	r23, r1
 c90:	81 1d       	adc	r24, r1
 c92:	91 1d       	adc	r25, r1
 c94:	a1 1d       	adc	r26, r1
 c96:	20 d0       	rcall	.+64     	; 0xcd8 <__ultoa_invert+0x84>
 c98:	09 f4       	brne	.+2      	; 0xc9c <__ultoa_invert+0x48>
 c9a:	68 94       	set
 c9c:	3f 91       	pop	r19
 c9e:	2a e0       	ldi	r18, 0x0A	; 10
 ca0:	26 9f       	mul	r18, r22
 ca2:	11 24       	eor	r1, r1
 ca4:	30 19       	sub	r19, r0
 ca6:	30 5d       	subi	r19, 0xD0	; 208
 ca8:	31 93       	st	Z+, r19
 caa:	de f6       	brtc	.-74     	; 0xc62 <__ultoa_invert+0xe>
 cac:	cf 01       	movw	r24, r30
 cae:	08 95       	ret
 cb0:	46 2f       	mov	r20, r22
 cb2:	47 70       	andi	r20, 0x07	; 7
 cb4:	40 5d       	subi	r20, 0xD0	; 208
 cb6:	41 93       	st	Z+, r20
 cb8:	b3 e0       	ldi	r27, 0x03	; 3
 cba:	0f d0       	rcall	.+30     	; 0xcda <__ultoa_invert+0x86>
 cbc:	c9 f7       	brne	.-14     	; 0xcb0 <__ultoa_invert+0x5c>
 cbe:	f6 cf       	rjmp	.-20     	; 0xcac <__ultoa_invert+0x58>
 cc0:	46 2f       	mov	r20, r22
 cc2:	4f 70       	andi	r20, 0x0F	; 15
 cc4:	40 5d       	subi	r20, 0xD0	; 208
 cc6:	4a 33       	cpi	r20, 0x3A	; 58
 cc8:	18 f0       	brcs	.+6      	; 0xcd0 <__ultoa_invert+0x7c>
 cca:	49 5d       	subi	r20, 0xD9	; 217
 ccc:	31 fd       	sbrc	r19, 1
 cce:	40 52       	subi	r20, 0x20	; 32
 cd0:	41 93       	st	Z+, r20
 cd2:	02 d0       	rcall	.+4      	; 0xcd8 <__ultoa_invert+0x84>
 cd4:	a9 f7       	brne	.-22     	; 0xcc0 <__ultoa_invert+0x6c>
 cd6:	ea cf       	rjmp	.-44     	; 0xcac <__ultoa_invert+0x58>
 cd8:	b4 e0       	ldi	r27, 0x04	; 4
 cda:	a6 95       	lsr	r26
 cdc:	97 95       	ror	r25
 cde:	87 95       	ror	r24
 ce0:	77 95       	ror	r23
 ce2:	67 95       	ror	r22
 ce4:	ba 95       	dec	r27
 ce6:	c9 f7       	brne	.-14     	; 0xcda <__ultoa_invert+0x86>
 ce8:	00 97       	sbiw	r24, 0x00	; 0
 cea:	61 05       	cpc	r22, r1
 cec:	71 05       	cpc	r23, r1
 cee:	08 95       	ret
 cf0:	9b 01       	movw	r18, r22
 cf2:	ac 01       	movw	r20, r24
 cf4:	0a 2e       	mov	r0, r26
 cf6:	06 94       	lsr	r0
 cf8:	57 95       	ror	r21
 cfa:	47 95       	ror	r20
 cfc:	37 95       	ror	r19
 cfe:	27 95       	ror	r18
 d00:	ba 95       	dec	r27
 d02:	c9 f7       	brne	.-14     	; 0xcf6 <__ultoa_invert+0xa2>
 d04:	62 0f       	add	r22, r18
 d06:	73 1f       	adc	r23, r19
 d08:	84 1f       	adc	r24, r20
 d0a:	95 1f       	adc	r25, r21
 d0c:	a0 1d       	adc	r26, r0
 d0e:	08 95       	ret

00000d10 <__prologue_saves__>:
 d10:	2f 92       	push	r2
 d12:	3f 92       	push	r3
 d14:	4f 92       	push	r4
 d16:	5f 92       	push	r5
 d18:	6f 92       	push	r6
 d1a:	7f 92       	push	r7
 d1c:	8f 92       	push	r8
 d1e:	9f 92       	push	r9
 d20:	af 92       	push	r10
 d22:	bf 92       	push	r11
 d24:	cf 92       	push	r12
 d26:	df 92       	push	r13
 d28:	ef 92       	push	r14
 d2a:	ff 92       	push	r15
 d2c:	0f 93       	push	r16
 d2e:	1f 93       	push	r17
 d30:	cf 93       	push	r28
 d32:	df 93       	push	r29
 d34:	cd b7       	in	r28, 0x3d	; 61
 d36:	de b7       	in	r29, 0x3e	; 62
 d38:	ca 1b       	sub	r28, r26
 d3a:	db 0b       	sbc	r29, r27
 d3c:	0f b6       	in	r0, 0x3f	; 63
 d3e:	f8 94       	cli
 d40:	de bf       	out	0x3e, r29	; 62
 d42:	0f be       	out	0x3f, r0	; 63
 d44:	cd bf       	out	0x3d, r28	; 61
 d46:	09 94       	ijmp

00000d48 <__epilogue_restores__>:
 d48:	2a 88       	ldd	r2, Y+18	; 0x12
 d4a:	39 88       	ldd	r3, Y+17	; 0x11
 d4c:	48 88       	ldd	r4, Y+16	; 0x10
 d4e:	5f 84       	ldd	r5, Y+15	; 0x0f
 d50:	6e 84       	ldd	r6, Y+14	; 0x0e
 d52:	7d 84       	ldd	r7, Y+13	; 0x0d
 d54:	8c 84       	ldd	r8, Y+12	; 0x0c
 d56:	9b 84       	ldd	r9, Y+11	; 0x0b
 d58:	aa 84       	ldd	r10, Y+10	; 0x0a
 d5a:	b9 84       	ldd	r11, Y+9	; 0x09
 d5c:	c8 84       	ldd	r12, Y+8	; 0x08
 d5e:	df 80       	ldd	r13, Y+7	; 0x07
 d60:	ee 80       	ldd	r14, Y+6	; 0x06
 d62:	fd 80       	ldd	r15, Y+5	; 0x05
 d64:	0c 81       	ldd	r16, Y+4	; 0x04
 d66:	1b 81       	ldd	r17, Y+3	; 0x03
 d68:	aa 81       	ldd	r26, Y+2	; 0x02
 d6a:	b9 81       	ldd	r27, Y+1	; 0x01
 d6c:	ce 0f       	add	r28, r30
 d6e:	d1 1d       	adc	r29, r1
 d70:	0f b6       	in	r0, 0x3f	; 63
 d72:	f8 94       	cli
 d74:	de bf       	out	0x3e, r29	; 62
 d76:	0f be       	out	0x3f, r0	; 63
 d78:	cd bf       	out	0x3d, r28	; 61
 d7a:	ed 01       	movw	r28, r26
 d7c:	08 95       	ret

00000d7e <_exit>:
 d7e:	f8 94       	cli

00000d80 <__stop_program>:
 d80:	ff cf       	rjmp	.-2      	; 0xd80 <__stop_program>
